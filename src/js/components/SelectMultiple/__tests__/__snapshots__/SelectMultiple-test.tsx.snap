// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SelectMultiple children 1`] = `
.c1 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c5 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c9 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-self: center;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  min-width: auto;
}

.c10 {
  display: inline-block;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c10 g {
  fill: inherit;
  stroke: inherit;
}

.c10 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c10 *[stroke*='#'],
.c10 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c10 *[fill-rule],
.c10 *[FILL-RULE],
.c10 *[fill*='#'],
.c10 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c2:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c2:focus >circle,
.c2:focus >ellipse,
.c2:focus >line,
.c2:focus >path,
.c2:focus >polygon,
.c2:focus >polyline,
.c2:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c2:focus ::-moz-focus-inner {
  border: 0;
}

.c2:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c2:focus:not(:focus-visible) >circle,
.c2:focus:not(:focus-visible) >ellipse,
.c2:focus:not(:focus-visible) >line,
.c2:focus:not(:focus-visible) >path,
.c2:focus:not(:focus-visible) >polygon,
.c2:focus:not(:focus-visible) >polyline,
.c2:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c2:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c7 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
  border: none;
  outline: none;
  border: none;
}

.c7::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c7::-moz-placeholder {
  color: #AAAAAA;
}

.c7:-ms-input-placeholder {
  color: #AAAAAA;
}

.c7 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c7::-moz-focus-inner {
  border: none;
  outline: none;
}

.c7:-moz-placeholder,
.c7::-moz-placeholder {
  opacity: 1;
}

.c6 {
  position: relative;
  width: 100%;
}

.c8 {
  cursor: pointer;
}

.c3 {
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c9 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  class="c0"
>
  <div
    class="c1"
  >
    <button
      aria-expanded="false"
      aria-haspopup="listbox"
      aria-label="Open drop. 0 selected"
      class="c2 c3"
      tabindex="0"
      type="button"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <div
            class="c6"
          >
            <input
              autocomplete="off"
              class="c7 c8"
              inert=""
              readonly=""
              tabindex="-1"
              type="text"
              value=""
            />
          </div>
        </div>
        <div
          class="c9"
        >
          <svg
            aria-label="FormDown"
            class="c10"
            viewBox="0 0 24 24"
          >
            <path
              d="m18 9-6 6-6-6"
              fill="none"
              stroke="#000"
              stroke-width="2"
            />
          </svg>
        </div>
      </div>
    </button>
  </div>
</div>
`;

exports[`SelectMultiple defaultValue 1`] = `
.c1 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c5 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c9 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-self: center;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  min-width: auto;
}

.c10 {
  display: inline-block;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c10 g {
  fill: inherit;
  stroke: inherit;
}

.c10 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c10 *[stroke*='#'],
.c10 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c10 *[fill-rule],
.c10 *[FILL-RULE],
.c10 *[fill*='#'],
.c10 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c2:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c2:focus >circle,
.c2:focus >ellipse,
.c2:focus >line,
.c2:focus >path,
.c2:focus >polygon,
.c2:focus >polyline,
.c2:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c2:focus ::-moz-focus-inner {
  border: 0;
}

.c2:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c2:focus:not(:focus-visible) >circle,
.c2:focus:not(:focus-visible) >ellipse,
.c2:focus:not(:focus-visible) >line,
.c2:focus:not(:focus-visible) >path,
.c2:focus:not(:focus-visible) >polygon,
.c2:focus:not(:focus-visible) >polyline,
.c2:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c2:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c7 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
  border: none;
  outline: none;
  border: none;
}

.c7::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c7::-moz-placeholder {
  color: #AAAAAA;
}

.c7:-ms-input-placeholder {
  color: #AAAAAA;
}

.c7 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c7::-moz-focus-inner {
  border: none;
  outline: none;
}

.c7:-moz-placeholder,
.c7::-moz-placeholder {
  opacity: 1;
}

.c6 {
  position: relative;
  width: 100%;
}

.c8 {
  cursor: pointer;
}

.c3 {
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c9 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  class="c0"
>
  <div
    class="c1"
  >
    <button
      aria-expanded="false"
      aria-haspopup="listbox"
      aria-label="Open drop. 1 selected"
      class="c2 c3"
      tabindex="0"
      type="button"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <div
            class="c6"
          >
            <input
              autocomplete="off"
              class="c7 c8"
              inert=""
              readonly=""
              tabindex="-1"
              type="text"
              value="one"
            />
          </div>
        </div>
        <div
          class="c9"
        >
          <svg
            aria-label="FormDown"
            class="c10"
            viewBox="0 0 24 24"
          >
            <path
              d="m18 9-6 6-6-6"
              fill="none"
              stroke="#000"
              stroke-width="2"
            />
          </svg>
        </div>
      </div>
    </button>
  </div>
  ,
</div>
`;

exports[`SelectMultiple disabled 1`] = `
.c1 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c5 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c9 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-self: center;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  min-width: auto;
}

.c10 {
  display: inline-block;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c10 g {
  fill: inherit;
  stroke: inherit;
}

.c10 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c10 *[stroke*='#'],
.c10 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c10 *[fill-rule],
.c10 *[FILL-RULE],
.c10 *[fill*='#'],
.c10 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  opacity: 0.3;
  cursor: default;
}

.c2:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c2:focus >circle,
.c2:focus >ellipse,
.c2:focus >line,
.c2:focus >path,
.c2:focus >polygon,
.c2:focus >polyline,
.c2:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c2:focus ::-moz-focus-inner {
  border: 0;
}

.c2:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c2:focus:not(:focus-visible) >circle,
.c2:focus:not(:focus-visible) >ellipse,
.c2:focus:not(:focus-visible) >line,
.c2:focus:not(:focus-visible) >path,
.c2:focus:not(:focus-visible) >polygon,
.c2:focus:not(:focus-visible) >polyline,
.c2:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c2:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c7 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
  border: none;
  outline: none;
  border: none;
}

.c7::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c7::-moz-placeholder {
  color: #AAAAAA;
}

.c7:-ms-input-placeholder {
  color: #AAAAAA;
}

.c7 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c7::-moz-focus-inner {
  border: none;
  outline: none;
}

.c7:-moz-placeholder,
.c7::-moz-placeholder {
  opacity: 1;
}

.c6 {
  position: relative;
  width: 100%;
}

.c8 {
  cursor: default;
}

.c3 {
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c9 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  class="c0"
>
  <div
    class="c1"
  >
    <button
      aria-expanded="false"
      aria-haspopup="listbox"
      aria-label="Open drop. 0 selected"
      class="c2 c3"
      disabled=""
      tabindex="0"
      type="button"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <div
            class="c6"
          >
            <input
              autocomplete="off"
              class="c7 c8"
              inert=""
              readonly=""
              tabindex="-1"
              type="text"
              value=""
            />
          </div>
        </div>
        <div
          class="c9"
        >
          <svg
            aria-label="FormDown"
            class="c10"
            viewBox="0 0 24 24"
          >
            <path
              d="m18 9-6 6-6-6"
              fill="none"
              stroke="#000"
              stroke-width="2"
            />
          </svg>
        </div>
      </div>
    </button>
  </div>
</div>
`;

exports[`SelectMultiple keyboard interactions 1`] = `
.c1 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c5 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c9 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-self: center;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  min-width: auto;
}

.c10 {
  display: inline-block;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c10 g {
  fill: inherit;
  stroke: inherit;
}

.c10 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c10 *[stroke*='#'],
.c10 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c10 *[fill-rule],
.c10 *[FILL-RULE],
.c10 *[fill*='#'],
.c10 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c2:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c2:focus >circle,
.c2:focus >ellipse,
.c2:focus >line,
.c2:focus >path,
.c2:focus >polygon,
.c2:focus >polyline,
.c2:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c2:focus ::-moz-focus-inner {
  border: 0;
}

.c2:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c2:focus:not(:focus-visible) >circle,
.c2:focus:not(:focus-visible) >ellipse,
.c2:focus:not(:focus-visible) >line,
.c2:focus:not(:focus-visible) >path,
.c2:focus:not(:focus-visible) >polygon,
.c2:focus:not(:focus-visible) >polyline,
.c2:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c2:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c7 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
  border: none;
  outline: none;
  border: none;
}

.c7::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c7::-moz-placeholder {
  color: #AAAAAA;
}

.c7:-ms-input-placeholder {
  color: #AAAAAA;
}

.c7 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c7::-moz-focus-inner {
  border: none;
  outline: none;
}

.c7:-moz-placeholder,
.c7::-moz-placeholder {
  opacity: 1;
}

.c6 {
  position: relative;
  width: 100%;
}

.c8 {
  cursor: pointer;
}

.c3 {
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c9 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

<div
  class="c0"
>
  <div
    class="c1"
  >
    <button
      aria-expanded="true"
      aria-haspopup="listbox"
      aria-label="Open drop. 2 selected"
      class="c2 c3"
      tabindex="0"
      type="button"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <div
            class="c6"
          >
            <input
              autocomplete="off"
              class="c7 c8"
              inert=""
              readonly=""
              tabindex="-1"
              type="text"
              value="2 selected"
            />
          </div>
        </div>
        <div
          class="c9"
        >
          <svg
            aria-label="FormDown"
            class="c10"
            viewBox="0 0 24 24"
          >
            <path
              d="m18 9-6 6-6-6"
              fill="none"
              stroke="#000"
              stroke-width="2"
            />
          </svg>
        </div>
      </div>
    </button>
  </div>
</div>
`;

exports[`SelectMultiple null value 1`] = `
<DocumentFragment>
  .c1 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c5 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c9 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-self: center;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  min-width: auto;
}

.c10 {
  display: inline-block;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c10 g {
  fill: inherit;
  stroke: inherit;
}

.c10 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c10 *[stroke*='#'],
.c10 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c10 *[fill-rule],
.c10 *[FILL-RULE],
.c10 *[fill*='#'],
.c10 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c2:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c2:focus >circle,
.c2:focus >ellipse,
.c2:focus >line,
.c2:focus >path,
.c2:focus >polygon,
.c2:focus >polyline,
.c2:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c2:focus ::-moz-focus-inner {
  border: 0;
}

.c2:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c2:focus:not(:focus-visible) >circle,
.c2:focus:not(:focus-visible) >ellipse,
.c2:focus:not(:focus-visible) >line,
.c2:focus:not(:focus-visible) >path,
.c2:focus:not(:focus-visible) >polygon,
.c2:focus:not(:focus-visible) >polyline,
.c2:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c2:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c7 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
  border: none;
  outline: none;
  border: none;
}

.c7::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c7::-moz-placeholder {
  color: #AAAAAA;
}

.c7:-ms-input-placeholder {
  color: #AAAAAA;
}

.c7 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c7::-moz-focus-inner {
  border: none;
  outline: none;
}

.c7:-moz-placeholder,
.c7::-moz-placeholder {
  opacity: 1;
}

.c6 {
  position: relative;
  width: 100%;
}

.c8 {
  cursor: pointer;
}

.c3 {
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c9 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
    class="c0"
  >
    <div
      class="c1"
    >
      <button
        aria-expanded="false"
        aria-haspopup="listbox"
        aria-label="Open drop. 0 selected"
        class="c2 c3"
        tabindex="0"
        type="button"
      >
        <div
          class="c4"
        >
          <div
            class="c5"
          >
            <div
              class="c6"
            >
              <input
                autocomplete="off"
                class="c7 c8"
                inert=""
                readonly=""
                tabindex="-1"
                type="text"
                value=""
              />
            </div>
          </div>
          <div
            class="c9"
          >
            <svg
              aria-label="FormDown"
              class="c10"
              viewBox="0 0 24 24"
            >
              <path
                d="m18 9-6 6-6-6"
                fill="none"
                stroke="#000"
                stroke-width="2"
              />
            </svg>
          </div>
        </div>
      </button>
    </div>
  </div>
</DocumentFragment>
`;

exports[`SelectMultiple placeholder 1`] = `
.c1 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c5 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c9 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-self: center;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  min-width: auto;
}

.c10 {
  display: inline-block;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c10 g {
  fill: inherit;
  stroke: inherit;
}

.c10 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c10 *[stroke*='#'],
.c10 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c10 *[fill-rule],
.c10 *[FILL-RULE],
.c10 *[fill*='#'],
.c10 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c2:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c2:focus >circle,
.c2:focus >ellipse,
.c2:focus >line,
.c2:focus >path,
.c2:focus >polygon,
.c2:focus >polyline,
.c2:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c2:focus ::-moz-focus-inner {
  border: 0;
}

.c2:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c2:focus:not(:focus-visible) >circle,
.c2:focus:not(:focus-visible) >ellipse,
.c2:focus:not(:focus-visible) >line,
.c2:focus:not(:focus-visible) >path,
.c2:focus:not(:focus-visible) >polygon,
.c2:focus:not(:focus-visible) >polyline,
.c2:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c2:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c7 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
  border: none;
  outline: none;
  border: none;
}

.c7::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c7::-moz-placeholder {
  color: #AAAAAA;
}

.c7:-ms-input-placeholder {
  color: #AAAAAA;
}

.c7 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c7::-moz-focus-inner {
  border: none;
  outline: none;
}

.c7:-moz-placeholder,
.c7::-moz-placeholder {
  opacity: 1;
}

.c6 {
  position: relative;
  width: 100%;
}

.c8 {
  cursor: pointer;
}

.c3 {
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c9 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  class="c0"
>
  <div
    class="c1"
  >
    <button
      aria-expanded="false"
      aria-haspopup="listbox"
      aria-label="placeholder text. 0 selected"
      class="c2 c3"
      tabindex="0"
      type="button"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <div
            class="c6"
          >
            <input
              autocomplete="off"
              class="c7 c8"
              inert=""
              placeholder="placeholder text"
              readonly=""
              tabindex="-1"
              type="text"
              value=""
            />
          </div>
        </div>
        <div
          class="c9"
        >
          <svg
            aria-label="FormDown"
            class="c10"
            viewBox="0 0 24 24"
          >
            <path
              d="m18 9-6 6-6-6"
              fill="none"
              stroke="#000"
              stroke-width="2"
            />
          </svg>
        </div>
      </div>
    </button>
  </div>
</div>
`;

exports[`SelectMultiple renders selectMultiple outside grommet wrapper 1`] = `
.c0 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-self: center;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  min-width: auto;
}

.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c6::-moz-placeholder {
  color: #AAAAAA;
}

.c6:-ms-input-placeholder {
  color: #AAAAAA;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c5 {
  position: relative;
  width: 100%;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="Open drop. 0 selected"
    class="c1 c2"
    tabindex="0"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            inert=""
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
      >
        <svg
          aria-label="FormDown"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m18 9-6 6-6-6"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`SelectMultiple should display custom messages 1`] = `
<DocumentFragment>
  .c1 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c5 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c9 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-self: center;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  min-width: auto;
}

.c10 {
  display: inline-block;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c10 g {
  fill: inherit;
  stroke: inherit;
}

.c10 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c10 *[stroke*='#'],
.c10 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c10 *[fill-rule],
.c10 *[FILL-RULE],
.c10 *[fill*='#'],
.c10 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c2:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c2:focus >circle,
.c2:focus >ellipse,
.c2:focus >line,
.c2:focus >path,
.c2:focus >polygon,
.c2:focus >polyline,
.c2:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c2:focus ::-moz-focus-inner {
  border: 0;
}

.c2:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c2:focus:not(:focus-visible) >circle,
.c2:focus:not(:focus-visible) >ellipse,
.c2:focus:not(:focus-visible) >line,
.c2:focus:not(:focus-visible) >path,
.c2:focus:not(:focus-visible) >polygon,
.c2:focus:not(:focus-visible) >polyline,
.c2:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c2:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c7 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
  border: none;
  outline: none;
  border: none;
}

.c7::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c7::-moz-placeholder {
  color: #AAAAAA;
}

.c7:-ms-input-placeholder {
  color: #AAAAAA;
}

.c7 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c7::-moz-focus-inner {
  border: none;
  outline: none;
}

.c7:-moz-placeholder,
.c7::-moz-placeholder {
  opacity: 1;
}

.c6 {
  position: relative;
  width: 100%;
}

.c8 {
  cursor: pointer;
}

.c3 {
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c9 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

<div
    aria-hidden="true"
    class="c0"
  >
    <div
      class="c1"
    >
      <button
        aria-expanded="true"
        aria-haspopup="listbox"
        aria-label="Select. 3 selected"
        class="c2 c3"
        data-g-tabindex="0"
        tabindex="-1"
        type="button"
      >
        <div
          class="c4"
        >
          <div
            class="c5"
          >
            <div
              class="c6"
            >
              <input
                autocomplete="off"
                class="c7 c8"
                data-g-tabindex="-1"
                inert=""
                placeholder="Select"
                readonly=""
                tabindex="-1"
                type="text"
                value="Multiple Selected"
              />
            </div>
          </div>
          <div
            class="c9"
          >
            <svg
              aria-label="FormDown"
              class="c10"
              viewBox="0 0 24 24"
            >
              <path
                d="m18 9-6 6-6-6"
                fill="none"
                stroke="#000"
                stroke-width="2"
              />
            </svg>
          </div>
        </div>
      </button>
    </div>
  </div>
</DocumentFragment>
`;

exports[`SelectMultiple should display custom messages 2`] = `
<DocumentFragment>
  .c1 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c5 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c9 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-self: center;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  min-width: auto;
}

.c10 {
  display: inline-block;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c10 g {
  fill: inherit;
  stroke: inherit;
}

.c10 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c10 *[stroke*='#'],
.c10 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c10 *[fill-rule],
.c10 *[FILL-RULE],
.c10 *[fill*='#'],
.c10 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c2:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c2:focus >circle,
.c2:focus >ellipse,
.c2:focus >line,
.c2:focus >path,
.c2:focus >polygon,
.c2:focus >polyline,
.c2:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c2:focus ::-moz-focus-inner {
  border: 0;
}

.c2:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c2:focus:not(:focus-visible) >circle,
.c2:focus:not(:focus-visible) >ellipse,
.c2:focus:not(:focus-visible) >line,
.c2:focus:not(:focus-visible) >path,
.c2:focus:not(:focus-visible) >polygon,
.c2:focus:not(:focus-visible) >polyline,
.c2:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c2:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c7 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
  border: none;
  outline: none;
  border: none;
}

.c7::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c7::-moz-placeholder {
  color: #AAAAAA;
}

.c7:-ms-input-placeholder {
  color: #AAAAAA;
}

.c7 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c7::-moz-focus-inner {
  border: none;
  outline: none;
}

.c7:-moz-placeholder,
.c7::-moz-placeholder {
  opacity: 1;
}

.c6 {
  position: relative;
  width: 100%;
}

.c8 {
  cursor: pointer;
}

.c3 {
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c9 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

<div
    aria-hidden="true"
    class="c0"
  >
    <div
      class="c1"
    >
      <button
        aria-expanded="true"
        aria-haspopup="listbox"
        aria-label="Select. 0 selected"
        class="c2 c3"
        data-g-tabindex="0"
        tabindex="-1"
        type="button"
      >
        <div
          class="c4"
        >
          <div
            class="c5"
          >
            <div
              class="c6"
            >
              <input
                autocomplete="off"
                class="c7 c8"
                data-g-tabindex="-1"
                inert=""
                placeholder="Select"
                readonly=""
                tabindex="-1"
                type="text"
                value=""
              />
            </div>
          </div>
          <div
            class="c9"
          >
            <svg
              aria-label="FormDown"
              class="c10"
              viewBox="0 0 24 24"
            >
              <path
                d="m18 9-6 6-6-6"
                fill="none"
                stroke="#000"
                stroke-width="2"
              />
            </svg>
          </div>
        </div>
      </button>
    </div>
  </div>
</DocumentFragment>
`;

exports[`SelectMultiple should display custom messages 3`] = `
<DocumentFragment>
  .c1 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c5 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c9 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-self: center;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  min-width: auto;
}

.c10 {
  display: inline-block;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c10 g {
  fill: inherit;
  stroke: inherit;
}

.c10 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c10 *[stroke*='#'],
.c10 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c10 *[fill-rule],
.c10 *[FILL-RULE],
.c10 *[fill*='#'],
.c10 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c2:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c2:focus >circle,
.c2:focus >ellipse,
.c2:focus >line,
.c2:focus >path,
.c2:focus >polygon,
.c2:focus >polyline,
.c2:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c2:focus ::-moz-focus-inner {
  border: 0;
}

.c2:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c2:focus:not(:focus-visible) >circle,
.c2:focus:not(:focus-visible) >ellipse,
.c2:focus:not(:focus-visible) >line,
.c2:focus:not(:focus-visible) >path,
.c2:focus:not(:focus-visible) >polygon,
.c2:focus:not(:focus-visible) >polyline,
.c2:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c2:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c7 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
  border: none;
  outline: none;
  border: none;
}

.c7::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c7::-moz-placeholder {
  color: #AAAAAA;
}

.c7:-ms-input-placeholder {
  color: #AAAAAA;
}

.c7 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c7::-moz-focus-inner {
  border: none;
  outline: none;
}

.c7:-moz-placeholder,
.c7::-moz-placeholder {
  opacity: 1;
}

.c6 {
  position: relative;
  width: 100%;
}

.c8 {
  cursor: pointer;
}

.c3 {
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c9 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

<div
    aria-hidden="true"
    class="c0"
  >
    <div
      class="c1"
    >
      <button
        aria-expanded="true"
        aria-haspopup="listbox"
        aria-label="Select. 10 selected"
        class="c2 c3"
        data-g-tabindex="0"
        tabindex="-1"
        type="button"
      >
        <div
          class="c4"
        >
          <div
            class="c5"
          >
            <div
              class="c6"
            >
              <input
                autocomplete="off"
                class="c7 c8"
                data-g-tabindex="-1"
                inert=""
                placeholder="Select"
                readonly=""
                tabindex="-1"
                type="text"
                value="Multiple Selected"
              />
            </div>
          </div>
          <div
            class="c9"
          >
            <svg
              aria-label="FormDown"
              class="c10"
              viewBox="0 0 24 24"
            >
              <path
                d="m18 9-6 6-6-6"
                fill="none"
                stroke="#000"
                stroke-width="2"
              />
            </svg>
          </div>
        </div>
      </button>
    </div>
  </div>
</DocumentFragment>
`;

exports[`SelectMultiple should not have accessibility violations 1`] = `
.c1 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c5 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c9 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-self: center;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  min-width: auto;
}

.c10 {
  display: inline-block;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c10 g {
  fill: inherit;
  stroke: inherit;
}

.c10 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c10 *[stroke*='#'],
.c10 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c10 *[fill-rule],
.c10 *[FILL-RULE],
.c10 *[fill*='#'],
.c10 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c2:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c2:focus >circle,
.c2:focus >ellipse,
.c2:focus >line,
.c2:focus >path,
.c2:focus >polygon,
.c2:focus >polyline,
.c2:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c2:focus ::-moz-focus-inner {
  border: 0;
}

.c2:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c2:focus:not(:focus-visible) >circle,
.c2:focus:not(:focus-visible) >ellipse,
.c2:focus:not(:focus-visible) >line,
.c2:focus:not(:focus-visible) >path,
.c2:focus:not(:focus-visible) >polygon,
.c2:focus:not(:focus-visible) >polyline,
.c2:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c2:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c7 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
  border: none;
  outline: none;
  border: none;
}

.c7::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c7::-moz-placeholder {
  color: #AAAAAA;
}

.c7:-ms-input-placeholder {
  color: #AAAAAA;
}

.c7 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c7::-moz-focus-inner {
  border: none;
  outline: none;
}

.c7:-moz-placeholder,
.c7::-moz-placeholder {
  opacity: 1;
}

.c6 {
  position: relative;
  width: 100%;
}

.c8 {
  cursor: pointer;
}

.c3 {
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c9 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  class="c0"
>
  <div
    class="c1"
  >
    <button
      aria-expanded="false"
      aria-haspopup="listbox"
      aria-label="test. 0 selected"
      class="c2 c3"
      tabindex="0"
      type="button"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <div
            class="c6"
          >
            <input
              aria-label="test"
              autocomplete="off"
              class="c7 c8"
              inert=""
              readonly=""
              tabindex="-1"
              type="text"
              value=""
            />
          </div>
        </div>
        <div
          class="c9"
        >
          <svg
            aria-label="FormDown"
            class="c10"
            viewBox="0 0 24 24"
          >
            <path
              d="m18 9-6 6-6-6"
              fill="none"
              stroke="#000"
              stroke-width="2"
            />
          </svg>
        </div>
      </div>
    </button>
  </div>
</div>
`;

exports[`SelectMultiple showSelectionInline 1`] = `
.c1 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-content: flex-start;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 0 0 auto;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  width: 100%;
}

.c5 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
}

.c9 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-self: center;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  min-width: auto;
}

.c15 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-right: 12px;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  justify-content: center;
}

.c18 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  border: solid 2px #7D4CDB;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  height: 24px;
  width: 24px;
  justify-content: center;
  border-radius: 4px;
}

.c20 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-self: center;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c10 {
  display: inline-block;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c10 g {
  fill: inherit;
  stroke: inherit;
}

.c10 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c10 *[stroke*='#'],
.c10 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c10 *[fill-rule],
.c10 *[FILL-RULE],
.c10 *[fill*='#'],
.c10 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c4 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  align-self: flex-start;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  width: 100%;
}

.c4:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c4:focus >circle,
.c4:focus >ellipse,
.c4:focus >line,
.c4:focus >path,
.c4:focus >polygon,
.c4:focus >polyline,
.c4:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c4:focus ::-moz-focus-inner {
  border: 0;
}

.c4:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c4:focus:not(:focus-visible) >circle,
.c4:focus:not(:focus-visible) >ellipse,
.c4:focus:not(:focus-visible) >line,
.c4:focus:not(:focus-visible) >path,
.c4:focus:not(:focus-visible) >polygon,
.c4:focus:not(:focus-visible) >polyline,
.c4:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c4:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c12 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  width: 100%;
}

.c12:hover {
  background-color: rgba(221, 221, 221, 0.4);
  color: #000000;
}

.c12:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c12:focus >circle,
.c12:focus >ellipse,
.c12:focus >line,
.c12:focus >path,
.c12:focus >polygon,
.c12:focus >polyline,
.c12:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c12:focus ::-moz-focus-inner {
  border: 0;
}

.c12:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c12:focus:not(:focus-visible) >circle,
.c12:focus:not(:focus-visible) >ellipse,
.c12:focus:not(:focus-visible) >line,
.c12:focus:not(:focus-visible) >path,
.c12:focus:not(:focus-visible) >polygon,
.c12:focus:not(:focus-visible) >polyline,
.c12:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c12:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c7 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
  border: none;
  outline: none;
  border: none;
  width: 100%;
}

.c7::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c7::-moz-placeholder {
  color: #AAAAAA;
}

.c7:-ms-input-placeholder {
  color: #AAAAAA;
}

.c7 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c7::-moz-focus-inner {
  border: none;
  outline: none;
}

.c7:-moz-placeholder,
.c7::-moz-placeholder {
  opacity: 1;
}

.c6 {
  position: relative;
  width: 100%;
}

.c11 {
  display: none;
}

.c13 {
  display: block;
  width: 100%;
}

.c8 {
  cursor: pointer;
}

.c19 {
  box-sizing: border-box;
  stroke-width: 4px;
  stroke: #7D4CDB;
  width: 24px;
  height: 24px;
}

.c14 {
  display: flex;
  flex-direction: row;
  user-select: none;
  -webkit-user-select: none;
  width: fit-content;
  padding: 6px;
  cursor: pointer;
}

.c14:hover input:not([disabled])+div,
.c14:hover input:not([disabled])+span {
  border-color: #000000;
}

.c17 {
  opacity: 0;
  -moz-appearance: none;
  width: 0;
  height: 0;
  margin: 0;
  cursor: pointer;
}

.c17:checked+span>span {
  left: calc( 48px - 24px );
  background: #7D4CDB;
}

.c16 {
  flex-shrink: 0;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c9 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {
  .c15 {
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {
  .c18 {
    border: solid 2px #7D4CDB;
  }
}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

<div
  class="c0"
>
  <div
    class="c1 c2"
  >
    <div
      class="c3"
    >
      <button
        aria-expanded="false"
        aria-haspopup="listbox"
        aria-label="Open drop. 3 selected"
        class="c4"
        type="button"
      >
        <div
          class="c5"
        >
          <div
            class="c6"
          >
            <input
              autocomplete="off"
              class="c7 c8"
              inert=""
              placeholder="3 selected of 3"
              readonly=""
              tabindex="-1"
              type="text"
              value=""
            />
          </div>
          <div
            class="c9"
          >
            <svg
              aria-label="FormDown"
              class="c10"
              viewBox="0 0 24 24"
            >
              <path
                d="m18 9-6 6-6-6"
                fill="none"
                stroke="#000"
                stroke-width="2"
              />
            </svg>
          </div>
        </div>
        <input
          class="c11"
          inert=""
          readonly=""
          type="text"
        />
      </button>
      <div
        aria-label="Selected options"
        aria-multiselectable="true"
        class="c3"
        role="listbox"
      >
        <button
          aria-label="0 selected"
          aria-posinset="1"
          aria-selected="true"
          aria-setsize="3"
          class="c12 c13"
          id="selected-0"
          role="option"
          tabindex="0"
          type="button"
        >
          <label
            class="c14"
            style="pointer-events: none;"
          >
            <div
              class="c15 c16"
            >
              <input
                checked=""
                class="c17"
                inert=""
                tabindex="-1"
                type="checkbox"
              />
              <div
                class="c18 "
              >
                <svg
                  class="c19"
                  preserveAspectRatio="xMidYMid meet"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M6,11.3 L10.3,16 L18,6.2"
                    fill="none"
                  />
                </svg>
              </div>
            </div>
            <div
              class="c20"
            >
              0
            </div>
          </label>
        </button>
        <button
          aria-label="1 selected"
          aria-posinset="2"
          aria-selected="true"
          aria-setsize="3"
          class="c12 c13"
          id="selected-1"
          role="option"
          tabindex="0"
          type="button"
        >
          <label
            class="c14"
            style="pointer-events: none;"
          >
            <div
              class="c15 c16"
            >
              <input
                checked=""
                class="c17"
                inert=""
                tabindex="-1"
                type="checkbox"
              />
              <div
                class="c18 "
              >
                <svg
                  class="c19"
                  preserveAspectRatio="xMidYMid meet"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M6,11.3 L10.3,16 L18,6.2"
                    fill="none"
                  />
                </svg>
              </div>
            </div>
            <div
              class="c20"
            >
              1
            </div>
          </label>
        </button>
        <button
          aria-label="2 selected"
          aria-posinset="3"
          aria-selected="true"
          aria-setsize="3"
          class="c12 c13"
          id="selected-2"
          role="option"
          tabindex="0"
          type="button"
        >
          <label
            class="c14"
            style="pointer-events: none;"
          >
            <div
              class="c15 c16"
            >
              <input
                checked=""
                class="c17"
                inert=""
                tabindex="-1"
                type="checkbox"
              />
              <div
                class="c18 "
              >
                <svg
                  class="c19"
                  preserveAspectRatio="xMidYMid meet"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M6,11.3 L10.3,16 L18,6.2"
                    fill="none"
                  />
                </svg>
              </div>
            </div>
            <div
              class="c20"
            >
              2
            </div>
          </label>
        </button>
      </div>
    </div>
  </div>
</div>
`;

exports[`SelectMultiple showSelectionInline with children 1`] = `
.c1 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-content: flex-start;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 0 0 auto;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  width: 100%;
}

.c5 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
}

.c9 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-self: center;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  min-width: auto;
}

.c14 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  padding: 12px;
}

.c10 {
  display: inline-block;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c10 g {
  fill: inherit;
  stroke: inherit;
}

.c10 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c10 *[stroke*='#'],
.c10 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c10 *[fill-rule],
.c10 *[FILL-RULE],
.c10 *[fill*='#'],
.c10 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c4 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  align-self: flex-start;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  width: 100%;
}

.c4:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c4:focus >circle,
.c4:focus >ellipse,
.c4:focus >line,
.c4:focus >path,
.c4:focus >polygon,
.c4:focus >polyline,
.c4:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c4:focus ::-moz-focus-inner {
  border: 0;
}

.c4:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c4:focus:not(:focus-visible) >circle,
.c4:focus:not(:focus-visible) >ellipse,
.c4:focus:not(:focus-visible) >line,
.c4:focus:not(:focus-visible) >path,
.c4:focus:not(:focus-visible) >polygon,
.c4:focus:not(:focus-visible) >polyline,
.c4:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c4:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c12 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  width: 100%;
}

.c12:hover {
  background-color: rgba(221, 221, 221, 0.4);
  color: #000000;
}

.c12:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c12:focus >circle,
.c12:focus >ellipse,
.c12:focus >line,
.c12:focus >path,
.c12:focus >polygon,
.c12:focus >polyline,
.c12:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c12:focus ::-moz-focus-inner {
  border: 0;
}

.c12:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c12:focus:not(:focus-visible) >circle,
.c12:focus:not(:focus-visible) >ellipse,
.c12:focus:not(:focus-visible) >line,
.c12:focus:not(:focus-visible) >path,
.c12:focus:not(:focus-visible) >polygon,
.c12:focus:not(:focus-visible) >polyline,
.c12:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c12:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c7 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
  border: none;
  outline: none;
  border: none;
  width: 100%;
}

.c7::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c7::-moz-placeholder {
  color: #AAAAAA;
}

.c7:-ms-input-placeholder {
  color: #AAAAAA;
}

.c7 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c7::-moz-focus-inner {
  border: none;
  outline: none;
}

.c7:-moz-placeholder,
.c7::-moz-placeholder {
  opacity: 1;
}

.c6 {
  position: relative;
  width: 100%;
}

.c11 {
  display: none;
}

.c13 {
  display: block;
  width: 100%;
}

.c8 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c9 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {
  .c14 {
    padding: 6px;
  }
}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

<div
  class="c0"
>
  <div
    class="c1 c2"
  >
    <div
      class="c3"
    >
      <button
        aria-expanded="false"
        aria-haspopup="listbox"
        aria-label="Open drop. 3 selected"
        class="c4"
        type="button"
      >
        <div
          class="c5"
        >
          <div
            class="c6"
          >
            <input
              autocomplete="off"
              class="c7 c8"
              inert=""
              placeholder="3 selected of 3"
              readonly=""
              tabindex="-1"
              type="text"
              value=""
            />
          </div>
          <div
            class="c9"
          >
            <svg
              aria-label="FormDown"
              class="c10"
              viewBox="0 0 24 24"
            >
              <path
                d="m18 9-6 6-6-6"
                fill="none"
                stroke="#000"
                stroke-width="2"
              />
            </svg>
          </div>
        </div>
        <input
          class="c11"
          inert=""
          readonly=""
          type="text"
        />
      </button>
      <div
        aria-label="Selected options"
        aria-multiselectable="true"
        class="c3"
        role="listbox"
      >
        <button
          aria-label="0 selected"
          aria-posinset="1"
          aria-selected="true"
          aria-setsize="3"
          class="c12 c13"
          id="selected-0"
          role="option"
          tabindex="0"
          type="button"
        >
          <div
            class="c14"
          >
            0
          </div>
        </button>
        <button
          aria-label="1 selected"
          aria-posinset="2"
          aria-selected="true"
          aria-setsize="3"
          class="c12 c13"
          id="selected-1"
          role="option"
          tabindex="0"
          type="button"
        >
          <div
            class="c14"
          >
            1
          </div>
        </button>
        <button
          aria-label="2 selected"
          aria-posinset="3"
          aria-selected="true"
          aria-setsize="3"
          class="c12 c13"
          id="selected-2"
          role="option"
          tabindex="0"
          type="button"
        >
          <div
            class="c14"
          >
            2
          </div>
        </button>
      </div>
    </div>
  </div>
</div>
`;

exports[`SelectMultiple showSelectionInline with children 2`] = `
<div
  class="StyledGrommet-sc-19lkkz7-0 fHTwQM"
>
  <div
    class="StyledBox-sc-13pk1d4-0 ezfPMY SelectMultiple__StyledSelectBox-sc-18zwyth-0 kzfSZn"
  >
    <div
      class="StyledBox-sc-13pk1d4-0 kVZfCE"
    >
      <button
        aria-expanded="false"
        aria-haspopup="listbox"
        aria-label="Open drop. 0 selected"
        class="StyledButton-sc-323bzc-0 jLjZi"
        type="button"
      >
        <div
          class="StyledBox-sc-13pk1d4-0 bvWvwP"
        >
          .c1 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
  border: none;
  outline: none;
  border: none;
}

.c1::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c1::-moz-placeholder {
  color: #AAAAAA;
}

.c1:-ms-input-placeholder {
  color: #AAAAAA;
}

.c1 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c1::-moz-focus-inner {
  border: none;
  outline: none;
}

.c1:-moz-placeholder,
.c1::-moz-placeholder {
  opacity: 1;
}

.c0 {
  position: relative;
  width: 100%;
}

.c2 {
  cursor: pointer;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

<div
            class="c0"
          >
            <input
              autocomplete="off"
              class="c1 c2"
              inert=""
              placeholder="Select"
              readonly=""
              tabindex="-1"
              type="text"
              value=""
            />
          </div>
          <div
            class="StyledBox-sc-13pk1d4-0 dxeULw"
          >
            <svg
              aria-label="FormDown"
              class="StyledIcon-sc-ofa7kd-0 iVpWnA"
              viewBox="0 0 24 24"
            >
              <path
                d="m18 9-6 6-6-6"
                fill="none"
                stroke="#000"
                stroke-width="2"
              />
            </svg>
          </div>
        </div>
      </button>
    </div>
  </div>
</div>
`;

exports[`SelectMultiple showSelectionInline with disabled options 1`] = `
.c1 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-content: flex-start;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 0 0 auto;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  width: 100%;
}

.c5 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
}

.c9 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-self: center;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  min-width: auto;
}

.c15 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-right: 12px;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  justify-content: center;
}

.c18 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  border: solid 2px #7D4CDB;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  height: 24px;
  width: 24px;
  justify-content: center;
  border-radius: 4px;
}

.c20 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-self: center;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c10 {
  display: inline-block;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c10 g {
  fill: inherit;
  stroke: inherit;
}

.c10 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c10 *[stroke*='#'],
.c10 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c10 *[fill-rule],
.c10 *[FILL-RULE],
.c10 *[fill*='#'],
.c10 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c4 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  align-self: flex-start;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  width: 100%;
}

.c4:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c4:focus >circle,
.c4:focus >ellipse,
.c4:focus >line,
.c4:focus >path,
.c4:focus >polygon,
.c4:focus >polyline,
.c4:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c4:focus ::-moz-focus-inner {
  border: 0;
}

.c4:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c4:focus:not(:focus-visible) >circle,
.c4:focus:not(:focus-visible) >ellipse,
.c4:focus:not(:focus-visible) >line,
.c4:focus:not(:focus-visible) >path,
.c4:focus:not(:focus-visible) >polygon,
.c4:focus:not(:focus-visible) >polyline,
.c4:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c4:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c12 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  width: 100%;
}

.c12:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c12:focus >circle,
.c12:focus >ellipse,
.c12:focus >line,
.c12:focus >path,
.c12:focus >polygon,
.c12:focus >polyline,
.c12:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c12:focus ::-moz-focus-inner {
  border: 0;
}

.c12:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c12:focus:not(:focus-visible) >circle,
.c12:focus:not(:focus-visible) >ellipse,
.c12:focus:not(:focus-visible) >line,
.c12:focus:not(:focus-visible) >path,
.c12:focus:not(:focus-visible) >polygon,
.c12:focus:not(:focus-visible) >polyline,
.c12:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c12:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c7 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
  border: none;
  outline: none;
  border: none;
  width: 100%;
}

.c7::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c7::-moz-placeholder {
  color: #AAAAAA;
}

.c7:-ms-input-placeholder {
  color: #AAAAAA;
}

.c7 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c7::-moz-focus-inner {
  border: none;
  outline: none;
}

.c7:-moz-placeholder,
.c7::-moz-placeholder {
  opacity: 1;
}

.c6 {
  position: relative;
  width: 100%;
}

.c11 {
  display: none;
}

.c13 {
  display: block;
  width: 100%;
  cursor: default;
}

.c8 {
  cursor: pointer;
}

.c19 {
  box-sizing: border-box;
  stroke-width: 4px;
  stroke: #7D4CDB;
  width: 24px;
  height: 24px;
}

.c14 {
  display: flex;
  flex-direction: row;
  user-select: none;
  -webkit-user-select: none;
  width: fit-content;
  padding: 6px;
  opacity: 0.5;
  cursor: default;
}

.c14:hover input:not([disabled])+div,
.c14:hover input:not([disabled])+span {
  border-color: #000000;
}

.c17 {
  opacity: 0;
  -moz-appearance: none;
  width: 0;
  height: 0;
  margin: 0;
}

.c17:checked+span>span {
  left: calc( 48px - 24px );
  background: #7D4CDB;
}

.c16 {
  flex-shrink: 0;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c9 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c15 {
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c18 {
    border: solid 2px #7D4CDB;
  }
}

<div
  class="c0"
>
  <div
    class="c1 c2"
  >
    <div
      class="c3"
    >
      <button
        aria-expanded="false"
        aria-haspopup="listbox"
        aria-label="Open drop. 1 selected"
        class="c4"
        type="button"
      >
        <div
          class="c5"
        >
          <div
            class="c6"
          >
            <input
              autocomplete="off"
              class="c7 c8"
              inert=""
              placeholder="1 selected of 3"
              readonly=""
              tabindex="-1"
              type="text"
              value=""
            />
          </div>
          <div
            class="c9"
          >
            <svg
              aria-label="FormDown"
              class="c10"
              viewBox="0 0 24 24"
            >
              <path
                d="m18 9-6 6-6-6"
                fill="none"
                stroke="#000"
                stroke-width="2"
              />
            </svg>
          </div>
        </div>
        <input
          class="c11"
          inert=""
          readonly=""
          type="text"
        />
      </button>
      <div
        aria-label="Selected options"
        aria-multiselectable="true"
        class="c3"
        role="listbox"
      >
        <button
          aria-disabled="true"
          aria-label="one selected"
          aria-posinset="1"
          aria-selected="true"
          aria-setsize="1"
          class="c12 c13"
          id="selected-one"
          role="option"
          tabindex="0"
          type="button"
        >
          <label
            class="c14"
            disabled=""
            style="pointer-events: none;"
          >
            <div
              class="c15 c16"
              disabled=""
            >
              <input
                checked=""
                class="c17"
                disabled=""
                inert=""
                tabindex="-1"
                type="checkbox"
              />
              <div
                class="c18 "
                disabled=""
              >
                <svg
                  class="c19"
                  disabled=""
                  preserveAspectRatio="xMidYMid meet"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M6,11.3 L10.3,16 L18,6.2"
                    fill="none"
                  />
                </svg>
              </div>
              <input
                type="hidden"
                value="true"
              />
            </div>
            <div
              class="c20"
            >
              one
            </div>
          </label>
        </button>
      </div>
    </div>
  </div>
</div>
`;

exports[`SelectMultiple valueKey and labelKey 1`] = `
.c1 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-content: flex-start;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 0 0 auto;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  width: 100%;
}

.c5 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
}

.c9 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-self: center;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  min-width: auto;
}

.c15 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-right: 12px;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  justify-content: center;
}

.c18 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  border: solid 2px #7D4CDB;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  height: 24px;
  width: 24px;
  justify-content: center;
  border-radius: 4px;
}

.c20 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-self: center;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c10 {
  display: inline-block;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c10 g {
  fill: inherit;
  stroke: inherit;
}

.c10 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c10 *[stroke*='#'],
.c10 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c10 *[fill-rule],
.c10 *[FILL-RULE],
.c10 *[fill*='#'],
.c10 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c4 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  align-self: flex-start;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  width: 100%;
}

.c4:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c4:focus >circle,
.c4:focus >ellipse,
.c4:focus >line,
.c4:focus >path,
.c4:focus >polygon,
.c4:focus >polyline,
.c4:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c4:focus ::-moz-focus-inner {
  border: 0;
}

.c4:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c4:focus:not(:focus-visible) >circle,
.c4:focus:not(:focus-visible) >ellipse,
.c4:focus:not(:focus-visible) >line,
.c4:focus:not(:focus-visible) >path,
.c4:focus:not(:focus-visible) >polygon,
.c4:focus:not(:focus-visible) >polyline,
.c4:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c4:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c12 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  width: 100%;
}

.c12:hover {
  background-color: rgba(221, 221, 221, 0.4);
  color: #000000;
}

.c12:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c12:focus >circle,
.c12:focus >ellipse,
.c12:focus >line,
.c12:focus >path,
.c12:focus >polygon,
.c12:focus >polyline,
.c12:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c12:focus ::-moz-focus-inner {
  border: 0;
}

.c12:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c12:focus:not(:focus-visible) >circle,
.c12:focus:not(:focus-visible) >ellipse,
.c12:focus:not(:focus-visible) >line,
.c12:focus:not(:focus-visible) >path,
.c12:focus:not(:focus-visible) >polygon,
.c12:focus:not(:focus-visible) >polyline,
.c12:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c12:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c7 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
  border: none;
  outline: none;
  border: none;
  width: 100%;
}

.c7::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c7::-moz-placeholder {
  color: #AAAAAA;
}

.c7:-ms-input-placeholder {
  color: #AAAAAA;
}

.c7 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c7::-moz-focus-inner {
  border: none;
  outline: none;
}

.c7:-moz-placeholder,
.c7::-moz-placeholder {
  opacity: 1;
}

.c6 {
  position: relative;
  width: 100%;
}

.c11 {
  display: none;
}

.c13 {
  display: block;
  width: 100%;
}

.c8 {
  cursor: pointer;
}

.c19 {
  box-sizing: border-box;
  stroke-width: 4px;
  stroke: #7D4CDB;
  width: 24px;
  height: 24px;
}

.c14 {
  display: flex;
  flex-direction: row;
  user-select: none;
  -webkit-user-select: none;
  width: fit-content;
  padding: 6px;
  cursor: pointer;
}

.c14:hover input:not([disabled])+div,
.c14:hover input:not([disabled])+span {
  border-color: #000000;
}

.c17 {
  opacity: 0;
  -moz-appearance: none;
  width: 0;
  height: 0;
  margin: 0;
  cursor: pointer;
}

.c17:checked+span>span {
  left: calc( 48px - 24px );
  background: #7D4CDB;
}

.c16 {
  flex-shrink: 0;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c9 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c15 {
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c18 {
    border: solid 2px #7D4CDB;
  }
}

<div
  class="c0"
>
  <div
    class="c1 c2"
  >
    <div
      class="c3"
    >
      <button
        aria-expanded="false"
        aria-haspopup="listbox"
        aria-label="Open drop. 1 selected"
        class="c4"
        type="button"
      >
        <div
          class="c5"
        >
          <div
            class="c6"
          >
            <input
              autocomplete="off"
              class="c7 c8"
              inert=""
              placeholder="1 selected of 2"
              readonly=""
              tabindex="-1"
              type="text"
              value=""
            />
          </div>
          <div
            class="c9"
          >
            <svg
              aria-label="FormDown"
              class="c10"
              viewBox="0 0 24 24"
            >
              <path
                d="m18 9-6 6-6-6"
                fill="none"
                stroke="#000"
                stroke-width="2"
              />
            </svg>
          </div>
        </div>
        <input
          class="c11"
          inert=""
          readonly=""
          type="text"
        />
      </button>
      <div
        aria-label="Selected options"
        aria-multiselectable="true"
        class="c3"
        role="listbox"
      >
        <button
          aria-label="a selected"
          aria-posinset="1"
          aria-selected="true"
          aria-setsize="1"
          class="c12 c13"
          id="selected-one"
          role="option"
          tabindex="0"
          type="button"
        >
          <label
            class="c14"
            style="pointer-events: none;"
          >
            <div
              class="c15 c16"
            >
              <input
                checked=""
                class="c17"
                inert=""
                tabindex="-1"
                type="checkbox"
              />
              <div
                class="c18 "
              >
                <svg
                  class="c19"
                  preserveAspectRatio="xMidYMid meet"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M6,11.3 L10.3,16 L18,6.2"
                    fill="none"
                  />
                </svg>
              </div>
            </div>
            <div
              class="c20"
            >
              a
            </div>
          </label>
        </button>
      </div>
    </div>
  </div>
</div>
`;

exports[`SelectMultiple with portal disabled option 1`] = `
.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c7 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-self: center;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  min-width: auto;
}

.c8 {
  display: inline-block;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c8 g {
  fill: inherit;
  stroke: inherit;
}

.c8 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c8 *[stroke*='#'],
.c8 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c8 *[fill-rule],
.c8 *[FILL-RULE],
.c8 *[fill*='#'],
.c8 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c0 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c0:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus >circle,
.c0:focus >ellipse,
.c0:focus >line,
.c0:focus >path,
.c0:focus >polygon,
.c0:focus >polyline,
.c0:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus ::-moz-focus-inner {
  border: 0;
}

.c0:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible) >circle,
.c0:focus:not(:focus-visible) >ellipse,
.c0:focus:not(:focus-visible) >line,
.c0:focus:not(:focus-visible) >path,
.c0:focus:not(:focus-visible) >polygon,
.c0:focus:not(:focus-visible) >polyline,
.c0:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
  border: none;
  outline: none;
  border: none;
}

.c5::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c5::-moz-placeholder {
  color: #AAAAAA;
}

.c5:-ms-input-placeholder {
  color: #AAAAAA;
}

.c5 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c5::-moz-focus-inner {
  border: none;
  outline: none;
}

.c5:-moz-placeholder,
.c5::-moz-placeholder {
  opacity: 1;
}

.c4 {
  position: relative;
  width: 100%;
}

.c6 {
  cursor: pointer;
}

.c1 {
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
}

@media only screen and (max-width: 768px) {
  .c7 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

<button
  aria-expanded="true"
  aria-haspopup="listbox"
  aria-label="Open drop. 2 selected"
  class="c0 c1"
  id="test-select__drop"
  tabindex="0"
  type="button"
>
  <div
    class="c2"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <input
          autocomplete="off"
          class="c5 c6"
          id="test-select__drop__input"
          inert=""
          readonly=""
          tabindex="-1"
          type="text"
          value="2 selected"
        />
      </div>
    </div>
    <div
      class="c7"
    >
      <svg
        aria-label="FormDown"
        class="c8"
        viewBox="0 0 24 24"
      >
        <path
          d="m18 9-6 6-6-6"
          fill="none"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`SelectMultiple with portal disabled option 2`] = `
"@media only screen and (max-width: 768px) {
  .dxeULw {
    margin-left: 6px;
    margin-right: 6px;
  }
}
.iWGNVl {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}
.iWGNVl:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6fffb0;
}
.iWGNVl:focus > circle,
.iWGNVl:focus > ellipse,
.iWGNVl:focus > line,
.iWGNVl:focus > path,
.iWGNVl:focus > polygon,
.iWGNVl:focus > polyline,
.iWGNVl:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6fffb0;
}
.iWGNVl:focus ::-moz-focus-inner {
  border: 0;
}
.iWGNVl:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}
.iWGNVl:focus:not(:focus-visible) > circle,
.iWGNVl:focus:not(:focus-visible) > ellipse,
.iWGNVl:focus:not(:focus-visible) > line,
.iWGNVl:focus:not(:focus-visible) > path,
.iWGNVl:focus:not(:focus-visible) > polygon,
.iWGNVl:focus:not(:focus-visible) > polyline,
.iWGNVl:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}
.iWGNVl:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}
.jWsnmo {
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
}"
`;

exports[`SelectMultiple with portal empty options 1`] = `
.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c7 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-self: center;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  min-width: auto;
}

.c8 {
  display: inline-block;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c8 g {
  fill: inherit;
  stroke: inherit;
}

.c8 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c8 *[stroke*='#'],
.c8 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c8 *[fill-rule],
.c8 *[FILL-RULE],
.c8 *[fill*='#'],
.c8 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c0 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c0:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus >circle,
.c0:focus >ellipse,
.c0:focus >line,
.c0:focus >path,
.c0:focus >polygon,
.c0:focus >polyline,
.c0:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus ::-moz-focus-inner {
  border: 0;
}

.c0:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible) >circle,
.c0:focus:not(:focus-visible) >ellipse,
.c0:focus:not(:focus-visible) >line,
.c0:focus:not(:focus-visible) >path,
.c0:focus:not(:focus-visible) >polygon,
.c0:focus:not(:focus-visible) >polyline,
.c0:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
  border: none;
  outline: none;
  border: none;
}

.c5::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c5::-moz-placeholder {
  color: #AAAAAA;
}

.c5:-ms-input-placeholder {
  color: #AAAAAA;
}

.c5 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c5::-moz-focus-inner {
  border: none;
  outline: none;
}

.c5:-moz-placeholder,
.c5::-moz-placeholder {
  opacity: 1;
}

.c4 {
  position: relative;
  width: 100%;
}

.c6 {
  cursor: pointer;
}

.c1 {
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
}

@media only screen and (max-width: 768px) {
  .c7 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

<button
  aria-expanded="true"
  aria-haspopup="listbox"
  aria-label="Open drop. 0 selected"
  class="c0 c1"
  id="test-select__drop"
  tabindex="0"
  type="button"
>
  <div
    class="c2"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <input
          autocomplete="off"
          class="c5 c6"
          id="test-select__drop__input"
          inert=""
          readonly=""
          tabindex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      class="c7"
    >
      <svg
        aria-label="FormDown"
        class="c8"
        viewBox="0 0 24 24"
      >
        <path
          d="m18 9-6 6-6-6"
          fill="none"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`SelectMultiple with portal empty options 2`] = `
"@media only screen and (max-width: 768px) {
  .dxeULw {
    margin-left: 6px;
    margin-right: 6px;
  }
}
.iWGNVl {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}
.iWGNVl:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6fffb0;
}
.iWGNVl:focus > circle,
.iWGNVl:focus > ellipse,
.iWGNVl:focus > line,
.iWGNVl:focus > path,
.iWGNVl:focus > polygon,
.iWGNVl:focus > polyline,
.iWGNVl:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6fffb0;
}
.iWGNVl:focus ::-moz-focus-inner {
  border: 0;
}
.iWGNVl:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}
.iWGNVl:focus:not(:focus-visible) > circle,
.iWGNVl:focus:not(:focus-visible) > ellipse,
.iWGNVl:focus:not(:focus-visible) > line,
.iWGNVl:focus:not(:focus-visible) > path,
.iWGNVl:focus:not(:focus-visible) > polygon,
.iWGNVl:focus:not(:focus-visible) > polyline,
.iWGNVl:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}
.iWGNVl:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}
.jWsnmo {
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
}"
`;

exports[`SelectMultiple with portal limit 1`] = `
.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c7 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-self: center;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  min-width: auto;
}

.c8 {
  display: inline-block;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c8 g {
  fill: inherit;
  stroke: inherit;
}

.c8 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c8 *[stroke*='#'],
.c8 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c8 *[fill-rule],
.c8 *[FILL-RULE],
.c8 *[fill*='#'],
.c8 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c0 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c0:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus >circle,
.c0:focus >ellipse,
.c0:focus >line,
.c0:focus >path,
.c0:focus >polygon,
.c0:focus >polyline,
.c0:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus ::-moz-focus-inner {
  border: 0;
}

.c0:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible) >circle,
.c0:focus:not(:focus-visible) >ellipse,
.c0:focus:not(:focus-visible) >line,
.c0:focus:not(:focus-visible) >path,
.c0:focus:not(:focus-visible) >polygon,
.c0:focus:not(:focus-visible) >polyline,
.c0:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
  border: none;
  outline: none;
  border: none;
}

.c5::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c5::-moz-placeholder {
  color: #AAAAAA;
}

.c5:-ms-input-placeholder {
  color: #AAAAAA;
}

.c5 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c5::-moz-focus-inner {
  border: none;
  outline: none;
}

.c5:-moz-placeholder,
.c5::-moz-placeholder {
  opacity: 1;
}

.c4 {
  position: relative;
  width: 100%;
}

.c6 {
  cursor: pointer;
}

.c1 {
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
}

@media only screen and (max-width: 768px) {
  .c7 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

<button
  aria-expanded="true"
  aria-haspopup="listbox"
  aria-label="Open drop. 2 selected"
  class="c0 c1"
  id="test-select__drop"
  tabindex="0"
  type="button"
>
  <div
    class="c2"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <input
          autocomplete="off"
          class="c5 c6"
          id="test-select__drop__input"
          inert=""
          readonly=""
          tabindex="-1"
          type="text"
          value="2 selected"
        />
      </div>
    </div>
    <div
      class="c7"
    >
      <svg
        aria-label="FormDown"
        class="c8"
        viewBox="0 0 24 24"
      >
        <path
          d="m18 9-6 6-6-6"
          fill="none"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`SelectMultiple with portal limit 2`] = `
"@media only screen and (max-width: 768px) {
  .dxeULw {
    margin-left: 6px;
    margin-right: 6px;
  }
}
.iWGNVl {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}
.iWGNVl:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6fffb0;
}
.iWGNVl:focus > circle,
.iWGNVl:focus > ellipse,
.iWGNVl:focus > line,
.iWGNVl:focus > path,
.iWGNVl:focus > polygon,
.iWGNVl:focus > polyline,
.iWGNVl:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6fffb0;
}
.iWGNVl:focus ::-moz-focus-inner {
  border: 0;
}
.iWGNVl:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}
.iWGNVl:focus:not(:focus-visible) > circle,
.iWGNVl:focus:not(:focus-visible) > ellipse,
.iWGNVl:focus:not(:focus-visible) > line,
.iWGNVl:focus:not(:focus-visible) > path,
.iWGNVl:focus:not(:focus-visible) > polygon,
.iWGNVl:focus:not(:focus-visible) > polyline,
.iWGNVl:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}
.iWGNVl:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}
.jWsnmo {
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
}"
`;

exports[`SelectMultiple with portal renders custom listbox styling 1`] = `
.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c0 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.20);
}

.c4 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  min-height: 48px;
  flex: 0 0 auto;
  width: 100%;
  justify-content: space-between;
  padding: 6px;
}

.c12 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-right: 12px;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  justify-content: center;
}

.c15 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  border: solid 2px rgba(0, 0, 0, 0.15);
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  height: 24px;
  width: 24px;
  justify-content: center;
  border-radius: 4px;
}

.c16 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-self: center;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  width: 100%;
}

.c17 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  height: 0px;
  flex: 0 0 auto;
}

.c6 {
  flex: 0 0 auto;
  align-self: stretch;
  width: 12px;
}

.c1 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  position: fixed;
  z-index: 20;
  outline: none;
  background-color: #FFFFFF;
  color: #444444;
  opacity: 0;
  transform-origin: top left;
  animation: kPQHBD 0.1s forwards;
  animation-delay: 0.01s;
}

.c5 {
  font-size: 14px;
  line-height: 20px;
}

.c9 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c9:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c9:focus:not(:focus-visible) >circle,
.c9:focus:not(:focus-visible) >ellipse,
.c9:focus:not(:focus-visible) >line,
.c9:focus:not(:focus-visible) >path,
.c9:focus:not(:focus-visible) >polygon,
.c9:focus:not(:focus-visible) >polyline,
.c9:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c9:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c7 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: 2px solid #7D4CDB;
  border-radius: 18px;
  color: #444444;
  padding: 4px 22px;
  font-size: 18px;
  line-height: 24px;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c7:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c7:focus >circle,
.c7:focus >ellipse,
.c7:focus >line,
.c7:focus >path,
.c7:focus >polygon,
.c7:focus >polyline,
.c7:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c7:focus ::-moz-focus-inner {
  border: 0;
}

.c7:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c7:focus:not(:focus-visible) >circle,
.c7:focus:not(:focus-visible) >ellipse,
.c7:focus:not(:focus-visible) >line,
.c7:focus:not(:focus-visible) >path,
.c7:focus:not(:focus-visible) >polygon,
.c7:focus:not(:focus-visible) >polyline,
.c7:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c7:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: inherit;
}

.c8 {
  position: relative;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
  padding: 24px;
}

.c10 {
  display: block;
  width: 100%;
}

.c11 {
  display: flex;
  flex-direction: row;
  user-select: none;
  -webkit-user-select: none;
  width: fit-content;
  padding: 6px;
  cursor: pointer;
}

.c11:hover input:not([disabled])+div,
.c11:hover input:not([disabled])+span {
  border-color: #000000;
}

.c14 {
  opacity: 0;
  -moz-appearance: none;
  width: 0;
  height: 0;
  margin: 0;
  cursor: pointer;
}

.c14:checked+span>span {
  left: calc( 48px - 24px );
  background: #7D4CDB;
}

.c13 {
  flex-shrink: 0;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {
  .c4 {
    padding: 3px;
  }
}

@media only screen and (max-width: 768px) {
  .c12 {
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c15 {
    border: solid 2px rgba(0, 0, 0, 0.15);
  }
}

@media only screen and (max-width: 768px) {
  .c6 {
    width: 6px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: flex;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-listbox__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    aria-label="Select dropdown"
    class="c2 c3"
    id="test-listbox__select-drop"
  >
    <div
      class="c4"
    >
      <span
        class="c5"
      >
        0 selected
      </span>
      <div
        class="c6"
      />
      <button
        aria-label="Select all 3 options"
        class="c7"
        type="button"
      >
        Select All
      </button>
    </div>
    <div
      aria-multiselectable="true"
      class="c8"
      role="listbox"
      tabindex="0"
    >
      <button
        aria-label="morning not selected"
        aria-posinset="1"
        aria-selected="false"
        aria-setsize="3"
        class="c9 c10"
        id="option0"
        role="option"
        tabindex="-1"
        type="button"
      >
        <label
          class="c11"
          style="pointer-events: none;"
        >
          <div
            class="c12 c13"
          >
            <input
              class="c14"
              inert=""
              tabindex="-1"
              type="checkbox"
            />
            <div
              class="c15 "
            />
          </div>
          <div
            class="c16"
          >
            morning
          </div>
        </label>
      </button>
      <button
        aria-label="afternoon not selected"
        aria-posinset="2"
        aria-selected="false"
        aria-setsize="3"
        class="c9 c10"
        id="option1"
        role="option"
        tabindex="-1"
        type="button"
      >
        <label
          class="c11"
          style="pointer-events: none;"
        >
          <div
            class="c12 c13"
          >
            <input
              class="c14"
              inert=""
              tabindex="-1"
              type="checkbox"
            />
            <div
              class="c15 "
            />
          </div>
          <div
            class="c16"
          >
            afternoon
          </div>
        </label>
      </button>
      <button
        aria-label="evening not selected"
        aria-posinset="3"
        aria-selected="false"
        aria-setsize="3"
        class="c9 c10"
        id="option2"
        role="option"
        tabindex="-1"
        type="button"
      >
        <label
          class="c11"
          style="pointer-events: none;"
        >
          <div
            class="c12 c13"
          >
            <input
              class="c14"
              inert=""
              tabindex="-1"
              type="checkbox"
            />
            <div
              class="c15 "
            />
          </div>
          <div
            class="c16"
          >
            evening
          </div>
        </label>
      </button>
      <div
        class="c17"
      />
    </div>
  </div>
</div>
`;

exports[`SelectMultiple with portal renders custom listbox styling 2`] = `
"@media only screen and (max-width: 768px) {
  .dxeULw {
    margin-left: 6px;
    margin-right: 6px;
  }
}"
`;

exports[`SelectMultiple with portal select all and clear 1`] = `
.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c7 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-self: center;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  min-width: auto;
}

.c8 {
  display: inline-block;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c8 g {
  fill: inherit;
  stroke: inherit;
}

.c8 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c8 *[stroke*='#'],
.c8 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c8 *[fill-rule],
.c8 *[FILL-RULE],
.c8 *[fill*='#'],
.c8 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c0 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c0:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus >circle,
.c0:focus >ellipse,
.c0:focus >line,
.c0:focus >path,
.c0:focus >polygon,
.c0:focus >polyline,
.c0:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus ::-moz-focus-inner {
  border: 0;
}

.c0:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible) >circle,
.c0:focus:not(:focus-visible) >ellipse,
.c0:focus:not(:focus-visible) >line,
.c0:focus:not(:focus-visible) >path,
.c0:focus:not(:focus-visible) >polygon,
.c0:focus:not(:focus-visible) >polyline,
.c0:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
  border: none;
  outline: none;
  border: none;
}

.c5::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c5::-moz-placeholder {
  color: #AAAAAA;
}

.c5:-ms-input-placeholder {
  color: #AAAAAA;
}

.c5 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c5::-moz-focus-inner {
  border: none;
  outline: none;
}

.c5:-moz-placeholder,
.c5::-moz-placeholder {
  opacity: 1;
}

.c4 {
  position: relative;
  width: 100%;
}

.c6 {
  cursor: pointer;
}

.c1 {
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
}

@media only screen and (max-width: 768px) {
  .c7 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

<button
  aria-expanded="true"
  aria-haspopup="listbox"
  aria-label="Open drop. 4 selected"
  class="c0 c1"
  id="test-select__drop"
  tabindex="0"
  type="button"
>
  <div
    class="c2"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <input
          autocomplete="off"
          class="c5 c6"
          id="test-select__drop__input"
          inert=""
          readonly=""
          tabindex="-1"
          type="text"
          value="4 selected"
        />
      </div>
    </div>
    <div
      class="c7"
    >
      <svg
        aria-label="FormDown"
        class="c8"
        viewBox="0 0 24 24"
      >
        <path
          d="m18 9-6 6-6-6"
          fill="none"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`SelectMultiple with portal select all and clear 2`] = `
"@media only screen and (max-width: 768px) {
  .dxeULw {
    margin-left: 6px;
    margin-right: 6px;
  }
}
.iWGNVl {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}
.iWGNVl:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6fffb0;
}
.iWGNVl:focus > circle,
.iWGNVl:focus > ellipse,
.iWGNVl:focus > line,
.iWGNVl:focus > path,
.iWGNVl:focus > polygon,
.iWGNVl:focus > polyline,
.iWGNVl:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6fffb0;
}
.iWGNVl:focus ::-moz-focus-inner {
  border: 0;
}
.iWGNVl:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}
.iWGNVl:focus:not(:focus-visible) > circle,
.iWGNVl:focus:not(:focus-visible) > ellipse,
.iWGNVl:focus:not(:focus-visible) > line,
.iWGNVl:focus:not(:focus-visible) > path,
.iWGNVl:focus:not(:focus-visible) > polygon,
.iWGNVl:focus:not(:focus-visible) > polyline,
.iWGNVl:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}
.iWGNVl:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}
.jWsnmo {
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
}"
`;

exports[`SelectMultiple with portal select all and clear 3`] = `
<button
  aria-expanded="true"
  aria-haspopup="listbox"
  aria-label="Open drop. 0 selected"
  class="StyledButton-sc-323bzc-0 iWGNVl StyledSelect__StyledSelectDropButton-sc-znp66n-5 jWsnmo"
  id="test-select__drop"
  tabindex="0"
  type="button"
>
  <div
    class="StyledBox-sc-13pk1d4-0 kmCpPX"
  >
    <div
      class="StyledBox-sc-13pk1d4-0 llKkdx"
    >
      <div
        class="StyledTextInput__StyledTextInputContainer-sc-1x30a0s-1 jHtDgz"
      >
        <input
          autocomplete="off"
          class="StyledTextInput-sc-1x30a0s-0 hgBTwY StyledSelect__SelectTextInput-sc-znp66n-4 hPdVtq"
          id="test-select__drop__input"
          inert=""
          readonly=""
          tabindex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      class="StyledBox-sc-13pk1d4-0 dxeULw"
    >
      <svg
        aria-label="FormDown"
        class="StyledIcon-sc-ofa7kd-0 iVpWnA"
        viewBox="0 0 24 24"
      >
        <path
          d="m18 9-6 6-6-6"
          fill="none"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`SelectMultiple with portal select all and clear 4`] = `
"@media only screen and (max-width: 768px) {
  .dxeULw {
    margin-left: 6px;
    margin-right: 6px;
  }
}
.iWGNVl {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}
.iWGNVl:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6fffb0;
}
.iWGNVl:focus > circle,
.iWGNVl:focus > ellipse,
.iWGNVl:focus > line,
.iWGNVl:focus > path,
.iWGNVl:focus > polygon,
.iWGNVl:focus > polyline,
.iWGNVl:focus > rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6fffb0;
}
.iWGNVl:focus ::-moz-focus-inner {
  border: 0;
}
.iWGNVl:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}
.iWGNVl:focus:not(:focus-visible) > circle,
.iWGNVl:focus:not(:focus-visible) > ellipse,
.iWGNVl:focus:not(:focus-visible) > line,
.iWGNVl:focus:not(:focus-visible) > path,
.iWGNVl:focus:not(:focus-visible) > polygon,
.iWGNVl:focus:not(:focus-visible) > polyline,
.iWGNVl:focus:not(:focus-visible) > rect {
  outline: none;
  box-shadow: none;
}
.iWGNVl:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}
.jWsnmo {
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
}"
`;
