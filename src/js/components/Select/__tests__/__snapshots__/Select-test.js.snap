// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`Select 0 value 1`] = `
<DocumentFragment>
  .c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
    class="c0"
  >
    <button
      aria-expanded="false"
      aria-haspopup="listbox"
      aria-label="test select"
      class="c1 c2"
      id="test-select"
      type="button"
    >
      <div
        class="c3"
      >
        <div
          class="c4"
        >
          <div
            class="c5"
          >
            <input
              autocomplete="off"
              class="c6 c7"
              id="test-select__input"
              inert=""
              placeholder="test select"
              readonly=""
              tabindex="-1"
              type="text"
              value="0"
            />
          </div>
        </div>
        <div
          class="c8"
          style="min-width: auto;"
        >
          <svg
            aria-label="Down"
            class="c9"
            viewBox="0 0 24 24"
          >
            <path
              d="m2 8.35 10.173 9.823L21.997 8"
              fill="none"
              stroke="#000"
              stroke-width="2"
            />
          </svg>
        </div>
      </div>
    </button>
  </div>
</DocumentFragment>
`;

exports[`Select Clear option renders - bottom 1`] = `
.c0 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 6px 12px 0px rgba(0, 0, 0, 0.12);
}

.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  height: 0px;
  flex: 0 0 auto;
}

.c11 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 6px;
  padding-bottom: 6px;
  border-radius: 6px;
}

.c1 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 6px;
  position: fixed;
  z-index: 110;
  outline: none;
  background-color: #ffffff;
  color: #555555;
  margin-top: 6px;
  opacity: 0;
  transform-origin: top left;
  animation: kPQHBD 0.1s forwards;
  animation-delay: 0.01s;
}

.c1 [class*=MaskedInput__ContainerBox] {
  padding-block: 6px;
  padding-inline: 6px;
  gap: 6px;
  display: flex;
  flex-direction: column;
}

.c12 {
  font-size: 1.125rem;
  line-height: 1.5rem;
  color: #2e2e2e;
  font-weight: 500;
}

.c7 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: none;
  border-radius: 9999px;
  padding: 5px 12px;
  font-size: 1.125rem;
  line-height: 1.5rem;
  padding: 5px 12px;
  color: #555555;
  border-style: solid;
  border-width: 1px;
  border-color: rgba(0, 0, 0, 0);
  border-radius: 6px;
  font-weight: 500;
  padding: 5px 12px;
  text-align: start;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c7:hover {
  background-color: rgba(0, 0, 0, 0.04);
  color: #555555;
  border-color: rgba(0, 0, 0, 0);
}

.c7:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c7:focus >circle,
.c7:focus >ellipse,
.c7:focus >line,
.c7:focus >path,
.c7:focus >polygon,
.c7:focus >polyline,
.c7:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c7:focus ::-moz-focus-inner {
  border: 0;
}

.c7:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c7:focus:not(:focus-visible) >circle,
.c7:focus:not(:focus-visible) >ellipse,
.c7:focus:not(:focus-visible) >line,
.c7:focus:not(:focus-visible) >path,
.c7:focus:not(:focus-visible) >polygon,
.c7:focus:not(:focus-visible) >polyline,
.c7:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c7:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: none;
  border-radius: 9999px;
  padding: 5px 12px;
  font-size: 1.125rem;
  line-height: 1.5rem;
  padding: 5px 12px;
  color: #555555;
  border-style: solid;
  border-width: 1px;
  border-color: rgba(0, 0, 0, 0);
  border-radius: 6px;
  font-weight: 500;
  padding: 5px 12px;
  background-color: #d1ffee;
  color: #2e2e2e;
  border-color: rgba(0, 0, 0, 0);
  font-weight: 500;
  position: relative;
  text-align: start;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c5::before {
  display: block;
  position: absolute;
  content: '';
  width: 6px;
  border-top-left-radius: 9999px;
  border-bottom-left-radius: 9999px;
  top: -1px;
  bottom: -1px;
  left: -1px;
  background: #006750;
}

.c5:hover {
  background-color: rgba(0, 0, 0, 0.04);
  color: #555555;
  border-color: rgba(0, 0, 0, 0);
  background: #aafade;
  color: #2e2e2e;
}

.c5:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c5:focus >circle,
.c5:focus >ellipse,
.c5:focus >line,
.c5:focus >path,
.c5:focus >polygon,
.c5:focus >polyline,
.c5:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c5:focus ::-moz-focus-inner {
  border: 0;
}

.c5:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) >circle,
.c5:focus:not(:focus-visible) >ellipse,
.c5:focus:not(:focus-visible) >line,
.c5:focus:not(:focus-visible) >path,
.c5:focus:not(:focus-visible) >polygon,
.c5:focus:not(:focus-visible) >polyline,
.c5:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c9 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
  width: 100%;
}

.c9:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c9:focus:not(:focus-visible) >circle,
.c9:focus:not(:focus-visible) >ellipse,
.c9:focus:not(:focus-visible) >line,
.c9:focus:not(:focus-visible) >path,
.c9:focus:not(:focus-visible) >polygon,
.c9:focus:not(:focus-visible) >polyline,
.c9:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c9:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: inherit;
}

.c3 div:has(input[type="search"]) {
  padding-bottom: 0;
}

.c3 button[aria-label*="Or, press"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c3 button[aria-label*="Or, press"]:focus {
  background: transparent;
}

.c3 button[aria-label*="Or, press"]:focus >div {
  background: rgba(0, 0, 0, 0.04);
}

.c4 {
  position: relative;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
  padding-top: 6px;
  padding-inline: 6px;
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.c4 [role="option"] {
  border-radius: 6px;
}

.c6 {
  display: block;
  width: 100%;
}

.c10:focus {
  background-color: rgba(0, 0, 0, 0.04);
  color: #555555;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {
  .c11 {
    padding-left: 12px;
    padding-right: 12px;
  }
}

@media only screen and (max-width: 768px) {
  .c11 {
    padding-top: 6px;
    padding-bottom: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c11 {
    border-radius: 3px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: flex;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
      role="listbox"
      tabindex="-1"
    >
      <button
        aria-posinset="1"
        aria-selected="true"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="0"
        type="button"
      >
        one
      </button>
      <button
        aria-posinset="2"
        aria-selected="false"
        aria-setsize="2"
        class="c7 c6"
        role="option"
        tabindex="-1"
        type="button"
      >
        two
      </button>
      <div
        class="c8"
      />
    </div>
    <button
      aria-label="Clear selection. Or, press shift tab to move to select options"
      class="c9 c10"
      type="button"
    >
      <div
        class="c11"
      >
        <span
          class="c12"
        >
          Clear selection
        </span>
      </div>
    </button>
  </div>
</div>
`;

exports[`Select Clear option renders - bottom 2`] = `
"@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
    margin-right: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-right: 12px;
  }
}"
`;

exports[`Select Clear option renders correct label when wrapped in FormField 1`] = `
.c0 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 6px 12px 0px rgba(0, 0, 0, 0.12);
}

.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c7 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  height: 0px;
  flex: 0 0 auto;
}

.c1 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 6px;
  position: fixed;
  z-index: 110;
  outline: none;
  background-color: #ffffff;
  color: #555555;
  margin-top: 6px;
  opacity: 0;
  transform-origin: top left;
  animation: kPQHBD 0.1s forwards;
  animation-delay: 0.01s;
}

.c1 [class*=MaskedInput__ContainerBox] {
  padding-block: 6px;
  padding-inline: 6px;
  gap: 6px;
  display: flex;
  flex-direction: column;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: none;
  border-radius: 9999px;
  padding: 5px 12px;
  font-size: 1.125rem;
  line-height: 1.5rem;
  padding: 5px 12px;
  color: #555555;
  border-style: solid;
  border-width: 1px;
  border-color: rgba(0, 0, 0, 0);
  border-radius: 6px;
  font-weight: 500;
  padding: 5px 12px;
  text-align: start;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c5:hover {
  background-color: rgba(0, 0, 0, 0.04);
  color: #555555;
  border-color: rgba(0, 0, 0, 0);
}

.c5:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c5:focus >circle,
.c5:focus >ellipse,
.c5:focus >line,
.c5:focus >path,
.c5:focus >polygon,
.c5:focus >polyline,
.c5:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c5:focus ::-moz-focus-inner {
  border: 0;
}

.c5:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) >circle,
.c5:focus:not(:focus-visible) >ellipse,
.c5:focus:not(:focus-visible) >line,
.c5:focus:not(:focus-visible) >path,
.c5:focus:not(:focus-visible) >polygon,
.c5:focus:not(:focus-visible) >polyline,
.c5:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: inherit;
}

.c3 div:has(input[type="search"]) {
  padding-bottom: 0;
}

.c3 button[aria-label*="Or, press"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c3 button[aria-label*="Or, press"]:focus {
  background: transparent;
}

.c3 button[aria-label*="Or, press"]:focus >div {
  background: rgba(0, 0, 0, 0.04);
}

.c4 {
  position: relative;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
  padding-top: 6px;
  padding-inline: 6px;
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.c4 [role="option"] {
  border-radius: 6px;
}

.c6 {
  display: block;
  width: 100%;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: flex;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
      role="listbox"
      tabindex="-1"
    >
      <button
        aria-posinset="1"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="0"
        type="button"
      >
        one
      </button>
      <button
        aria-posinset="2"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="-1"
        type="button"
      >
        two
      </button>
      <div
        class="c7"
      />
    </div>
  </div>
</div>
`;

exports[`Select Clear option renders correct label when wrapped in FormField 2`] = `
"@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
    margin-right: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-right: 12px;
  }
}"
`;

exports[`Select Clear option renders custom label 1`] = `
.c0 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 6px 12px 0px rgba(0, 0, 0, 0.12);
}

.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c7 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  height: 0px;
  flex: 0 0 auto;
}

.c1 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 6px;
  position: fixed;
  z-index: 110;
  outline: none;
  background-color: #ffffff;
  color: #555555;
  margin-top: 6px;
  opacity: 0;
  transform-origin: top left;
  animation: kPQHBD 0.1s forwards;
  animation-delay: 0.01s;
}

.c1 [class*=MaskedInput__ContainerBox] {
  padding-block: 6px;
  padding-inline: 6px;
  gap: 6px;
  display: flex;
  flex-direction: column;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: none;
  border-radius: 9999px;
  padding: 5px 12px;
  font-size: 1.125rem;
  line-height: 1.5rem;
  padding: 5px 12px;
  color: #555555;
  border-style: solid;
  border-width: 1px;
  border-color: rgba(0, 0, 0, 0);
  border-radius: 6px;
  font-weight: 500;
  padding: 5px 12px;
  text-align: start;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c5:hover {
  background-color: rgba(0, 0, 0, 0.04);
  color: #555555;
  border-color: rgba(0, 0, 0, 0);
}

.c5:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c5:focus >circle,
.c5:focus >ellipse,
.c5:focus >line,
.c5:focus >path,
.c5:focus >polygon,
.c5:focus >polyline,
.c5:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c5:focus ::-moz-focus-inner {
  border: 0;
}

.c5:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) >circle,
.c5:focus:not(:focus-visible) >ellipse,
.c5:focus:not(:focus-visible) >line,
.c5:focus:not(:focus-visible) >path,
.c5:focus:not(:focus-visible) >polygon,
.c5:focus:not(:focus-visible) >polyline,
.c5:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: inherit;
}

.c3 div:has(input[type="search"]) {
  padding-bottom: 0;
}

.c3 button[aria-label*="Or, press"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c3 button[aria-label*="Or, press"]:focus {
  background: transparent;
}

.c3 button[aria-label*="Or, press"]:focus >div {
  background: rgba(0, 0, 0, 0.04);
}

.c4 {
  position: relative;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
  padding-top: 6px;
  padding-inline: 6px;
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.c4 [role="option"] {
  border-radius: 6px;
}

.c6 {
  display: block;
  width: 100%;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: flex;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
      role="listbox"
      tabindex="-1"
    >
      <button
        aria-posinset="1"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="0"
        type="button"
      >
        one
      </button>
      <button
        aria-posinset="2"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="-1"
        type="button"
      >
        two
      </button>
      <div
        class="c7"
      />
    </div>
  </div>
</div>
`;

exports[`Select Clear option renders custom label 2`] = `
"@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
    margin-right: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-right: 12px;
  }
}"
`;

exports[`Select Clear option renders- top 1`] = `
.c0 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 6px 12px 0px rgba(0, 0, 0, 0.12);
}

.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c12 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  height: 0px;
  flex: 0 0 auto;
}

.c6 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 6px;
  padding-bottom: 6px;
  border-radius: 6px;
}

.c1 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 6px;
  position: fixed;
  z-index: 110;
  outline: none;
  background-color: #ffffff;
  color: #555555;
  margin-top: 6px;
  opacity: 0;
  transform-origin: top left;
  animation: kPQHBD 0.1s forwards;
  animation-delay: 0.01s;
}

.c1 [class*=MaskedInput__ContainerBox] {
  padding-block: 6px;
  padding-inline: 6px;
  gap: 6px;
  display: flex;
  flex-direction: column;
}

.c7 {
  font-size: 1.125rem;
  line-height: 1.5rem;
  color: #2e2e2e;
  font-weight: 500;
}

.c11 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: none;
  border-radius: 9999px;
  padding: 5px 12px;
  font-size: 1.125rem;
  line-height: 1.5rem;
  padding: 5px 12px;
  color: #555555;
  border-style: solid;
  border-width: 1px;
  border-color: rgba(0, 0, 0, 0);
  border-radius: 6px;
  font-weight: 500;
  padding: 5px 12px;
  text-align: start;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c11:hover {
  background-color: rgba(0, 0, 0, 0.04);
  color: #555555;
  border-color: rgba(0, 0, 0, 0);
}

.c11:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c11:focus >circle,
.c11:focus >ellipse,
.c11:focus >line,
.c11:focus >path,
.c11:focus >polygon,
.c11:focus >polyline,
.c11:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c11:focus ::-moz-focus-inner {
  border: 0;
}

.c11:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c11:focus:not(:focus-visible) >circle,
.c11:focus:not(:focus-visible) >ellipse,
.c11:focus:not(:focus-visible) >line,
.c11:focus:not(:focus-visible) >path,
.c11:focus:not(:focus-visible) >polygon,
.c11:focus:not(:focus-visible) >polyline,
.c11:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c11:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c4 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
  width: 100%;
}

.c4:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c4:focus:not(:focus-visible) >circle,
.c4:focus:not(:focus-visible) >ellipse,
.c4:focus:not(:focus-visible) >line,
.c4:focus:not(:focus-visible) >path,
.c4:focus:not(:focus-visible) >polygon,
.c4:focus:not(:focus-visible) >polyline,
.c4:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c4:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c9 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: none;
  border-radius: 9999px;
  padding: 5px 12px;
  font-size: 1.125rem;
  line-height: 1.5rem;
  padding: 5px 12px;
  color: #555555;
  border-style: solid;
  border-width: 1px;
  border-color: rgba(0, 0, 0, 0);
  border-radius: 6px;
  font-weight: 500;
  padding: 5px 12px;
  background-color: #d1ffee;
  color: #2e2e2e;
  border-color: rgba(0, 0, 0, 0);
  font-weight: 500;
  position: relative;
  text-align: start;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c9::before {
  display: block;
  position: absolute;
  content: '';
  width: 6px;
  border-top-left-radius: 9999px;
  border-bottom-left-radius: 9999px;
  top: -1px;
  bottom: -1px;
  left: -1px;
  background: #006750;
}

.c9:hover {
  background-color: rgba(0, 0, 0, 0.04);
  color: #555555;
  border-color: rgba(0, 0, 0, 0);
  background: #aafade;
  color: #2e2e2e;
}

.c9:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c9:focus >circle,
.c9:focus >ellipse,
.c9:focus >line,
.c9:focus >path,
.c9:focus >polygon,
.c9:focus >polyline,
.c9:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c9:focus ::-moz-focus-inner {
  border: 0;
}

.c9:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c9:focus:not(:focus-visible) >circle,
.c9:focus:not(:focus-visible) >ellipse,
.c9:focus:not(:focus-visible) >line,
.c9:focus:not(:focus-visible) >path,
.c9:focus:not(:focus-visible) >polygon,
.c9:focus:not(:focus-visible) >polyline,
.c9:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c9:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: inherit;
}

.c3 div:has(input[type="search"]) {
  padding-bottom: 0;
}

.c3 button[aria-label*="Or, press"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c3 button[aria-label*="Or, press"]:focus {
  background: transparent;
}

.c3 button[aria-label*="Or, press"]:focus >div {
  background: rgba(0, 0, 0, 0.04);
}

.c8 {
  position: relative;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
  padding-top: 6px;
  padding-inline: 6px;
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.c8 [role="option"] {
  border-radius: 6px;
}

.c10 {
  display: block;
  width: 100%;
}

.c5:focus {
  background-color: rgba(0, 0, 0, 0.04);
  color: #555555;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {
  .c6 {
    padding-left: 12px;
    padding-right: 12px;
  }
}

@media only screen and (max-width: 768px) {
  .c6 {
    padding-top: 6px;
    padding-bottom: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c6 {
    border-radius: 3px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: flex;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <button
      aria-label="Clear selection. Or, press down arrow to move to select options"
      class="c4 c5"
      type="button"
    >
      <div
        class="c6"
      >
        <span
          class="c7"
        >
          Clear selection
        </span>
      </div>
    </button>
    <div
      class="c8"
      role="listbox"
      tabindex="-1"
    >
      <button
        aria-posinset="1"
        aria-selected="true"
        aria-setsize="2"
        class="c9 c10"
        role="option"
        tabindex="0"
        type="button"
      >
        one
      </button>
      <button
        aria-posinset="2"
        aria-selected="false"
        aria-setsize="2"
        class="c11 c10"
        role="option"
        tabindex="-1"
        type="button"
      >
        two
      </button>
      <div
        class="c12"
      />
    </div>
  </div>
</div>
`;

exports[`Select Clear option renders- top 2`] = `
"@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
    margin-right: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-right: 12px;
  }
}"
`;

exports[`Select Search timeout 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

<div
  aria-hidden="true"
  class="c0"
>
  <button
    aria-expanded="true"
    aria-haspopup="listbox"
    aria-label="test select"
    class="c1 c2"
    data-g-tabindex="none"
    id="test-select"
    tabindex="-1"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            data-g-tabindex="-1"
            id="test-select__input"
            inert=""
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="Up"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 15.999 10.173-9.824 9.824 10.173"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select Search timeout 2`] = `
.c0 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  font-size: 1rem;
  line-height: 1.25rem;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
}

.c0:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c0:focus >circle,
.c0:focus >ellipse,
.c0:focus >line,
.c0:focus >path,
.c0:focus >polygon,
.c0:focus >polyline,
.c0:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c0:focus ::-moz-focus-inner {
  border: 0;
}

.c0::-webkit-input-placeholder {
  color: #676767;
}

.c0::-moz-placeholder {
  color: #676767;
}

.c0:-ms-input-placeholder {
  color: #676767;
}

.c0 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c0::-moz-focus-inner {
  border: none;
  outline: none;
}

.c0:-moz-placeholder,
.c0::-moz-placeholder {
  opacity: 1;
}

.c0::-webkit-input-placeholder {
  font-weight: 400;
}

.c0::-moz-placeholder {
  font-weight: 400;
}

.c0:-ms-input-placeholder {
  font-weight: 400;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

<input
  autocomplete="off"
  class="c0"
  type="search"
  value="o"
/>
`;

exports[`Select Select component handles JSX options correctly 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="test select"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            inert=""
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select applies custom global.hover theme to options 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c6::-moz-placeholder {
  color: #AAAAAA;
}

.c6:-ms-input-placeholder {
  color: #AAAAAA;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c5 {
  position: relative;
  width: 100%;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="Select..."
    class="c1 c2"
    id="applies-custom-hover-style-id"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            data-testid="applies-custom-hover-style"
            id="applies-custom-hover-style-id__input"
            inert=""
            placeholder="Select..."
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="FormDown"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m18 9-6 6-6-6"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select applies custom global.hover theme to options 2`] = `
.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  padding: 12px;
}

.c3 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
}

.c0 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  background-color: rgba(221, 221, 221, 0.4);
  color: #000000;
}

.c0:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus >circle,
.c0:focus >ellipse,
.c0:focus >line,
.c0:focus >path,
.c0:focus >polygon,
.c0:focus >polyline,
.c0:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus ::-moz-focus-inner {
  border: 0;
}

.c0:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible) >circle,
.c0:focus:not(:focus-visible) >ellipse,
.c0:focus:not(:focus-visible) >line,
.c0:focus:not(:focus-visible) >path,
.c0:focus:not(:focus-visible) >polygon,
.c0:focus:not(:focus-visible) >polyline,
.c0:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c1 {
  background-color: lightgreen;
  color: #7D4CDB;
  display: block;
  width: 100%;
}

.c1:focus {
  background-color: lightgreen;
  color: #7D4CDB;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {
  .c2 {
    padding: 6px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

<button
  aria-posinset="2"
  aria-selected="false"
  aria-setsize="3"
  class="c0 c1"
  role="option"
  tabindex="0"
  type="button"
>
  <div
    class="c2"
  >
    <span
      class="c3"
    >
      afternoon
    </span>
  </div>
</button>
`;

exports[`Select basic 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="Select"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            aria-label="Select"
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            inert=""
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select basic outside grommet wrapper 1`] = `
.c8 {
  display: inline-block;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c8 g {
  fill: inherit;
  stroke: inherit;
}

.c8 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c8 *[stroke*='#'],
.c8 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c8 *[fill-rule],
.c8 *[FILL-RULE],
.c8 *[fill*='#'],
.c8 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c7 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c0 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c0:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus >circle,
.c0:focus >ellipse,
.c0:focus >line,
.c0:focus >path,
.c0:focus >polygon,
.c0:focus >polyline,
.c0:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus ::-moz-focus-inner {
  border: 0;
}

.c0:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible) >circle,
.c0:focus:not(:focus-visible) >ellipse,
.c0:focus:not(:focus-visible) >line,
.c0:focus:not(:focus-visible) >path,
.c0:focus:not(:focus-visible) >polygon,
.c0:focus:not(:focus-visible) >polyline,
.c0:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
  border: none;
  outline: none;
  border: none;
}

.c5::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c5::-moz-placeholder {
  color: #AAAAAA;
}

.c5:-ms-input-placeholder {
  color: #AAAAAA;
}

.c5 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c5::-moz-focus-inner {
  border: none;
  outline: none;
}

.c5:-moz-placeholder,
.c5::-moz-placeholder {
  opacity: 1;
}

.c4 {
  position: relative;
  width: 100%;
}

.c6 {
  cursor: pointer;
}

.c1 {
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
}

@media only screen and (max-width: 768px) {
  .c7 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<button
  aria-expanded="false"
  aria-haspopup="listbox"
  aria-label="Select"
  class="c0 c1"
  id="test-select"
  type="button"
>
  <div
    class="c2"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <input
          aria-label="Select"
          autocomplete="off"
          class="c5 c6"
          id="test-select__input"
          inert=""
          readonly=""
          tabindex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      class="c7"
      style="min-width: auto;"
    >
      <svg
        aria-label="FormDown"
        class="c8"
        viewBox="0 0 24 24"
      >
        <path
          d="m18 9-6 6-6-6"
          fill="none"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select complex options and children 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="test select"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            inert=""
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select complex options and children 2`] = `
<div
  class="StyledGrommet-sc-19lkkz7-0 iRGypN"
>
  <button
    aria-expanded="true"
    aria-haspopup="listbox"
    aria-label="test select"
    class="StyledButtonKind-sc-1vhfpnt-0 fvxTu StyledSelect__StyledSelectDropButton-sc-znp66n-5 eOYqUg"
    id="test-select"
    type="button"
  >
    <div
      class="StyledBox-sc-13pk1d4-0 edFWqF"
    >
      <div
        class="StyledBox-sc-13pk1d4-0 nwmdD"
      >
        <div
          class="StyledTextInput__StyledTextInputContainer-sc-1x30a0s-1 bSfyXe"
        >
          <input
            autocomplete="off"
            class="StyledTextInput-sc-1x30a0s-0 hXkQju StyledSelect__SelectTextInput-sc-znp66n-4 bGoxrS"
            id="test-select__input"
            inert=""
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="StyledBox-sc-13pk1d4-0 peYnb"
        style="min-width: auto;"
      >
        .c0 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c0 g {
  fill: inherit;
  stroke: inherit;
}

.c0 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c0 *[stroke*='#'],
.c0 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c0 *[fill-rule],
.c0 *[FILL-RULE],
.c0 *[fill*='#'],
.c0 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

<svg
          aria-label="Up"
          class="c0"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 15.999 10.173-9.824 9.824 10.173"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select complex options and children 3`] = `
.c0 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 6px 12px 0px rgba(0, 0, 0, 0.12);
}

.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c7 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  height: 0px;
  flex: 0 0 auto;
}

.c1 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 6px;
  position: fixed;
  z-index: 110;
  outline: none;
  background-color: #ffffff;
  color: #555555;
  margin-top: 6px;
  opacity: 0;
  transform-origin: top left;
  animation: kPQHBD 0.1s forwards;
  animation-delay: 0.01s;
}

.c1 [class*=MaskedInput__ContainerBox] {
  padding-block: 6px;
  padding-inline: 6px;
  gap: 6px;
  display: flex;
  flex-direction: column;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c5:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c5:focus >circle,
.c5:focus >ellipse,
.c5:focus >line,
.c5:focus >path,
.c5:focus >polygon,
.c5:focus >polyline,
.c5:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c5:focus ::-moz-focus-inner {
  border: 0;
}

.c5:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) >circle,
.c5:focus:not(:focus-visible) >ellipse,
.c5:focus:not(:focus-visible) >line,
.c5:focus:not(:focus-visible) >path,
.c5:focus:not(:focus-visible) >polygon,
.c5:focus:not(:focus-visible) >polyline,
.c5:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: inherit;
}

.c3 div:has(input[type="search"]) {
  padding-bottom: 0;
}

.c3 button[aria-label*="Or, press"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c3 button[aria-label*="Or, press"]:focus {
  background: transparent;
}

.c3 button[aria-label*="Or, press"]:focus >div {
  background: rgba(0, 0, 0, 0.04);
}

.c4 {
  position: relative;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
  padding-top: 6px;
  padding-inline: 6px;
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.c4 [role="option"] {
  border-radius: 6px;
}

.c6 {
  display: block;
  width: 100%;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: flex;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
      role="listbox"
      tabindex="-1"
    >
      <button
        aria-posinset="1"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="0"
        type="button"
      >
        <span>
          one
        </span>
      </button>
      <button
        aria-posinset="2"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="-1"
        type="button"
      >
        <span>
          two
        </span>
      </button>
      <div
        class="c7"
      />
    </div>
  </div>
</div>
`;

exports[`Select complex options and children 4`] = `
"@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
    margin-right: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-right: 12px;
  }
}"
`;

exports[`Select dark 1`] = `
.c10 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #ffffff;
  stroke: #ffffff;
}

.c10 g {
  fill: inherit;
  stroke: inherit;
}

.c10 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c10 *[stroke*='#'],
.c10 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c10 *[fill-rule],
.c10 *[FILL-RULE],
.c10 *[fill*='#'],
.c10 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c1 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  background-color: #333333;
  color: #ffffff;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  width: 100%;
  height: 100%;
  justify-content: center;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c5 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c9 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c2 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c2:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c2:focus >circle,
.c2:focus >ellipse,
.c2:focus >line,
.c2:focus >path,
.c2:focus >polygon,
.c2:focus >polyline,
.c2:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c2:focus ::-moz-focus-inner {
  border: 0;
}

.c2:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c2:focus:not(:focus-visible) >circle,
.c2:focus:not(:focus-visible) >ellipse,
.c2:focus:not(:focus-visible) >line,
.c2:focus:not(:focus-visible) >path,
.c2:focus:not(:focus-visible) >polygon,
.c2:focus:not(:focus-visible) >polyline,
.c2:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c2:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c7 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(255, 255, 255, 0.36);
  border-radius: 8px;
  color: #ffffff;
  border: none;
  outline: none;
  border: none;
}

.c7::-webkit-input-placeholder {
  color: rgba(255, 255, 255, 0.61);
}

.c7::-moz-placeholder {
  color: rgba(255, 255, 255, 0.61);
}

.c7:-ms-input-placeholder {
  color: rgba(255, 255, 255, 0.61);
}

.c7 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c7::-moz-focus-inner {
  border: none;
  outline: none;
}

.c7:-moz-placeholder,
.c7::-moz-placeholder {
  opacity: 1;
}

.c7::-webkit-input-placeholder {
  font-weight: 400;
}

.c7::-moz-placeholder {
  font-weight: 400;
}

.c7:-ms-input-placeholder {
  font-weight: 400;
}

.c6 {
  position: relative;
  width: 100%;
}

.c6 svg {
  fill: #ffffff;
  stroke: #ffffff;
}

.c8 {
  cursor: pointer;
}

.c3 {
  border: 1px solid rgba(255, 255, 255, 0.36);
  border-radius: 8px;
}

.c3[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c3[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c9 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c9 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c9 {
    margin-right: 12px;
  }
}

<div
  class="c0"
>
  <div
    class="c1"
  >
    <button
      aria-expanded="false"
      aria-haspopup="listbox"
      aria-label="Select"
      class="c2 c3"
      type="button"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <div
            class="c6"
          >
            <input
              autocomplete="off"
              class="c7 c8"
              inert=""
              placeholder="Select"
              readonly=""
              tabindex="-1"
              type="text"
              value=""
            />
          </div>
        </div>
        <div
          class="c9"
          style="min-width: auto;"
        >
          <svg
            aria-label="Down"
            class="c10"
            viewBox="0 0 24 24"
          >
            <path
              d="m2 8.35 10.173 9.823L21.997 8"
              fill="none"
              stroke="#000"
              stroke-width="2"
            />
          </svg>
        </div>
      </div>
    </button>
  </div>
</div>
`;

exports[`Select default value 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="test select; Selected: two"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            inert=""
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value="two"
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select default value clear 1`] = `
.c0 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 6px 12px 0px rgba(0, 0, 0, 0.12);
}

.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c6 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 6px;
  padding-bottom: 6px;
  border-radius: 6px;
}

.c12 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  height: 0px;
  flex: 0 0 auto;
}

.c1 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 6px;
  position: fixed;
  z-index: 110;
  outline: none;
  background-color: #ffffff;
  color: #555555;
  margin-top: 6px;
  opacity: 0;
  transform-origin: top left;
  animation: kPQHBD 0.1s forwards;
  animation-delay: 0.01s;
}

.c1 [class*=MaskedInput__ContainerBox] {
  padding-block: 6px;
  padding-inline: 6px;
  gap: 6px;
  display: flex;
  flex-direction: column;
}

.c7 {
  font-size: 1.125rem;
  line-height: 1.5rem;
  color: #2e2e2e;
  font-weight: 500;
}

.c4 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
  width: 100%;
}

.c4:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c4:focus:not(:focus-visible) >circle,
.c4:focus:not(:focus-visible) >ellipse,
.c4:focus:not(:focus-visible) >line,
.c4:focus:not(:focus-visible) >path,
.c4:focus:not(:focus-visible) >polygon,
.c4:focus:not(:focus-visible) >polyline,
.c4:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c4:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c9 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: none;
  border-radius: 9999px;
  padding: 5px 12px;
  font-size: 1.125rem;
  line-height: 1.5rem;
  padding: 5px 12px;
  color: #555555;
  border-style: solid;
  border-width: 1px;
  border-color: rgba(0, 0, 0, 0);
  border-radius: 6px;
  font-weight: 500;
  padding: 5px 12px;
  text-align: start;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c9:hover {
  background-color: rgba(0, 0, 0, 0.04);
  color: #555555;
  border-color: rgba(0, 0, 0, 0);
}

.c9:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c9:focus >circle,
.c9:focus >ellipse,
.c9:focus >line,
.c9:focus >path,
.c9:focus >polygon,
.c9:focus >polyline,
.c9:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c9:focus ::-moz-focus-inner {
  border: 0;
}

.c9:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c9:focus:not(:focus-visible) >circle,
.c9:focus:not(:focus-visible) >ellipse,
.c9:focus:not(:focus-visible) >line,
.c9:focus:not(:focus-visible) >path,
.c9:focus:not(:focus-visible) >polygon,
.c9:focus:not(:focus-visible) >polyline,
.c9:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c9:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c11 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: none;
  border-radius: 9999px;
  padding: 5px 12px;
  font-size: 1.125rem;
  line-height: 1.5rem;
  padding: 5px 12px;
  color: #555555;
  border-style: solid;
  border-width: 1px;
  border-color: rgba(0, 0, 0, 0);
  border-radius: 6px;
  font-weight: 500;
  padding: 5px 12px;
  background-color: #d1ffee;
  color: #2e2e2e;
  border-color: rgba(0, 0, 0, 0);
  font-weight: 500;
  position: relative;
  text-align: start;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c11::before {
  display: block;
  position: absolute;
  content: '';
  width: 6px;
  border-top-left-radius: 9999px;
  border-bottom-left-radius: 9999px;
  top: -1px;
  bottom: -1px;
  left: -1px;
  background: #006750;
}

.c11:hover {
  background-color: rgba(0, 0, 0, 0.04);
  color: #555555;
  border-color: rgba(0, 0, 0, 0);
  background: #aafade;
  color: #2e2e2e;
}

.c11:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c11:focus >circle,
.c11:focus >ellipse,
.c11:focus >line,
.c11:focus >path,
.c11:focus >polygon,
.c11:focus >polyline,
.c11:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c11:focus ::-moz-focus-inner {
  border: 0;
}

.c11:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c11:focus:not(:focus-visible) >circle,
.c11:focus:not(:focus-visible) >ellipse,
.c11:focus:not(:focus-visible) >line,
.c11:focus:not(:focus-visible) >path,
.c11:focus:not(:focus-visible) >polygon,
.c11:focus:not(:focus-visible) >polyline,
.c11:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c11:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: inherit;
}

.c3 div:has(input[type="search"]) {
  padding-bottom: 0;
}

.c3 button[aria-label*="Or, press"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c3 button[aria-label*="Or, press"]:focus {
  background: transparent;
}

.c3 button[aria-label*="Or, press"]:focus >div {
  background: rgba(0, 0, 0, 0.04);
}

.c8 {
  position: relative;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
  padding-top: 6px;
  padding-inline: 6px;
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.c8 [role="option"] {
  border-radius: 6px;
}

.c10 {
  display: block;
  width: 100%;
}

.c5:focus {
  background-color: rgba(0, 0, 0, 0.04);
  color: #555555;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {
  .c6 {
    padding-left: 12px;
    padding-right: 12px;
  }
}

@media only screen and (max-width: 768px) {
  .c6 {
    padding-top: 6px;
    padding-bottom: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c6 {
    border-radius: 3px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: flex;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <button
      aria-label="Clear selection. Or, press down arrow to move to select options"
      class="c4 c5"
      type="button"
    >
      <div
        class="c6"
      >
        <span
          class="c7"
        >
          Clear selection
        </span>
      </div>
    </button>
    <div
      class="c8"
      role="listbox"
      tabindex="-1"
    >
      <button
        aria-posinset="1"
        aria-selected="false"
        aria-setsize="2"
        class="c9 c10"
        role="option"
        tabindex="-1"
        type="button"
      >
        one
      </button>
      <button
        aria-posinset="2"
        aria-selected="true"
        aria-setsize="2"
        class="c11 c10"
        role="option"
        tabindex="0"
        type="button"
      >
        two
      </button>
      <div
        class="c12"
      />
    </div>
  </div>
</div>
`;

exports[`Select default value clear 2`] = `
"@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
    margin-right: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-right: 12px;
  }
}"
`;

exports[`Select default value object options 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="test select; Selected: 2"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            inert=""
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value="two"
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select disabled 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
  opacity: 1;
  cursor: default;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: default;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  opacity: 0.3;
}

.c2 input {
  cursor: default;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="test select"
    class="c1 c2"
    disabled=""
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            inert=""
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select disabled 2`] = `
<div
  class="StyledGrommet-sc-19lkkz7-0 iRGypN"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="test select"
    class="StyledButtonKind-sc-1vhfpnt-0 kOOTvn StyledSelect__StyledSelectDropButton-sc-znp66n-5 hUJrDh"
    disabled=""
    id="test-select"
    type="button"
  >
    <div
      class="StyledBox-sc-13pk1d4-0 edFWqF"
    >
      <div
        class="StyledBox-sc-13pk1d4-0 nwmdD"
      >
        <div
          class="StyledTextInput__StyledTextInputContainer-sc-1x30a0s-1 bSfyXe"
        >
          <input
            autocomplete="off"
            class="StyledTextInput-sc-1x30a0s-0 hXkQju StyledSelect__SelectTextInput-sc-znp66n-4 fWdZTS"
            id="test-select__input"
            inert=""
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="StyledBox-sc-13pk1d4-0 peYnb"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="StyledIcon-sc-ofa7kd-0 iXbCzE"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select disabled key 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="test select"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            inert=""
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select disabled key 2`] = `
.c0 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 6px 12px 0px rgba(0, 0, 0, 0.12);
}

.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c9 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  height: 0px;
  flex: 0 0 auto;
}

.c1 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 6px;
  position: fixed;
  z-index: 110;
  outline: none;
  background-color: #ffffff;
  color: #555555;
  margin-top: 6px;
  opacity: 0;
  transform-origin: top left;
  animation: kPQHBD 0.1s forwards;
  animation-delay: 0.01s;
}

.c1 [class*=MaskedInput__ContainerBox] {
  padding-block: 6px;
  padding-inline: 6px;
  gap: 6px;
  display: flex;
  flex-direction: column;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: none;
  border-radius: 9999px;
  padding: 5px 12px;
  font-size: 1.125rem;
  line-height: 1.5rem;
  padding: 5px 12px;
  color: #555555;
  border-style: solid;
  border-width: 1px;
  border-color: rgba(0, 0, 0, 0);
  border-radius: 6px;
  font-weight: 500;
  padding: 5px 12px;
  background-color: rgba(0, 0, 0, 0);
  color: rgba(0, 0, 0, 0.24);
  border-color: rgba(0, 0, 0, 0);
  font-weight: 500;
  opacity: 1;
  background-color: rgba(0, 0, 0, 0.04);
  color: rgba(0, 0, 0, 0.24);
  border-color: rgba(0, 0, 0, 0);
  font-weight: 500;
  text-align: start;
  opacity: 1;
  cursor: default;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c5:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c5:focus >circle,
.c5:focus >ellipse,
.c5:focus >line,
.c5:focus >path,
.c5:focus >polygon,
.c5:focus >polyline,
.c5:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c5:focus ::-moz-focus-inner {
  border: 0;
}

.c5:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) >circle,
.c5:focus:not(:focus-visible) >ellipse,
.c5:focus:not(:focus-visible) >line,
.c5:focus:not(:focus-visible) >path,
.c5:focus:not(:focus-visible) >polygon,
.c5:focus:not(:focus-visible) >polyline,
.c5:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c7 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: none;
  border-radius: 9999px;
  padding: 5px 12px;
  font-size: 1.125rem;
  line-height: 1.5rem;
  padding: 5px 12px;
  color: #555555;
  border-style: solid;
  border-width: 1px;
  border-color: rgba(0, 0, 0, 0);
  border-radius: 6px;
  font-weight: 500;
  padding: 5px 12px;
  text-align: start;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c7:hover {
  background-color: rgba(0, 0, 0, 0.04);
  color: #555555;
  border-color: rgba(0, 0, 0, 0);
}

.c7:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c7:focus >circle,
.c7:focus >ellipse,
.c7:focus >line,
.c7:focus >path,
.c7:focus >polygon,
.c7:focus >polyline,
.c7:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c7:focus ::-moz-focus-inner {
  border: 0;
}

.c7:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c7:focus:not(:focus-visible) >circle,
.c7:focus:not(:focus-visible) >ellipse,
.c7:focus:not(:focus-visible) >line,
.c7:focus:not(:focus-visible) >path,
.c7:focus:not(:focus-visible) >polygon,
.c7:focus:not(:focus-visible) >polyline,
.c7:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c7:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: inherit;
}

.c3 div:has(input[type="search"]) {
  padding-bottom: 0;
}

.c3 button[aria-label*="Or, press"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c3 button[aria-label*="Or, press"]:focus {
  background: transparent;
}

.c3 button[aria-label*="Or, press"]:focus >div {
  background: rgba(0, 0, 0, 0.04);
}

.c4 {
  position: relative;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
  padding-top: 6px;
  padding-inline: 6px;
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.c4 [role="option"] {
  border-radius: 6px;
}

.c6 {
  display: block;
  width: 100%;
  cursor: default;
}

.c8 {
  display: block;
  width: 100%;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: flex;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
      role="listbox"
      tabindex="-1"
    >
      <button
        aria-disabled="true"
        aria-posinset="1"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        disabled=""
        role="option"
        tabindex="0"
        type="button"
      >
        Value1
      </button>
      <button
        aria-posinset="2"
        aria-selected="false"
        aria-setsize="2"
        class="c7 c8"
        role="option"
        tabindex="-1"
        type="button"
      >
        Value2
      </button>
      <div
        class="c9"
      />
    </div>
  </div>
</div>
`;

exports[`Select disabled key 3`] = `
"@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
    margin-right: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-right: 12px;
  }
}"
`;

exports[`Select disabled option value 1`] = `
.c0 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 6px 12px 0px rgba(0, 0, 0, 0.12);
}

.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c9 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  height: 0px;
  flex: 0 0 auto;
}

.c1 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 6px;
  position: fixed;
  z-index: 110;
  outline: none;
  background-color: #ffffff;
  color: #555555;
  margin-top: 6px;
  opacity: 0;
  transform-origin: top left;
  animation: kPQHBD 0.1s forwards;
  animation-delay: 0.01s;
}

.c1 [class*=MaskedInput__ContainerBox] {
  padding-block: 6px;
  padding-inline: 6px;
  gap: 6px;
  display: flex;
  flex-direction: column;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: none;
  border-radius: 9999px;
  padding: 5px 12px;
  font-size: 1.125rem;
  line-height: 1.5rem;
  padding: 5px 12px;
  color: #555555;
  border-style: solid;
  border-width: 1px;
  border-color: rgba(0, 0, 0, 0);
  border-radius: 6px;
  font-weight: 500;
  padding: 5px 12px;
  background-color: rgba(0, 0, 0, 0);
  color: rgba(0, 0, 0, 0.24);
  border-color: rgba(0, 0, 0, 0);
  font-weight: 500;
  opacity: 1;
  background-color: rgba(0, 0, 0, 0.04);
  color: rgba(0, 0, 0, 0.24);
  border-color: rgba(0, 0, 0, 0);
  font-weight: 500;
  text-align: start;
  opacity: 1;
  cursor: default;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c5:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c5:focus >circle,
.c5:focus >ellipse,
.c5:focus >line,
.c5:focus >path,
.c5:focus >polygon,
.c5:focus >polyline,
.c5:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c5:focus ::-moz-focus-inner {
  border: 0;
}

.c5:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) >circle,
.c5:focus:not(:focus-visible) >ellipse,
.c5:focus:not(:focus-visible) >line,
.c5:focus:not(:focus-visible) >path,
.c5:focus:not(:focus-visible) >polygon,
.c5:focus:not(:focus-visible) >polyline,
.c5:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c7 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: none;
  border-radius: 9999px;
  padding: 5px 12px;
  font-size: 1.125rem;
  line-height: 1.5rem;
  padding: 5px 12px;
  color: #555555;
  border-style: solid;
  border-width: 1px;
  border-color: rgba(0, 0, 0, 0);
  border-radius: 6px;
  font-weight: 500;
  padding: 5px 12px;
  text-align: start;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c7:hover {
  background-color: rgba(0, 0, 0, 0.04);
  color: #555555;
  border-color: rgba(0, 0, 0, 0);
}

.c7:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c7:focus >circle,
.c7:focus >ellipse,
.c7:focus >line,
.c7:focus >path,
.c7:focus >polygon,
.c7:focus >polyline,
.c7:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c7:focus ::-moz-focus-inner {
  border: 0;
}

.c7:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c7:focus:not(:focus-visible) >circle,
.c7:focus:not(:focus-visible) >ellipse,
.c7:focus:not(:focus-visible) >line,
.c7:focus:not(:focus-visible) >path,
.c7:focus:not(:focus-visible) >polygon,
.c7:focus:not(:focus-visible) >polyline,
.c7:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c7:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: inherit;
}

.c3 div:has(input[type="search"]) {
  padding-bottom: 0;
}

.c3 button[aria-label*="Or, press"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c3 button[aria-label*="Or, press"]:focus {
  background: transparent;
}

.c3 button[aria-label*="Or, press"]:focus >div {
  background: rgba(0, 0, 0, 0.04);
}

.c4 {
  position: relative;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
  padding-top: 6px;
  padding-inline: 6px;
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.c4 [role="option"] {
  border-radius: 6px;
}

.c6 {
  display: block;
  width: 100%;
  cursor: default;
}

.c8 {
  display: block;
  width: 100%;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: flex;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
      role="listbox"
      tabindex="-1"
    >
      <button
        aria-disabled="true"
        aria-posinset="1"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        disabled=""
        role="option"
        tabindex="0"
        type="button"
      >
        one
      </button>
      <button
        aria-posinset="2"
        aria-selected="false"
        aria-setsize="2"
        class="c7 c8"
        role="option"
        tabindex="-1"
        type="button"
      >
        two
      </button>
      <div
        class="c9"
      />
    </div>
  </div>
</div>
`;

exports[`Select disabled option value 2`] = `
"@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
    margin-right: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-right: 12px;
  }
}"
`;

exports[`Select empty results search 1`] = `
.c0 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  font-size: 1rem;
  line-height: 1.25rem;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
}

.c0:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c0:focus >circle,
.c0:focus >ellipse,
.c0:focus >line,
.c0:focus >path,
.c0:focus >polygon,
.c0:focus >polyline,
.c0:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c0:focus ::-moz-focus-inner {
  border: 0;
}

.c0::-webkit-input-placeholder {
  color: #676767;
}

.c0::-moz-placeholder {
  color: #676767;
}

.c0:-ms-input-placeholder {
  color: #676767;
}

.c0 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c0::-moz-focus-inner {
  border: none;
  outline: none;
}

.c0:-moz-placeholder,
.c0::-moz-placeholder {
  opacity: 1;
}

.c0::-webkit-input-placeholder {
  font-weight: 400;
}

.c0::-moz-placeholder {
  font-weight: 400;
}

.c0:-ms-input-placeholder {
  font-weight: 400;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

<input
  autocomplete="off"
  class="c0"
  type="search"
  value="o"
/>
`;

exports[`Select keyboard navigation timeout 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

<div
  aria-hidden="true"
  class="c0"
>
  <button
    aria-expanded="true"
    aria-haspopup="listbox"
    aria-label="test select"
    class="c1 c2"
    data-g-tabindex="none"
    id="test-select"
    tabindex="-1"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            data-g-tabindex="-1"
            id="test-select__input"
            inert=""
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="Up"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 15.999 10.173-9.824 9.824 10.173"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select large drop container height 1`] = `
.c0 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 6px 12px 0px rgba(0, 0, 0, 0.12);
}

.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c7 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  height: 0px;
  flex: 0 0 auto;
}

.c1 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 6px;
  position: fixed;
  z-index: 110;
  outline: none;
  background-color: #ffffff;
  color: #555555;
  margin-top: 6px;
  opacity: 0;
  transform-origin: top left;
  animation: kPQHBD 0.1s forwards;
  animation-delay: 0.01s;
}

.c1 [class*=MaskedInput__ContainerBox] {
  padding-block: 6px;
  padding-inline: 6px;
  gap: 6px;
  display: flex;
  flex-direction: column;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: none;
  border-radius: 9999px;
  padding: 5px 12px;
  font-size: 1.125rem;
  line-height: 1.5rem;
  padding: 5px 12px;
  color: #555555;
  border-style: solid;
  border-width: 1px;
  border-color: rgba(0, 0, 0, 0);
  border-radius: 6px;
  font-weight: 500;
  padding: 5px 12px;
  text-align: start;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c5:hover {
  background-color: rgba(0, 0, 0, 0.04);
  color: #555555;
  border-color: rgba(0, 0, 0, 0);
}

.c5:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c5:focus >circle,
.c5:focus >ellipse,
.c5:focus >line,
.c5:focus >path,
.c5:focus >polygon,
.c5:focus >polyline,
.c5:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c5:focus ::-moz-focus-inner {
  border: 0;
}

.c5:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) >circle,
.c5:focus:not(:focus-visible) >ellipse,
.c5:focus:not(:focus-visible) >line,
.c5:focus:not(:focus-visible) >path,
.c5:focus:not(:focus-visible) >polygon,
.c5:focus:not(:focus-visible) >polyline,
.c5:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: 768px;
}

.c3 div:has(input[type="search"]) {
  padding-bottom: 0;
}

.c3 button[aria-label*="Or, press"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c3 button[aria-label*="Or, press"]:focus {
  background: transparent;
}

.c3 button[aria-label*="Or, press"]:focus >div {
  background: rgba(0, 0, 0, 0.04);
}

.c4 {
  position: relative;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
  padding-top: 6px;
  padding-inline: 6px;
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.c4 [role="option"] {
  border-radius: 6px;
}

.c6 {
  display: block;
  width: 100%;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: flex;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
      role="listbox"
      tabindex="-1"
    >
      <button
        aria-posinset="1"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="0"
        type="button"
      >
        one
      </button>
      <button
        aria-posinset="2"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="-1"
        type="button"
      >
        two
      </button>
      <div
        class="c7"
      />
    </div>
  </div>
</div>
`;

exports[`Select medium drop container height 1`] = `
.c0 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 6px 12px 0px rgba(0, 0, 0, 0.12);
}

.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c7 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  height: 0px;
  flex: 0 0 auto;
}

.c1 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 6px;
  position: fixed;
  z-index: 110;
  outline: none;
  background-color: #ffffff;
  color: #555555;
  margin-top: 6px;
  opacity: 0;
  transform-origin: top left;
  animation: kPQHBD 0.1s forwards;
  animation-delay: 0.01s;
}

.c1 [class*=MaskedInput__ContainerBox] {
  padding-block: 6px;
  padding-inline: 6px;
  gap: 6px;
  display: flex;
  flex-direction: column;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: none;
  border-radius: 9999px;
  padding: 5px 12px;
  font-size: 1.125rem;
  line-height: 1.5rem;
  padding: 5px 12px;
  color: #555555;
  border-style: solid;
  border-width: 1px;
  border-color: rgba(0, 0, 0, 0);
  border-radius: 6px;
  font-weight: 500;
  padding: 5px 12px;
  text-align: start;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c5:hover {
  background-color: rgba(0, 0, 0, 0.04);
  color: #555555;
  border-color: rgba(0, 0, 0, 0);
}

.c5:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c5:focus >circle,
.c5:focus >ellipse,
.c5:focus >line,
.c5:focus >path,
.c5:focus >polygon,
.c5:focus >polyline,
.c5:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c5:focus ::-moz-focus-inner {
  border: 0;
}

.c5:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) >circle,
.c5:focus:not(:focus-visible) >ellipse,
.c5:focus:not(:focus-visible) >line,
.c5:focus:not(:focus-visible) >path,
.c5:focus:not(:focus-visible) >polygon,
.c5:focus:not(:focus-visible) >polyline,
.c5:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: 384px;
}

.c3 div:has(input[type="search"]) {
  padding-bottom: 0;
}

.c3 button[aria-label*="Or, press"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c3 button[aria-label*="Or, press"]:focus {
  background: transparent;
}

.c3 button[aria-label*="Or, press"]:focus >div {
  background: rgba(0, 0, 0, 0.04);
}

.c4 {
  position: relative;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
  padding-top: 6px;
  padding-inline: 6px;
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.c4 [role="option"] {
  border-radius: 6px;
}

.c6 {
  display: block;
  width: 100%;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: flex;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
      role="listbox"
      tabindex="-1"
    >
      <button
        aria-posinset="1"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="0"
        type="button"
      >
        one
      </button>
      <button
        aria-posinset="2"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="-1"
        type="button"
      >
        two
      </button>
      <div
        class="c7"
      />
    </div>
  </div>
</div>
`;

exports[`Select modifies select control style on open 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c6::-moz-placeholder {
  color: #AAAAAA;
}

.c6:-ms-input-placeholder {
  color: #AAAAAA;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c5 {
  position: relative;
  width: 100%;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
  background: purple;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="Select..."
    class="c1 c2"
    id="test-open-id"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            data-testid="test-select-style-open"
            id="test-open-id__input"
            inert=""
            placeholder="Select..."
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="FormDown"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m18 9-6 6-6-6"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select null value 1`] = `
<DocumentFragment>
  .c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
    class="c0"
  >
    <button
      aria-expanded="false"
      aria-haspopup="listbox"
      aria-label="test select"
      class="c1 c2"
      id="test-select"
      type="button"
    >
      <div
        class="c3"
      >
        <div
          class="c4"
        >
          <div
            class="c5"
          >
            <input
              autocomplete="off"
              class="c6 c7"
              id="test-select__input"
              inert=""
              placeholder="test select"
              readonly=""
              tabindex="-1"
              type="text"
              value=""
            />
          </div>
        </div>
        <div
          class="c8"
          style="min-width: auto;"
        >
          <svg
            aria-label="Down"
            class="c9"
            viewBox="0 0 24 24"
          >
            <path
              d="m2 8.35 10.173 9.823L21.997 8"
              fill="none"
              stroke="#000"
              stroke-width="2"
            />
          </svg>
        </div>
      </div>
    </button>
  </div>
</DocumentFragment>
`;

exports[`Select onChange with valueKey object 1`] = `
<DocumentFragment>
  .c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
    class="c0"
  >
    <button
      aria-expanded="false"
      aria-haspopup="listbox"
      aria-label="test select"
      class="c1 c2"
      id="test-select"
      type="button"
    >
      <div
        class="c3"
      >
        <div
          class="c4"
        >
          <div
            class="c5"
          >
            <input
              autocomplete="off"
              class="c6 c7"
              id="test-select__input"
              inert=""
              placeholder="test select"
              readonly=""
              tabindex="-1"
              type="text"
              value=""
            />
          </div>
        </div>
        <div
          class="c8"
          style="min-width: auto;"
        >
          <svg
            aria-label="Down"
            class="c9"
            viewBox="0 0 24 24"
          >
            <path
              d="m2 8.35 10.173 9.823L21.997 8"
              fill="none"
              stroke="#000"
              stroke-width="2"
            />
          </svg>
        </div>
      </div>
    </button>
  </div>
</DocumentFragment>
`;

exports[`Select onChange with valueKey object 2`] = `
.c0 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 6px 12px 0px rgba(0, 0, 0, 0.12);
}

.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c7 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  height: 0px;
  flex: 0 0 auto;
}

.c1 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 6px;
  position: fixed;
  z-index: 110;
  outline: none;
  background-color: #ffffff;
  color: #555555;
  margin-top: 6px;
  opacity: 0;
  transform-origin: top left;
  animation: kPQHBD 0.1s forwards;
  animation-delay: 0.01s;
}

.c1 [class*=MaskedInput__ContainerBox] {
  padding-block: 6px;
  padding-inline: 6px;
  gap: 6px;
  display: flex;
  flex-direction: column;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: none;
  border-radius: 9999px;
  padding: 5px 12px;
  font-size: 1.125rem;
  line-height: 1.5rem;
  padding: 5px 12px;
  color: #555555;
  border-style: solid;
  border-width: 1px;
  border-color: rgba(0, 0, 0, 0);
  border-radius: 6px;
  font-weight: 500;
  padding: 5px 12px;
  text-align: start;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c5:hover {
  background-color: rgba(0, 0, 0, 0.04);
  color: #555555;
  border-color: rgba(0, 0, 0, 0);
}

.c5:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c5:focus >circle,
.c5:focus >ellipse,
.c5:focus >line,
.c5:focus >path,
.c5:focus >polygon,
.c5:focus >polyline,
.c5:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c5:focus ::-moz-focus-inner {
  border: 0;
}

.c5:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) >circle,
.c5:focus:not(:focus-visible) >ellipse,
.c5:focus:not(:focus-visible) >line,
.c5:focus:not(:focus-visible) >path,
.c5:focus:not(:focus-visible) >polygon,
.c5:focus:not(:focus-visible) >polyline,
.c5:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: inherit;
}

.c3 div:has(input[type="search"]) {
  padding-bottom: 0;
}

.c3 button[aria-label*="Or, press"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c3 button[aria-label*="Or, press"]:focus {
  background: transparent;
}

.c3 button[aria-label*="Or, press"]:focus >div {
  background: rgba(0, 0, 0, 0.04);
}

.c4 {
  position: relative;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
  padding-top: 6px;
  padding-inline: 6px;
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.c4 [role="option"] {
  border-radius: 6px;
}

.c6 {
  display: block;
  width: 100%;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: flex;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
      role="listbox"
      tabindex="-1"
    >
      <button
        aria-posinset="1"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="0"
        type="button"
      >
        Value1
      </button>
      <button
        aria-posinset="2"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="-1"
        type="button"
      >
        Value2
      </button>
      <div
        class="c7"
      />
    </div>
  </div>
</div>
`;

exports[`Select onChange with valueKey object 3`] = `
"@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
    margin-right: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-right: 12px;
  }
}"
`;

exports[`Select onChange with valueKey object 4`] = `
<DocumentFragment>
  .c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

<div
    class="c0"
  >
    <button
      aria-expanded="false"
      aria-haspopup="listbox"
      aria-label="test select; Selected: 1"
      class="c1 c2"
      id="test-select"
      type="button"
    >
      <div
        class="c3"
      >
        <div
          class="c4"
        >
          <div
            class="c5"
          >
            <input
              autocomplete="off"
              class="c6 c7"
              id="test-select__input"
              inert=""
              placeholder="test select"
              readonly=""
              tabindex="-1"
              type="text"
              value="Value1"
            />
          </div>
        </div>
        <div
          class="c8"
          style="min-width: auto;"
        >
          <svg
            aria-label="Down"
            class="c9"
            viewBox="0 0 24 24"
          >
            <path
              d="m2 8.35 10.173 9.823L21.997 8"
              fill="none"
              stroke="#000"
              stroke-width="2"
            />
          </svg>
        </div>
      </div>
    </button>
  </div>
</DocumentFragment>
`;

exports[`Select onChange with valueKey string 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="test select"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            inert=""
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select onChange with valueKey string 2`] = `
.c0 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 6px 12px 0px rgba(0, 0, 0, 0.12);
}

.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c7 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  height: 0px;
  flex: 0 0 auto;
}

.c1 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 6px;
  position: fixed;
  z-index: 110;
  outline: none;
  background-color: #ffffff;
  color: #555555;
  margin-top: 6px;
  opacity: 0;
  transform-origin: top left;
  animation: kPQHBD 0.1s forwards;
  animation-delay: 0.01s;
}

.c1 [class*=MaskedInput__ContainerBox] {
  padding-block: 6px;
  padding-inline: 6px;
  gap: 6px;
  display: flex;
  flex-direction: column;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: none;
  border-radius: 9999px;
  padding: 5px 12px;
  font-size: 1.125rem;
  line-height: 1.5rem;
  padding: 5px 12px;
  color: #555555;
  border-style: solid;
  border-width: 1px;
  border-color: rgba(0, 0, 0, 0);
  border-radius: 6px;
  font-weight: 500;
  padding: 5px 12px;
  text-align: start;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c5:hover {
  background-color: rgba(0, 0, 0, 0.04);
  color: #555555;
  border-color: rgba(0, 0, 0, 0);
}

.c5:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c5:focus >circle,
.c5:focus >ellipse,
.c5:focus >line,
.c5:focus >path,
.c5:focus >polygon,
.c5:focus >polyline,
.c5:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c5:focus ::-moz-focus-inner {
  border: 0;
}

.c5:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) >circle,
.c5:focus:not(:focus-visible) >ellipse,
.c5:focus:not(:focus-visible) >line,
.c5:focus:not(:focus-visible) >path,
.c5:focus:not(:focus-visible) >polygon,
.c5:focus:not(:focus-visible) >polyline,
.c5:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: inherit;
}

.c3 div:has(input[type="search"]) {
  padding-bottom: 0;
}

.c3 button[aria-label*="Or, press"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c3 button[aria-label*="Or, press"]:focus {
  background: transparent;
}

.c3 button[aria-label*="Or, press"]:focus >div {
  background: rgba(0, 0, 0, 0.04);
}

.c4 {
  position: relative;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
  padding-top: 6px;
  padding-inline: 6px;
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.c4 [role="option"] {
  border-radius: 6px;
}

.c6 {
  display: block;
  width: 100%;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: flex;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
      role="listbox"
      tabindex="-1"
    >
      <button
        aria-posinset="1"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="0"
        type="button"
      >
        Value1
      </button>
      <button
        aria-posinset="2"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="-1"
        type="button"
      >
        Value2
      </button>
      <div
        class="c7"
      />
    </div>
  </div>
</div>
`;

exports[`Select onChange with valueKey string 3`] = `
"@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
    margin-right: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-right: 12px;
  }
}"
`;

exports[`Select onChange with valueKey string 4`] = `
<DocumentFragment>
  .c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

<div
    class="c0"
  >
    <button
      aria-expanded="false"
      aria-haspopup="listbox"
      aria-label="test select; Selected: Value1"
      class="c1 c2"
      id="test-select"
      type="button"
    >
      <div
        class="c3"
      >
        <div
          class="c4"
        >
          <div
            class="c5"
          >
            <input
              autocomplete="off"
              class="c6 c7"
              id="test-select__input"
              inert=""
              placeholder="test select"
              readonly=""
              tabindex="-1"
              type="text"
              value="Value1"
            />
          </div>
        </div>
        <div
          class="c8"
          style="min-width: auto;"
        >
          <svg
            aria-label="Down"
            class="c9"
            viewBox="0 0 24 24"
          >
            <path
              d="m2 8.35 10.173 9.823L21.997 8"
              fill="none"
              stroke="#000"
              stroke-width="2"
            />
          </svg>
        </div>
      </div>
    </button>
  </div>
</DocumentFragment>
`;

exports[`Select onChange with valueLabel 1`] = `
.c7 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c7 g {
  fill: inherit;
  stroke: inherit;
}

.c7 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c7 *[stroke*='#'],
.c7 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c7 *[fill-rule],
.c7 *[FILL-RULE],
.c7 *[fill*='#'],
.c7 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c6 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c5 {
  display: none;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c6 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c6 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c6 {
    margin-right: 12px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="Open Drop"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <span>
          none
        </span>
        <input
          class="c5"
          id="test-select__input"
          inert=""
          readonly=""
          type="text"
        />
      </div>
      <div
        class="c6"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="c7"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select onChange with valueLabel 2`] = `
.c0 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 6px 12px 0px rgba(0, 0, 0, 0.12);
}

.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c7 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  height: 0px;
  flex: 0 0 auto;
}

.c1 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 6px;
  position: fixed;
  z-index: 110;
  outline: none;
  background-color: #ffffff;
  color: #555555;
  margin-top: 6px;
  opacity: 0;
  transform-origin: top left;
  animation: kPQHBD 0.1s forwards;
  animation-delay: 0.01s;
}

.c1 [class*=MaskedInput__ContainerBox] {
  padding-block: 6px;
  padding-inline: 6px;
  gap: 6px;
  display: flex;
  flex-direction: column;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: none;
  border-radius: 9999px;
  padding: 5px 12px;
  font-size: 1.125rem;
  line-height: 1.5rem;
  padding: 5px 12px;
  color: #555555;
  border-style: solid;
  border-width: 1px;
  border-color: rgba(0, 0, 0, 0);
  border-radius: 6px;
  font-weight: 500;
  padding: 5px 12px;
  text-align: start;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c5:hover {
  background-color: rgba(0, 0, 0, 0.04);
  color: #555555;
  border-color: rgba(0, 0, 0, 0);
}

.c5:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c5:focus >circle,
.c5:focus >ellipse,
.c5:focus >line,
.c5:focus >path,
.c5:focus >polygon,
.c5:focus >polyline,
.c5:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c5:focus ::-moz-focus-inner {
  border: 0;
}

.c5:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) >circle,
.c5:focus:not(:focus-visible) >ellipse,
.c5:focus:not(:focus-visible) >line,
.c5:focus:not(:focus-visible) >path,
.c5:focus:not(:focus-visible) >polygon,
.c5:focus:not(:focus-visible) >polyline,
.c5:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: inherit;
}

.c3 div:has(input[type="search"]) {
  padding-bottom: 0;
}

.c3 button[aria-label*="Or, press"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c3 button[aria-label*="Or, press"]:focus {
  background: transparent;
}

.c3 button[aria-label*="Or, press"]:focus >div {
  background: rgba(0, 0, 0, 0.04);
}

.c4 {
  position: relative;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
  padding-top: 6px;
  padding-inline: 6px;
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.c4 [role="option"] {
  border-radius: 6px;
}

.c6 {
  display: block;
  width: 100%;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: flex;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
      role="listbox"
      tabindex="-1"
    >
      <button
        aria-posinset="1"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="0"
        type="button"
      >
        one
      </button>
      <button
        aria-posinset="2"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="-1"
        type="button"
      >
        two
      </button>
      <div
        class="c7"
      />
    </div>
  </div>
</div>
`;

exports[`Select onChange with valueLabel 3`] = `
"@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
    margin-right: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-right: 12px;
  }
}"
`;

exports[`Select onChange without labelKey 1`] = `
<DocumentFragment>
  .c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
    class="c0"
  >
    <button
      aria-expanded="false"
      aria-haspopup="listbox"
      aria-label="test select"
      class="c1 c2"
      id="test-select"
      type="button"
    >
      <div
        class="c3"
      >
        <div
          class="c4"
        >
          <div
            class="c5"
          >
            <input
              autocomplete="off"
              class="c6 c7"
              id="test-select__input"
              inert=""
              placeholder="test select"
              readonly=""
              tabindex="-1"
              type="text"
              value=""
            />
          </div>
        </div>
        <div
          class="c8"
          style="min-width: auto;"
        >
          <svg
            aria-label="Down"
            class="c9"
            viewBox="0 0 24 24"
          >
            <path
              d="m2 8.35 10.173 9.823L21.997 8"
              fill="none"
              stroke="#000"
              stroke-width="2"
            />
          </svg>
        </div>
      </div>
    </button>
  </div>
</DocumentFragment>
`;

exports[`Select onChange without labelKey 2`] = `
.c0 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 6px 12px 0px rgba(0, 0, 0, 0.12);
}

.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c7 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  height: 0px;
  flex: 0 0 auto;
}

.c1 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 6px;
  position: fixed;
  z-index: 110;
  outline: none;
  background-color: #ffffff;
  color: #555555;
  margin-top: 6px;
  opacity: 0;
  transform-origin: top left;
  animation: kPQHBD 0.1s forwards;
  animation-delay: 0.01s;
}

.c1 [class*=MaskedInput__ContainerBox] {
  padding-block: 6px;
  padding-inline: 6px;
  gap: 6px;
  display: flex;
  flex-direction: column;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: none;
  border-radius: 9999px;
  padding: 5px 12px;
  font-size: 1.125rem;
  line-height: 1.5rem;
  padding: 5px 12px;
  color: #555555;
  border-style: solid;
  border-width: 1px;
  border-color: rgba(0, 0, 0, 0);
  border-radius: 6px;
  font-weight: 500;
  padding: 5px 12px;
  text-align: start;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c5:hover {
  background-color: rgba(0, 0, 0, 0.04);
  color: #555555;
  border-color: rgba(0, 0, 0, 0);
}

.c5:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c5:focus >circle,
.c5:focus >ellipse,
.c5:focus >line,
.c5:focus >path,
.c5:focus >polygon,
.c5:focus >polyline,
.c5:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c5:focus ::-moz-focus-inner {
  border: 0;
}

.c5:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) >circle,
.c5:focus:not(:focus-visible) >ellipse,
.c5:focus:not(:focus-visible) >line,
.c5:focus:not(:focus-visible) >path,
.c5:focus:not(:focus-visible) >polygon,
.c5:focus:not(:focus-visible) >polyline,
.c5:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: inherit;
}

.c3 div:has(input[type="search"]) {
  padding-bottom: 0;
}

.c3 button[aria-label*="Or, press"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c3 button[aria-label*="Or, press"]:focus {
  background: transparent;
}

.c3 button[aria-label*="Or, press"]:focus >div {
  background: rgba(0, 0, 0, 0.04);
}

.c4 {
  position: relative;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
  padding-top: 6px;
  padding-inline: 6px;
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.c4 [role="option"] {
  border-radius: 6px;
}

.c6 {
  display: block;
  width: 100%;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: flex;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
      role="listbox"
      tabindex="-1"
    >
      <button
        aria-posinset="1"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="0"
        type="button"
      >
        1
      </button>
      <button
        aria-posinset="2"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="-1"
        type="button"
      >
        2
      </button>
      <div
        class="c7"
      />
    </div>
  </div>
</div>
`;

exports[`Select onChange without labelKey 3`] = `
"@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
    margin-right: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-right: 12px;
  }
}"
`;

exports[`Select onChange without labelKey 4`] = `
<DocumentFragment>
  .c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

<div
    class="c0"
  >
    <button
      aria-expanded="false"
      aria-haspopup="listbox"
      aria-label="test select; Selected: 1"
      class="c1 c2"
      id="test-select"
      type="button"
    >
      <div
        class="c3"
      >
        <div
          class="c4"
        >
          <div
            class="c5"
          >
            <input
              autocomplete="off"
              class="c6 c7"
              id="test-select__input"
              inert=""
              placeholder="test select"
              readonly=""
              tabindex="-1"
              type="text"
              value="1"
            />
          </div>
        </div>
        <div
          class="c8"
          style="min-width: auto;"
        >
          <svg
            aria-label="Down"
            class="c9"
            viewBox="0 0 24 24"
          >
            <path
              d="m2 8.35 10.173 9.823L21.997 8"
              fill="none"
              stroke="#000"
              stroke-width="2"
            />
          </svg>
        </div>
      </div>
    </button>
  </div>
</DocumentFragment>
`;

exports[`Select onChange without labelKey or valueKey 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="test select"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            inert=""
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select onChange without labelKey or valueKey 2`] = `
.c0 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 6px 12px 0px rgba(0, 0, 0, 0.12);
}

.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c7 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  height: 0px;
  flex: 0 0 auto;
}

.c1 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 6px;
  position: fixed;
  z-index: 110;
  outline: none;
  background-color: #ffffff;
  color: #555555;
  margin-top: 6px;
  opacity: 0;
  transform-origin: top left;
  animation: kPQHBD 0.1s forwards;
  animation-delay: 0.01s;
}

.c1 [class*=MaskedInput__ContainerBox] {
  padding-block: 6px;
  padding-inline: 6px;
  gap: 6px;
  display: flex;
  flex-direction: column;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: none;
  border-radius: 9999px;
  padding: 5px 12px;
  font-size: 1.125rem;
  line-height: 1.5rem;
  padding: 5px 12px;
  color: #555555;
  border-style: solid;
  border-width: 1px;
  border-color: rgba(0, 0, 0, 0);
  border-radius: 6px;
  font-weight: 500;
  padding: 5px 12px;
  text-align: start;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c5:hover {
  background-color: rgba(0, 0, 0, 0.04);
  color: #555555;
  border-color: rgba(0, 0, 0, 0);
}

.c5:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c5:focus >circle,
.c5:focus >ellipse,
.c5:focus >line,
.c5:focus >path,
.c5:focus >polygon,
.c5:focus >polyline,
.c5:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c5:focus ::-moz-focus-inner {
  border: 0;
}

.c5:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) >circle,
.c5:focus:not(:focus-visible) >ellipse,
.c5:focus:not(:focus-visible) >line,
.c5:focus:not(:focus-visible) >path,
.c5:focus:not(:focus-visible) >polygon,
.c5:focus:not(:focus-visible) >polyline,
.c5:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: inherit;
}

.c3 div:has(input[type="search"]) {
  padding-bottom: 0;
}

.c3 button[aria-label*="Or, press"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c3 button[aria-label*="Or, press"]:focus {
  background: transparent;
}

.c3 button[aria-label*="Or, press"]:focus >div {
  background: rgba(0, 0, 0, 0.04);
}

.c4 {
  position: relative;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
  padding-top: 6px;
  padding-inline: 6px;
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.c4 [role="option"] {
  border-radius: 6px;
}

.c6 {
  display: block;
  width: 100%;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: flex;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
      role="listbox"
      tabindex="-1"
    >
      <button
        aria-posinset="1"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="0"
        type="button"
      >
        1
      </button>
      <button
        aria-posinset="2"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="-1"
        type="button"
      >
        2
      </button>
      <div
        class="c7"
      />
    </div>
  </div>
</div>
`;

exports[`Select onChange without labelKey or valueKey 3`] = `
"@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
    margin-right: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-right: 12px;
  }
}"
`;

exports[`Select onChange without labelKey or valueKey 4`] = `
<DocumentFragment>
  .c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

<div
    class="c0"
  >
    <button
      aria-expanded="false"
      aria-haspopup="listbox"
      aria-label="test select; Selected: 1"
      class="c1 c2"
      id="test-select"
      type="button"
    >
      <div
        class="c3"
      >
        <div
          class="c4"
        >
          <div
            class="c5"
          >
            <input
              autocomplete="off"
              class="c6 c7"
              id="test-select__input"
              inert=""
              placeholder="test select"
              readonly=""
              tabindex="-1"
              type="text"
              value="1"
            />
          </div>
        </div>
        <div
          class="c8"
          style="min-width: auto;"
        >
          <svg
            aria-label="Down"
            class="c9"
            viewBox="0 0 24 24"
          >
            <path
              d="m2 8.35 10.173 9.823L21.997 8"
              fill="none"
              stroke="#000"
              stroke-width="2"
            />
          </svg>
        </div>
      </div>
    </button>
  </div>
</DocumentFragment>
`;

exports[`Select onChange without valueKey 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="test select"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            inert=""
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select onChange without valueKey 2`] = `
.c0 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 6px 12px 0px rgba(0, 0, 0, 0.12);
}

.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c7 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  height: 0px;
  flex: 0 0 auto;
}

.c1 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 6px;
  position: fixed;
  z-index: 110;
  outline: none;
  background-color: #ffffff;
  color: #555555;
  margin-top: 6px;
  opacity: 0;
  transform-origin: top left;
  animation: kPQHBD 0.1s forwards;
  animation-delay: 0.01s;
}

.c1 [class*=MaskedInput__ContainerBox] {
  padding-block: 6px;
  padding-inline: 6px;
  gap: 6px;
  display: flex;
  flex-direction: column;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: none;
  border-radius: 9999px;
  padding: 5px 12px;
  font-size: 1.125rem;
  line-height: 1.5rem;
  padding: 5px 12px;
  color: #555555;
  border-style: solid;
  border-width: 1px;
  border-color: rgba(0, 0, 0, 0);
  border-radius: 6px;
  font-weight: 500;
  padding: 5px 12px;
  text-align: start;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c5:hover {
  background-color: rgba(0, 0, 0, 0.04);
  color: #555555;
  border-color: rgba(0, 0, 0, 0);
}

.c5:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c5:focus >circle,
.c5:focus >ellipse,
.c5:focus >line,
.c5:focus >path,
.c5:focus >polygon,
.c5:focus >polyline,
.c5:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c5:focus ::-moz-focus-inner {
  border: 0;
}

.c5:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) >circle,
.c5:focus:not(:focus-visible) >ellipse,
.c5:focus:not(:focus-visible) >line,
.c5:focus:not(:focus-visible) >path,
.c5:focus:not(:focus-visible) >polygon,
.c5:focus:not(:focus-visible) >polyline,
.c5:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: inherit;
}

.c3 div:has(input[type="search"]) {
  padding-bottom: 0;
}

.c3 button[aria-label*="Or, press"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c3 button[aria-label*="Or, press"]:focus {
  background: transparent;
}

.c3 button[aria-label*="Or, press"]:focus >div {
  background: rgba(0, 0, 0, 0.04);
}

.c4 {
  position: relative;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
  padding-top: 6px;
  padding-inline: 6px;
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.c4 [role="option"] {
  border-radius: 6px;
}

.c6 {
  display: block;
  width: 100%;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: flex;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
      role="listbox"
      tabindex="-1"
    >
      <button
        aria-posinset="1"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="0"
        type="button"
      >
        Value1
      </button>
      <button
        aria-posinset="2"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="-1"
        type="button"
      >
        Value2
      </button>
      <div
        class="c7"
      />
    </div>
  </div>
</div>
`;

exports[`Select onChange without valueKey 3`] = `
"@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
    margin-right: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-right: 12px;
  }
}"
`;

exports[`Select onChange without valueKey 4`] = `
<DocumentFragment>
  .c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

<div
    class="c0"
  >
    <button
      aria-expanded="false"
      aria-haspopup="listbox"
      aria-label="test select; Selected: Value1"
      class="c1 c2"
      id="test-select"
      type="button"
    >
      <div
        class="c3"
      >
        <div
          class="c4"
        >
          <div
            class="c5"
          >
            <input
              autocomplete="off"
              class="c6 c7"
              id="test-select__input"
              inert=""
              placeholder="test select"
              readonly=""
              tabindex="-1"
              type="text"
              value="Value1"
            />
          </div>
        </div>
        <div
          class="c8"
          style="min-width: auto;"
        >
          <svg
            aria-label="Down"
            class="c9"
            viewBox="0 0 24 24"
          >
            <path
              d="m2 8.35 10.173 9.823L21.997 8"
              fill="none"
              stroke="#000"
              stroke-width="2"
            />
          </svg>
        </div>
      </div>
    </button>
  </div>
</DocumentFragment>
`;

exports[`Select prop: onClose 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="test select"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            inert=""
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select prop: onClose 2`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

<body>
  <div />
  <div>
    <div
      class="c0"
    >
      <button
        aria-expanded="false"
        aria-haspopup="listbox"
        aria-label="test select"
        class="c1 c2"
        id="test-select"
        type="button"
      >
        <div
          class="c3"
        >
          <div
            class="c4"
          >
            <div
              class="c5"
            >
              <input
                autocomplete="off"
                class="c6 c7"
                id="test-select__input"
                inert=""
                placeholder="test select"
                readonly=""
                tabindex="-1"
                type="text"
                value=""
              />
            </div>
          </div>
          <div
            class="c8"
            style="min-width: auto;"
          >
            <svg
              aria-label="Down"
              class="c9"
              viewBox="0 0 24 24"
            >
              <path
                d="m2 8.35 10.173 9.823L21.997 8"
                fill="none"
                stroke="#000"
                stroke-width="2"
              />
            </svg>
          </div>
        </div>
      </button>
    </div>
  </div>
</body>
`;

exports[`Select prop: onOpen 1`] = `
.c8 {
  display: inline-block;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c8 g {
  fill: inherit;
  stroke: inherit;
}

.c8 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c8 *[stroke*='#'],
.c8 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c8 *[fill-rule],
.c8 *[FILL-RULE],
.c8 *[fill*='#'],
.c8 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c7 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c0 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c0:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus >circle,
.c0:focus >ellipse,
.c0:focus >line,
.c0:focus >path,
.c0:focus >polygon,
.c0:focus >polyline,
.c0:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus ::-moz-focus-inner {
  border: 0;
}

.c0:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible) >circle,
.c0:focus:not(:focus-visible) >ellipse,
.c0:focus:not(:focus-visible) >line,
.c0:focus:not(:focus-visible) >path,
.c0:focus:not(:focus-visible) >polygon,
.c0:focus:not(:focus-visible) >polyline,
.c0:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c0:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c5 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
  border: none;
  outline: none;
  border: none;
}

.c5::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c5::-moz-placeholder {
  color: #AAAAAA;
}

.c5:-ms-input-placeholder {
  color: #AAAAAA;
}

.c5 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c5::-moz-focus-inner {
  border: none;
  outline: none;
}

.c5:-moz-placeholder,
.c5::-moz-placeholder {
  opacity: 1;
}

.c4 {
  position: relative;
  width: 100%;
}

.c6 {
  cursor: pointer;
}

.c1 {
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
}

@media only screen and (max-width: 768px) {
  .c7 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<button
  aria-expanded="false"
  aria-haspopup="listbox"
  aria-label="test select"
  class="c0 c1"
  id="test-select"
  type="button"
>
  <div
    class="c2"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <input
          autocomplete="off"
          class="c5 c6"
          id="test-select__input"
          inert=""
          placeholder="test select"
          readonly=""
          tabindex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      class="c7"
      style="min-width: auto;"
    >
      <svg
        aria-label="FormDown"
        class="c8"
        viewBox="0 0 24 24"
      >
        <path
          d="m18 9-6 6-6-6"
          fill="none"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select prop: onOpen 2`] = `
<button
  aria-expanded="true"
  aria-haspopup="listbox"
  aria-label="test select"
  class="StyledButton-sc-323bzc-0 jLPXpV StyledSelect__StyledSelectDropButton-sc-znp66n-5 cKuORg"
  id="test-select"
  type="button"
>
  <div
    class="StyledBox-sc-13pk1d4-0 edFWqF"
  >
    <div
      class="StyledBox-sc-13pk1d4-0 nwmdD"
    >
      <div
        class="StyledTextInput__StyledTextInputContainer-sc-1x30a0s-1 iogQf"
      >
        <input
          autocomplete="off"
          class="StyledTextInput-sc-1x30a0s-0 lfLLpA StyledSelect__SelectTextInput-sc-znp66n-4 bGoxrS"
          id="test-select__input"
          inert=""
          placeholder="test select"
          readonly=""
          tabindex="-1"
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      class="StyledBox-sc-13pk1d4-0 dcgDzS"
      style="min-width: auto;"
    >
      <svg
        aria-label="FormDown"
        class="StyledIcon-sc-ofa7kd-0 krSgpg"
        viewBox="0 0 24 24"
      >
        <path
          d="m18 9-6 6-6-6"
          fill="none"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </div>
  </div>
</button>
`;

exports[`Select prop: onOpen 3`] = `
.c0 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.20);
}

.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c7 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  padding: 12px;
}

.c9 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  height: 0px;
  flex: 0 0 auto;
}

.c1 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  position: fixed;
  z-index: 20;
  outline: none;
  background-color: #FFFFFF;
  color: #444444;
  opacity: 0;
  transform-origin: top left;
  animation: kPQHBD 0.1s forwards;
  animation-delay: 0.01s;
}

.c8 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c5:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus >circle,
.c5:focus >ellipse,
.c5:focus >line,
.c5:focus >path,
.c5:focus >polygon,
.c5:focus >polyline,
.c5:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus ::-moz-focus-inner {
  border: 0;
}

.c5:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) >circle,
.c5:focus:not(:focus-visible) >ellipse,
.c5:focus:not(:focus-visible) >line,
.c5:focus:not(:focus-visible) >path,
.c5:focus:not(:focus-visible) >polygon,
.c5:focus:not(:focus-visible) >polyline,
.c5:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: inherit;
}

.c4 {
  position: relative;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
}

.c6 {
  display: block;
  width: 100%;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {
  .c7 {
    padding: 6px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: flex;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
      role="listbox"
      tabindex="-1"
    >
      <button
        aria-posinset="1"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="0"
        type="button"
      >
        <div
          class="c7"
        >
          <span
            class="c8"
          >
            one
          </span>
        </div>
      </button>
      <button
        aria-posinset="2"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7"
        >
          <span
            class="c8"
          >
            two
          </span>
        </div>
      </button>
      <div
        class="c9"
      />
    </div>
  </div>
</div>
`;

exports[`Select prop: onOpen 4`] = `
"@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
    margin-right: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-right: 12px;
  }
}"
`;

exports[`Select prop: onOpen 5`] = `
<div
  class="StyledSelect__OptionsContainer-sc-znp66n-1 kARYcO"
  role="listbox"
  tabindex="-1"
>
  <button
    aria-posinset="1"
    aria-selected="false"
    aria-setsize="2"
    class="StyledButton-sc-323bzc-0 jLPXpV StyledSelect__SelectOption-sc-znp66n-3 lkKTUk"
    role="option"
    tabindex="0"
    type="button"
  >
    <div
      class="StyledBox-sc-13pk1d4-0 jfutgd"
    >
      <span
        class="StyledText-sc-1sadyjn-0 gQrfUm"
      >
        one
      </span>
    </div>
  </button>
  <button
    aria-posinset="2"
    aria-selected="false"
    aria-setsize="2"
    class="StyledButton-sc-323bzc-0 jLPXpV StyledSelect__SelectOption-sc-znp66n-3 lkKTUk"
    role="option"
    tabindex="-1"
    type="button"
  >
    <div
      class="StyledBox-sc-13pk1d4-0 jfutgd"
    >
      <span
        class="StyledText-sc-1sadyjn-0 gQrfUm"
      >
        two
      </span>
    </div>
  </button>
  <div
    class="StyledBox-sc-13pk1d4-0 hylnGi"
  />
</div>
`;

exports[`Select renders custom clear selection styling 1`] = `
<DocumentFragment>
  .c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c6::-moz-placeholder {
  color: #AAAAAA;
}

.c6:-ms-input-placeholder {
  color: #AAAAAA;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c5 {
  position: relative;
  width: 100%;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
    class="c0"
  >
    <button
      aria-expanded="false"
      aria-haspopup="listbox"
      aria-label="Select time; Selected: afternoon"
      class="c1 c2"
      id="test-clear-selection"
      type="button"
    >
      <div
        class="c3"
      >
        <div
          class="c4"
        >
          <div
            class="c5"
          >
            <input
              autocomplete="off"
              class="c6 c7"
              data-testid="test-select-style-open"
              id="test-clear-selection__input"
              inert=""
              placeholder="Select time"
              readonly=""
              tabindex="-1"
              type="text"
              value="afternoon"
            />
          </div>
        </div>
        <div
          class="c8"
          style="min-width: auto;"
        >
          <svg
            aria-label="FormDown"
            class="c9"
            viewBox="0 0 24 24"
          >
            <path
              d="m18 9-6 6-6-6"
              fill="none"
              stroke="#000"
              stroke-width="2"
            />
          </svg>
        </div>
      </div>
    </button>
  </div>
</DocumentFragment>
`;

exports[`Select renders custom clear selection styling 2`] = `
.c0 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.20);
}

.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c11 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  padding: 12px;
}

.c15 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  height: 0px;
  flex: 0 0 auto;
}

.c6 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: flex-start;
  background: blue;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 6px;
  padding-bottom: 6px;
}

.c1 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  position: fixed;
  z-index: 20;
  outline: none;
  background-color: #FFFFFF;
  color: #444444;
  opacity: 0;
  transform-origin: top left;
  animation: kPQHBD 0.1s forwards;
  animation-delay: 0.01s;
}

.c7 {
  font-size: 18px;
  line-height: 24px;
  color: #000000;
  font-weight: 600;
}

.c12 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
}

.c9 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c9:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c9:focus >circle,
.c9:focus >ellipse,
.c9:focus >line,
.c9:focus >path,
.c9:focus >polygon,
.c9:focus >polyline,
.c9:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c9:focus ::-moz-focus-inner {
  border: 0;
}

.c9:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c9:focus:not(:focus-visible) >circle,
.c9:focus:not(:focus-visible) >ellipse,
.c9:focus:not(:focus-visible) >line,
.c9:focus:not(:focus-visible) >path,
.c9:focus:not(:focus-visible) >polygon,
.c9:focus:not(:focus-visible) >polyline,
.c9:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c9:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c13 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c13:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c13:focus >circle,
.c13:focus >ellipse,
.c13:focus >line,
.c13:focus >path,
.c13:focus >polygon,
.c13:focus >polyline,
.c13:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c13:focus ::-moz-focus-inner {
  border: 0;
}

.c13:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c13:focus:not(:focus-visible) >circle,
.c13:focus:not(:focus-visible) >ellipse,
.c13:focus:not(:focus-visible) >line,
.c13:focus:not(:focus-visible) >path,
.c13:focus:not(:focus-visible) >polygon,
.c13:focus:not(:focus-visible) >polyline,
.c13:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c13:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c4 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  width: 100%;
}

.c4:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c4:focus:not(:focus-visible) >circle,
.c4:focus:not(:focus-visible) >ellipse,
.c4:focus:not(:focus-visible) >line,
.c4:focus:not(:focus-visible) >path,
.c4:focus:not(:focus-visible) >polygon,
.c4:focus:not(:focus-visible) >polyline,
.c4:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c4:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: inherit;
}

.c8 {
  position: relative;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
}

.c10 {
  display: block;
  width: 100%;
}

.c14 {
  background-color: #7D4CDB;
  color: #FFFFFF;
  display: block;
  width: 100%;
}

.c5:focus {
  background-color: rgba(221, 221, 221, 0.4);
  color: #000000;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {
  .c11 {
    padding: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c6 {
    padding-left: 12px;
    padding-right: 12px;
  }
}

@media only screen and (max-width: 768px) {
  .c6 {
    padding-top: 6px;
    padding-bottom: 6px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: flex;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-clear-selection__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-clear-selection__select-drop"
  >
    <button
      aria-label="Clear selection. Or, press down arrow to move to select options"
      class="c4 c5"
      type="button"
    >
      <div
        class="c6"
      >
        <span
          class="c7"
        >
          Clear selection
        </span>
      </div>
    </button>
    <div
      class="c8"
      role="listbox"
      tabindex="-1"
    >
      <button
        aria-posinset="1"
        aria-selected="false"
        aria-setsize="3"
        class="c9 c10"
        role="option"
        tabindex="-1"
        type="button"
      >
        <div
          class="c11"
        >
          <span
            class="c12"
          >
            morning
          </span>
        </div>
      </button>
      <button
        aria-posinset="2"
        aria-selected="true"
        aria-setsize="3"
        class="c13 c14"
        role="option"
        tabindex="0"
        type="button"
      >
        <div
          class="c11"
        >
          <span
            class="c12"
          >
            afternoon
          </span>
        </div>
      </button>
      <button
        aria-posinset="3"
        aria-selected="false"
        aria-setsize="3"
        class="c9 c10"
        role="option"
        tabindex="-1"
        type="button"
      >
        <div
          class="c11"
        >
          <span
            class="c12"
          >
            evening
          </span>
        </div>
      </button>
      <div
        class="c15"
      />
    </div>
  </div>
</div>
`;

exports[`Select renders custom clear selection styling 3`] = `
"@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
    margin-right: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-right: 12px;
  }
}"
`;

exports[`Select renders custom icon 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="Open Drop"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            inert=""
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="CaretDown"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="M22 8 12 20 2 8z"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select renders custom listbox styling 1`] = `
.c0 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.20);
}

.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c7 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: flex-start;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  padding: 12px;
}

.c11 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  height: 0px;
  flex: 0 0 auto;
}

.c1 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 0px;
  position: fixed;
  z-index: 20;
  outline: none;
  background-color: #FFFFFF;
  color: #444444;
  opacity: 0;
  transform-origin: top left;
  animation: kPQHBD 0.1s forwards;
  animation-delay: 0.01s;
}

.c8 {
  margin: 0px;
  font-size: 18px;
  line-height: 24px;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c5:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus >circle,
.c5:focus >ellipse,
.c5:focus >line,
.c5:focus >path,
.c5:focus >polygon,
.c5:focus >polyline,
.c5:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus ::-moz-focus-inner {
  border: 0;
}

.c5:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) >circle,
.c5:focus:not(:focus-visible) >ellipse,
.c5:focus:not(:focus-visible) >line,
.c5:focus:not(:focus-visible) >path,
.c5:focus:not(:focus-visible) >polygon,
.c5:focus:not(:focus-visible) >polyline,
.c5:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c9 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c9:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c9:focus >circle,
.c9:focus >ellipse,
.c9:focus >line,
.c9:focus >path,
.c9:focus >polygon,
.c9:focus >polyline,
.c9:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c9:focus ::-moz-focus-inner {
  border: 0;
}

.c9:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c9:focus:not(:focus-visible) >circle,
.c9:focus:not(:focus-visible) >ellipse,
.c9:focus:not(:focus-visible) >line,
.c9:focus:not(:focus-visible) >path,
.c9:focus:not(:focus-visible) >polygon,
.c9:focus:not(:focus-visible) >polyline,
.c9:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c9:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: inherit;
}

.c4 {
  position: relative;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
  padding: 24px;
}

.c6 {
  display: block;
  width: 100%;
}

.c10 {
  background-color: #7D4CDB;
  color: #FFFFFF;
  display: block;
  width: 100%;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {
  .c7 {
    padding: 6px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: flex;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-listbox__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-listbox__select-drop"
  >
    <div
      class="c4"
      role="listbox"
      tabindex="-1"
    >
      <button
        aria-posinset="1"
        aria-selected="false"
        aria-setsize="3"
        class="c5 c6"
        role="option"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7"
        >
          <span
            class="c8"
          >
            morning
          </span>
        </div>
      </button>
      <button
        aria-posinset="2"
        aria-selected="true"
        aria-setsize="3"
        class="c9 c10"
        role="option"
        tabindex="0"
        type="button"
      >
        <div
          class="c7"
        >
          <span
            class="c8"
          >
            afternoon
          </span>
        </div>
      </button>
      <button
        aria-posinset="3"
        aria-selected="false"
        aria-setsize="3"
        class="c5 c6"
        role="option"
        tabindex="-1"
        type="button"
      >
        <div
          class="c7"
        >
          <span
            class="c8"
          >
            evening
          </span>
        </div>
      </button>
      <div
        class="c11"
      />
    </div>
  </div>
</div>
`;

exports[`Select renders custom listbox styling 2`] = `
"@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
    margin-right: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-right: 12px;
  }
}"
`;

exports[`Select renders custom up and down icons 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c6::-moz-placeholder {
  color: #AAAAAA;
}

.c6:-ms-input-placeholder {
  color: #AAAAAA;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c5 {
  position: relative;
  width: 100%;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="Select..."
    class="c1 c2"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            inert=""
            placeholder="Select..."
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="FormDown"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m18 9-6 6-6-6"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select renders custom up and down icons 2`] = `
<div
  class="StyledGrommet-sc-19lkkz7-0 kiEDjE"
>
  <button
    aria-expanded="true"
    aria-haspopup="listbox"
    aria-label="Select..."
    class="StyledButton-sc-323bzc-0 jLPXpV StyledSelect__StyledSelectDropButton-sc-znp66n-5 cKuORg"
    type="button"
  >
    <div
      class="StyledBox-sc-13pk1d4-0 edFWqF"
    >
      <div
        class="StyledBox-sc-13pk1d4-0 nwmdD"
      >
        <div
          class="StyledTextInput__StyledTextInputContainer-sc-1x30a0s-1 iogQf"
        >
          <input
            autocomplete="off"
            class="StyledTextInput-sc-1x30a0s-0 lfLLpA StyledSelect__SelectTextInput-sc-znp66n-4 bGoxrS"
            inert=""
            placeholder="Select..."
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="StyledBox-sc-13pk1d4-0 dcgDzS"
        style="min-width: auto;"
      >
        .c0 {
  display: inline-block;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c0 g {
  fill: inherit;
  stroke: inherit;
}

.c0 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c0 *[stroke*='#'],
.c0 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c0 *[fill-rule],
.c0 *[FILL-RULE],
.c0 *[fill*='#'],
.c0 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

<svg
          aria-label="CaretUp"
          class="c0"
          viewBox="0 0 24 24"
        >
          <path
            d="M22 16 12 4 2 16z"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select renders default icon 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="Open Drop"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            inert=""
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select renders empty search with select.emptySearchMessage styling 1`] = `
.c0 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  font-size: 14px;
  line-height: 20px;
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
}

.c0:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus >circle,
.c0:focus >ellipse,
.c0:focus >line,
.c0:focus >path,
.c0:focus >polygon,
.c0:focus >polyline,
.c0:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c0:focus ::-moz-focus-inner {
  border: 0;
}

.c0::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c0::-moz-placeholder {
  color: #AAAAAA;
}

.c0:-ms-input-placeholder {
  color: #AAAAAA;
}

.c0 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c0::-moz-focus-inner {
  border: none;
  outline: none;
}

.c0:-moz-placeholder,
.c0::-moz-placeholder {
  opacity: 1;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

<input
  autocomplete="off"
  class="c0"
  type="search"
  value="o"
/>
`;

exports[`Select renders styled select options backwards compatible with legacy\\n      documentation (select.options.box) 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c6::-moz-placeholder {
  color: #AAAAAA;
}

.c6:-ms-input-placeholder {
  color: #AAAAAA;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c5 {
  position: relative;
  width: 100%;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="Select..."
    class="c1 c2"
    id="test-options-style-id"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            data-testid="test-select-style-options-1"
            id="test-options-style-id__input"
            inert=""
            placeholder="Select..."
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="FormDown"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m18 9-6 6-6-6"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select renders styled select options combining select.options.box &&\\n    select.options.container;\\n    select.options.container prioritized if conflict 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c6::-moz-placeholder {
  color: #AAAAAA;
}

.c6:-ms-input-placeholder {
  color: #AAAAAA;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c5 {
  position: relative;
  width: 100%;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="Select..."
    class="c1 c2"
    id="test-options-style-id"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            data-testid="test-select-style-options-3"
            id="test-options-style-id__input"
            inert=""
            placeholder="Select..."
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="FormDown"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m18 9-6 6-6-6"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select renders styled select options using select.options.container 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #7D4CDB;
  stroke: #7D4CDB;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
}

.c1:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  padding: 11px;
  font-weight: 600;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #AAAAAA;
}

.c6::-moz-placeholder {
  color: #AAAAAA;
}

.c6:-ms-input-placeholder {
  color: #AAAAAA;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c5 {
  position: relative;
  width: 100%;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.33);
  border-radius: 4px;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="Select..."
    class="c1 c2"
    id="test-options-style-id"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            data-testid="test-select-style-options-2"
            id="test-options-style-id__input"
            inert=""
            placeholder="Select..."
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="FormDown"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m18 9-6 6-6-6"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select renders without icon 1`] = `
.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="Open Drop"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            inert=""
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select search 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="test select; Selected: two"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            inert=""
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value="two"
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select search 2`] = `
.c0 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 6px 12px 0px rgba(0, 0, 0, 0.12);
}

.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
  padding: 6px;
}

.c11 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  height: 0px;
  flex: 0 0 auto;
}

.c1 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 6px;
  position: fixed;
  z-index: 110;
  outline: none;
  background-color: #ffffff;
  color: #555555;
  margin-top: 6px;
  opacity: 0;
  transform-origin: top left;
  animation: kPQHBD 0.1s forwards;
  animation-delay: 0.01s;
}

.c1 [class*=MaskedInput__ContainerBox] {
  padding-block: 6px;
  padding-inline: 6px;
  gap: 6px;
  display: flex;
  flex-direction: column;
}

.c8 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: none;
  border-radius: 9999px;
  padding: 5px 12px;
  font-size: 1.125rem;
  line-height: 1.5rem;
  padding: 5px 12px;
  color: #555555;
  border-style: solid;
  border-width: 1px;
  border-color: rgba(0, 0, 0, 0);
  border-radius: 6px;
  font-weight: 500;
  padding: 5px 12px;
  text-align: start;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c8:hover {
  background-color: rgba(0, 0, 0, 0.04);
  color: #555555;
  border-color: rgba(0, 0, 0, 0);
}

.c8:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c8:focus >circle,
.c8:focus >ellipse,
.c8:focus >line,
.c8:focus >path,
.c8:focus >polygon,
.c8:focus >polyline,
.c8:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c8:focus ::-moz-focus-inner {
  border: 0;
}

.c8:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c8:focus:not(:focus-visible) >circle,
.c8:focus:not(:focus-visible) >ellipse,
.c8:focus:not(:focus-visible) >line,
.c8:focus:not(:focus-visible) >path,
.c8:focus:not(:focus-visible) >polygon,
.c8:focus:not(:focus-visible) >polyline,
.c8:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c8:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c10 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: none;
  border-radius: 9999px;
  padding: 5px 12px;
  font-size: 1.125rem;
  line-height: 1.5rem;
  padding: 5px 12px;
  color: #555555;
  border-style: solid;
  border-width: 1px;
  border-color: rgba(0, 0, 0, 0);
  border-radius: 6px;
  font-weight: 500;
  padding: 5px 12px;
  background-color: #d1ffee;
  color: #2e2e2e;
  border-color: rgba(0, 0, 0, 0);
  font-weight: 500;
  position: relative;
  text-align: start;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c10::before {
  display: block;
  position: absolute;
  content: '';
  width: 6px;
  border-top-left-radius: 9999px;
  border-bottom-left-radius: 9999px;
  top: -1px;
  bottom: -1px;
  left: -1px;
  background: #006750;
}

.c10:hover {
  background-color: rgba(0, 0, 0, 0.04);
  color: #555555;
  border-color: rgba(0, 0, 0, 0);
  background: #aafade;
  color: #2e2e2e;
}

.c10:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c10:focus >circle,
.c10:focus >ellipse,
.c10:focus >line,
.c10:focus >path,
.c10:focus >polygon,
.c10:focus >polyline,
.c10:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c10:focus ::-moz-focus-inner {
  border: 0;
}

.c10:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c10:focus:not(:focus-visible) >circle,
.c10:focus:not(:focus-visible) >ellipse,
.c10:focus:not(:focus-visible) >line,
.c10:focus:not(:focus-visible) >path,
.c10:focus:not(:focus-visible) >polygon,
.c10:focus:not(:focus-visible) >polyline,
.c10:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c10:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  font-size: 1rem;
  line-height: 1.25rem;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
}

.c6:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c6:focus >circle,
.c6:focus >ellipse,
.c6:focus >line,
.c6:focus >path,
.c6:focus >polygon,
.c6:focus >polyline,
.c6:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c6:focus ::-moz-focus-inner {
  border: 0;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c3 {
  max-height: inherit;
}

.c3 div:has(input[type="search"]) {
  padding-bottom: 0;
}

.c3 button[aria-label*="Or, press"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c3 button[aria-label*="Or, press"]:focus {
  background: transparent;
}

.c3 button[aria-label*="Or, press"]:focus >div {
  background: rgba(0, 0, 0, 0.04);
}

.c7 {
  position: relative;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
  padding-top: 6px;
  padding-inline: 6px;
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.c7 [role="option"] {
  border-radius: 6px;
}

.c9 {
  display: block;
  width: 100%;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {
  .c4 {
    padding: 3px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: flex;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
    >
      <div
        class="c5"
      >
        <input
          autocomplete="off"
          class="c6"
          type="search"
          value=""
        />
      </div>
    </div>
    <div
      class="c7"
      role="listbox"
      tabindex="-1"
    >
      <button
        aria-posinset="1"
        aria-selected="false"
        aria-setsize="2"
        class="c8 c9"
        role="option"
        tabindex="-1"
        type="button"
      >
        one
      </button>
      <button
        aria-posinset="2"
        aria-selected="true"
        aria-setsize="2"
        class="c10 c9"
        role="option"
        tabindex="0"
        type="button"
      >
        two
      </button>
      <div
        class="c11"
      />
    </div>
  </div>
</div>
`;

exports[`Select search 3`] = `
"@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
    margin-right: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-right: 12px;
  }
}"
`;

exports[`Select search 4`] = `
<input
  autocomplete="off"
  class="StyledTextInput-sc-1x30a0s-0 dPCHOa"
  type="search"
  value=""
/>
`;

exports[`Select search 5`] = `
<input
  autocomplete="off"
  class="StyledTextInput-sc-1x30a0s-0 dPCHOa"
  type="search"
  value="o"
/>
`;

exports[`Select search and select 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="test select"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            inert=""
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select search and select 2`] = `
.c0 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 6px 12px 0px rgba(0, 0, 0, 0.12);
}

.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
  padding: 6px;
}

.c10 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  height: 0px;
  flex: 0 0 auto;
}

.c1 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 6px;
  position: fixed;
  z-index: 110;
  outline: none;
  background-color: #ffffff;
  color: #555555;
  margin-top: 6px;
  opacity: 0;
  transform-origin: top left;
  animation: kPQHBD 0.1s forwards;
  animation-delay: 0.01s;
}

.c1 [class*=MaskedInput__ContainerBox] {
  padding-block: 6px;
  padding-inline: 6px;
  gap: 6px;
  display: flex;
  flex-direction: column;
}

.c8 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: none;
  border-radius: 9999px;
  padding: 5px 12px;
  font-size: 1.125rem;
  line-height: 1.5rem;
  padding: 5px 12px;
  color: #555555;
  border-style: solid;
  border-width: 1px;
  border-color: rgba(0, 0, 0, 0);
  border-radius: 6px;
  font-weight: 500;
  padding: 5px 12px;
  text-align: start;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c8:hover {
  background-color: rgba(0, 0, 0, 0.04);
  color: #555555;
  border-color: rgba(0, 0, 0, 0);
}

.c8:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c8:focus >circle,
.c8:focus >ellipse,
.c8:focus >line,
.c8:focus >path,
.c8:focus >polygon,
.c8:focus >polyline,
.c8:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c8:focus ::-moz-focus-inner {
  border: 0;
}

.c8:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c8:focus:not(:focus-visible) >circle,
.c8:focus:not(:focus-visible) >ellipse,
.c8:focus:not(:focus-visible) >line,
.c8:focus:not(:focus-visible) >path,
.c8:focus:not(:focus-visible) >polygon,
.c8:focus:not(:focus-visible) >polyline,
.c8:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c8:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  font-size: 1rem;
  line-height: 1.25rem;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
}

.c6:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c6:focus >circle,
.c6:focus >ellipse,
.c6:focus >line,
.c6:focus >path,
.c6:focus >polygon,
.c6:focus >polyline,
.c6:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c6:focus ::-moz-focus-inner {
  border: 0;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c3 {
  max-height: inherit;
}

.c3 div:has(input[type="search"]) {
  padding-bottom: 0;
}

.c3 button[aria-label*="Or, press"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c3 button[aria-label*="Or, press"]:focus {
  background: transparent;
}

.c3 button[aria-label*="Or, press"]:focus >div {
  background: rgba(0, 0, 0, 0.04);
}

.c7 {
  position: relative;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
  padding-top: 6px;
  padding-inline: 6px;
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.c7 [role="option"] {
  border-radius: 6px;
}

.c9 {
  display: block;
  width: 100%;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {
  .c4 {
    padding: 3px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: flex;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
    >
      <div
        class="c5"
      >
        <input
          autocomplete="off"
          class="c6"
          type="search"
          value=""
        />
      </div>
    </div>
    <div
      class="c7"
      role="listbox"
      tabindex="-1"
    >
      <button
        aria-posinset="1"
        aria-selected="false"
        aria-setsize="2"
        class="c8 c9"
        role="option"
        tabindex="0"
        type="button"
      >
        one
      </button>
      <button
        aria-posinset="2"
        aria-selected="false"
        aria-setsize="2"
        class="c8 c9"
        role="option"
        tabindex="-1"
        type="button"
      >
        two
      </button>
      <div
        class="c10"
      />
    </div>
  </div>
</div>
`;

exports[`Select search and select 3`] = `
"@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
    margin-right: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-left: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .peYnb {
    margin-right: 12px;
  }
}"
`;

exports[`Select search and select 4`] = `
<input
  autocomplete="off"
  class="StyledTextInput-sc-1x30a0s-0 dPCHOa"
  type="search"
  value=""
/>
`;

exports[`Select search and select 5`] = `
<input
  autocomplete="off"
  class="StyledTextInput-sc-1x30a0s-0 dPCHOa"
  type="search"
  value="t"
/>
`;

exports[`Select select an object with label key specific with keypress 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="test select"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            inert=""
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select select an option 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="test select"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            inert=""
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select select an option with complex options 1`] = `
.c7 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c7 g {
  fill: inherit;
  stroke: inherit;
}

.c7 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c7 *[stroke*='#'],
.c7 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c7 *[fill-rule],
.c7 *[FILL-RULE],
.c7 *[fill*='#'],
.c7 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c6 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c5 {
  display: none;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c6 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c6 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c6 {
    margin-right: 12px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="Open Drop; Selected: [object Object]"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <span>
          one
        </span>
        <input
          class="c5"
          id="test-select__input"
          inert=""
          readonly=""
          type="text"
        />
      </div>
      <div
        class="c6"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="c7"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select select an option with enter 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="test select"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            inert=""
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select select an option with keypress 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="test select"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            inert=""
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select select on multiple keydown always picks first enabled option 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="test select"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            inert=""
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select select option by typing should not break if caller passes JSX 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="test select"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            inert=""
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select select option by typing should not break if caller passes JSX 2`] = `
<div
  class="StyledGrommet-sc-19lkkz7-0 iRGypN"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="test select; Selected: two"
    class="StyledButtonKind-sc-1vhfpnt-0 fvxTu StyledSelect__StyledSelectDropButton-sc-znp66n-5 eOYqUg"
    id="test-select"
    type="button"
  >
    <div
      class="StyledBox-sc-13pk1d4-0 edFWqF"
    >
      <div
        class="StyledBox-sc-13pk1d4-0 nwmdD"
      >
        <div
          class="StyledTextInput__StyledTextInputContainer-sc-1x30a0s-1 bSfyXe"
        >
          <input
            autocomplete="off"
            class="StyledTextInput-sc-1x30a0s-0 hXkQju StyledSelect__SelectTextInput-sc-znp66n-4 bGoxrS"
            id="test-select__input"
            inert=""
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value="two"
          />
        </div>
      </div>
      <div
        class="StyledBox-sc-13pk1d4-0 peYnb"
        style="min-width: auto;"
      >
        .c0 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c0 g {
  fill: inherit;
  stroke: inherit;
}

.c0 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c0 *[stroke*='#'],
.c0 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c0 *[fill-rule],
.c0 *[FILL-RULE],
.c0 *[fill*='#'],
.c0 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

<svg
          aria-label="Down"
          class="c0"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select selected 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="test select"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            inert=""
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value="one"
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select should apply a11yTitle or aria-label 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="test"
    class="c1 c2"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            aria-label="test"
            autocomplete="off"
            class="c6 c7"
            inert=""
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="test-select"
    class="c1 c2"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            aria-label="test-select"
            autocomplete="off"
            class="c6 c7"
            inert=""
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select should not have accessibility violations 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="test"
    class="c1 c2"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            aria-label="test"
            autocomplete="off"
            class="c6 c7"
            inert=""
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select size 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 22px;
  height: 22px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  font-size: 1.375rem;
  line-height: 1.75rem;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="Open Drop; Selected: "
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            inert=""
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
            vector-effect="non-scaling-stroke"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select small drop container height 1`] = `
.c0 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 6px 12px 0px rgba(0, 0, 0, 0.12);
}

.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c7 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  height: 0px;
  flex: 0 0 auto;
}

.c1 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 6px;
  position: fixed;
  z-index: 110;
  outline: none;
  background-color: #ffffff;
  color: #555555;
  margin-top: 6px;
  opacity: 0;
  transform-origin: top left;
  animation: kPQHBD 0.1s forwards;
  animation-delay: 0.01s;
}

.c1 [class*=MaskedInput__ContainerBox] {
  padding-block: 6px;
  padding-inline: 6px;
  gap: 6px;
  display: flex;
  flex-direction: column;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: none;
  border-radius: 9999px;
  padding: 5px 12px;
  font-size: 1.125rem;
  line-height: 1.5rem;
  padding: 5px 12px;
  color: #555555;
  border-style: solid;
  border-width: 1px;
  border-color: rgba(0, 0, 0, 0);
  border-radius: 6px;
  font-weight: 500;
  padding: 5px 12px;
  text-align: start;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c5:hover {
  background-color: rgba(0, 0, 0, 0.04);
  color: #555555;
  border-color: rgba(0, 0, 0, 0);
}

.c5:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c5:focus >circle,
.c5:focus >ellipse,
.c5:focus >line,
.c5:focus >path,
.c5:focus >polygon,
.c5:focus >polyline,
.c5:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c5:focus ::-moz-focus-inner {
  border: 0;
}

.c5:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) >circle,
.c5:focus:not(:focus-visible) >ellipse,
.c5:focus:not(:focus-visible) >line,
.c5:focus:not(:focus-visible) >path,
.c5:focus:not(:focus-visible) >polygon,
.c5:focus:not(:focus-visible) >polyline,
.c5:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: 192px;
}

.c3 div:has(input[type="search"]) {
  padding-bottom: 0;
}

.c3 button[aria-label*="Or, press"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c3 button[aria-label*="Or, press"]:focus {
  background: transparent;
}

.c3 button[aria-label*="Or, press"]:focus >div {
  background: rgba(0, 0, 0, 0.04);
}

.c4 {
  position: relative;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
  padding-top: 6px;
  padding-inline: 6px;
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.c4 [role="option"] {
  border-radius: 6px;
}

.c6 {
  display: block;
  width: 100%;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: flex;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      class="c4"
      role="listbox"
      tabindex="-1"
    >
      <button
        aria-posinset="1"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="0"
        type="button"
      >
        one
      </button>
      <button
        aria-posinset="2"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="-1"
        type="button"
      >
        two
      </button>
      <div
        class="c7"
      />
    </div>
  </div>
</div>
`;

exports[`Select valueLabel 1`] = `undefined`;

exports[`Select valueLabel with value=0 1`] = `
<DocumentFragment>
  .c7 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c7 g {
  fill: inherit;
  stroke: inherit;
}

.c7 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c7 *[stroke*='#'],
.c7 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c7 *[fill-rule],
.c7 *[FILL-RULE],
.c7 *[fill*='#'],
.c7 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c6 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 12px;
  margin-right: 12px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 2px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c5 {
  display: none;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c6 {
    margin-left: 6px;
    margin-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c6 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c6 {
    margin-right: 12px;
  }
}

<div
    class="c0"
  >
    <button
      aria-expanded="false"
      aria-haspopup="listbox"
      aria-label="Open Drop"
      class="c1 c2"
      type="button"
    >
      <div
        class="c3"
      >
        <div
          class="c4"
        >
          Value: 0
          <input
            class="c5"
            inert=""
            readonly=""
            type="text"
          />
        </div>
        <div
          class="c6"
          style="min-width: auto;"
        >
          <svg
            aria-label="Down"
            class="c7"
            viewBox="0 0 24 24"
          >
            <path
              d="m2 8.35 10.173 9.823L21.997 8"
              fill="none"
              stroke="#000"
              stroke-width="2"
            />
          </svg>
        </div>
      </div>
    </button>
  </div>
</DocumentFragment>
`;
