// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`Select Controlled deselect an option 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 16px;
  margin-right: 16px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 8px;
    margin-right: 8px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="test select; Selected: one"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            inert=""
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value="one"
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select Controlled multiple 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 16px;
  margin-right: 16px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 8px;
    margin-right: 8px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="Open Drop; Selected: "
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            inert=""
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select Controlled multiple onChange toggle with valueKey reduce 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 16px;
  margin-right: 16px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 8px;
    margin-right: 8px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="test select; Selected: 1"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            inert=""
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value="Value1"
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select Controlled multiple onChange toggle with valueKey reduce 2`] = `
.c0 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 6px 12px 0px rgba(0, 0, 0, 0.12);
}

.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  height: 0px;
  flex: 0 0 auto;
}

.c1 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 6px;
  position: fixed;
  z-index: 110;
  outline: none;
  background-color: #ffffff;
  color: #555555;
  margin-top: 6px;
  opacity: 0;
  transform-origin: top left;
  animation: kPQHBD 0.1s forwards;
  animation-delay: 0.01s;
}

.c1 [class*=MaskedInput__ContainerBox] {
  padding-block: 6px;
  padding-inline: 6px;
  gap: 6px;
  display: flex;
  flex-direction: column;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: none;
  border-radius: 9999px;
  padding: 5px 12px;
  font-size: 1.125rem;
  line-height: 1.5rem;
  padding: 5px 12px;
  color: #555555;
  border-style: solid;
  border-width: 1px;
  border-color: rgba(0, 0, 0, 0);
  border-radius: 6px;
  font-weight: 500;
  padding: 5px 12px;
  background-color: #d1ffee;
  color: #2e2e2e;
  border-color: rgba(0, 0, 0, 0);
  font-weight: 500;
  position: relative;
  text-align: start;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c5::before {
  display: block;
  position: absolute;
  content: '';
  width: 6px;
  border-top-left-radius: 9999px;
  border-bottom-left-radius: 9999px;
  top: -1px;
  bottom: -1px;
  left: -1px;
  background: #006750;
}

.c5:hover {
  background-color: rgba(0, 0, 0, 0.04);
  color: #555555;
  border-color: rgba(0, 0, 0, 0);
  background: #aafade;
  color: #2e2e2e;
}

.c5:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c5:focus >circle,
.c5:focus >ellipse,
.c5:focus >line,
.c5:focus >path,
.c5:focus >polygon,
.c5:focus >polyline,
.c5:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c5:focus ::-moz-focus-inner {
  border: 0;
}

.c5:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) >circle,
.c5:focus:not(:focus-visible) >ellipse,
.c5:focus:not(:focus-visible) >line,
.c5:focus:not(:focus-visible) >path,
.c5:focus:not(:focus-visible) >polygon,
.c5:focus:not(:focus-visible) >polyline,
.c5:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c7 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: none;
  border-radius: 9999px;
  padding: 5px 12px;
  font-size: 1.125rem;
  line-height: 1.5rem;
  padding: 5px 12px;
  color: #555555;
  border-style: solid;
  border-width: 1px;
  border-color: rgba(0, 0, 0, 0);
  border-radius: 6px;
  font-weight: 500;
  padding: 5px 12px;
  text-align: start;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c7:hover {
  background-color: rgba(0, 0, 0, 0.04);
  color: #555555;
  border-color: rgba(0, 0, 0, 0);
}

.c7:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c7:focus >circle,
.c7:focus >ellipse,
.c7:focus >line,
.c7:focus >path,
.c7:focus >polygon,
.c7:focus >polyline,
.c7:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c7:focus ::-moz-focus-inner {
  border: 0;
}

.c7:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c7:focus:not(:focus-visible) >circle,
.c7:focus:not(:focus-visible) >ellipse,
.c7:focus:not(:focus-visible) >line,
.c7:focus:not(:focus-visible) >path,
.c7:focus:not(:focus-visible) >polygon,
.c7:focus:not(:focus-visible) >polyline,
.c7:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c7:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: inherit;
}

.c3 div:has(input[type="search"]) {
  padding-bottom: 0;
}

.c4 {
  position: relative;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
  padding-top: 6px;
  padding-inline: 6px;
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.c4 [role="option"] {
  border-radius: 6px;
}

.c6 {
  display: block;
  width: 100%;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: flex;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      aria-multiselectable="true"
      class="c4"
      role="listbox"
      tabindex="-1"
    >
      <button
        aria-posinset="1"
        aria-selected="true"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="0"
        type="button"
      >
        Value1
      </button>
      <button
        aria-posinset="2"
        aria-selected="false"
        aria-setsize="2"
        class="c7 c6"
        role="option"
        tabindex="-1"
        type="button"
      >
        Value2
      </button>
      <div
        class="c8"
      />
    </div>
  </div>
</div>
`;

exports[`Select Controlled multiple onChange toggle with valueKey reduce 3`] = `
"@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-left: 8px;
    margin-right: 8px;
  }
}
@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-left: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-right: 12px;
  }
}"
`;

exports[`Select Controlled multiple onChange with valueKey reduce 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 16px;
  margin-right: 16px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 8px;
    margin-right: 8px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="test select"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            inert=""
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select Controlled multiple onChange with valueKey reduce 2`] = `
.c0 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 6px 12px 0px rgba(0, 0, 0, 0.12);
}

.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c7 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  height: 0px;
  flex: 0 0 auto;
}

.c1 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 6px;
  position: fixed;
  z-index: 110;
  outline: none;
  background-color: #ffffff;
  color: #555555;
  margin-top: 6px;
  opacity: 0;
  transform-origin: top left;
  animation: kPQHBD 0.1s forwards;
  animation-delay: 0.01s;
}

.c1 [class*=MaskedInput__ContainerBox] {
  padding-block: 6px;
  padding-inline: 6px;
  gap: 6px;
  display: flex;
  flex-direction: column;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: none;
  border-radius: 9999px;
  padding: 5px 12px;
  font-size: 1.125rem;
  line-height: 1.5rem;
  padding: 5px 12px;
  color: #555555;
  border-style: solid;
  border-width: 1px;
  border-color: rgba(0, 0, 0, 0);
  border-radius: 6px;
  font-weight: 500;
  padding: 5px 12px;
  text-align: start;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c5:hover {
  background-color: rgba(0, 0, 0, 0.04);
  color: #555555;
  border-color: rgba(0, 0, 0, 0);
}

.c5:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c5:focus >circle,
.c5:focus >ellipse,
.c5:focus >line,
.c5:focus >path,
.c5:focus >polygon,
.c5:focus >polyline,
.c5:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c5:focus ::-moz-focus-inner {
  border: 0;
}

.c5:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) >circle,
.c5:focus:not(:focus-visible) >ellipse,
.c5:focus:not(:focus-visible) >line,
.c5:focus:not(:focus-visible) >path,
.c5:focus:not(:focus-visible) >polygon,
.c5:focus:not(:focus-visible) >polyline,
.c5:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: inherit;
}

.c3 div:has(input[type="search"]) {
  padding-bottom: 0;
}

.c4 {
  position: relative;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
  padding-top: 6px;
  padding-inline: 6px;
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.c4 [role="option"] {
  border-radius: 6px;
}

.c6 {
  display: block;
  width: 100%;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: flex;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      aria-multiselectable="true"
      class="c4"
      role="listbox"
      tabindex="-1"
    >
      <button
        aria-posinset="1"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="0"
        type="button"
      >
        Value1
      </button>
      <button
        aria-posinset="2"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="-1"
        type="button"
      >
        Value2
      </button>
      <div
        class="c7"
      />
    </div>
  </div>
</div>
`;

exports[`Select Controlled multiple onChange with valueKey reduce 3`] = `
"@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-left: 8px;
    margin-right: 8px;
  }
}
@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-left: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-right: 12px;
  }
}"
`;

exports[`Select Controlled multiple onChange with valueKey string 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 16px;
  margin-right: 16px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 8px;
    margin-right: 8px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="test select"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            inert=""
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select Controlled multiple onChange with valueKey string 2`] = `
.c0 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 6px 12px 0px rgba(0, 0, 0, 0.12);
}

.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c7 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  height: 0px;
  flex: 0 0 auto;
}

.c1 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 6px;
  position: fixed;
  z-index: 110;
  outline: none;
  background-color: #ffffff;
  color: #555555;
  margin-top: 6px;
  opacity: 0;
  transform-origin: top left;
  animation: kPQHBD 0.1s forwards;
  animation-delay: 0.01s;
}

.c1 [class*=MaskedInput__ContainerBox] {
  padding-block: 6px;
  padding-inline: 6px;
  gap: 6px;
  display: flex;
  flex-direction: column;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: none;
  border-radius: 9999px;
  padding: 5px 12px;
  font-size: 1.125rem;
  line-height: 1.5rem;
  padding: 5px 12px;
  color: #555555;
  border-style: solid;
  border-width: 1px;
  border-color: rgba(0, 0, 0, 0);
  border-radius: 6px;
  font-weight: 500;
  padding: 5px 12px;
  text-align: start;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c5:hover {
  background-color: rgba(0, 0, 0, 0.04);
  color: #555555;
  border-color: rgba(0, 0, 0, 0);
}

.c5:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c5:focus >circle,
.c5:focus >ellipse,
.c5:focus >line,
.c5:focus >path,
.c5:focus >polygon,
.c5:focus >polyline,
.c5:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c5:focus ::-moz-focus-inner {
  border: 0;
}

.c5:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) >circle,
.c5:focus:not(:focus-visible) >ellipse,
.c5:focus:not(:focus-visible) >line,
.c5:focus:not(:focus-visible) >path,
.c5:focus:not(:focus-visible) >polygon,
.c5:focus:not(:focus-visible) >polyline,
.c5:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: inherit;
}

.c3 div:has(input[type="search"]) {
  padding-bottom: 0;
}

.c4 {
  position: relative;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
  padding-top: 6px;
  padding-inline: 6px;
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.c4 [role="option"] {
  border-radius: 6px;
}

.c6 {
  display: block;
  width: 100%;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: flex;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      aria-multiselectable="true"
      class="c4"
      role="listbox"
      tabindex="-1"
    >
      <button
        aria-posinset="1"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="0"
        type="button"
      >
        Value1
      </button>
      <button
        aria-posinset="2"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="-1"
        type="button"
      >
        Value2
      </button>
      <div
        class="c7"
      />
    </div>
  </div>
</div>
`;

exports[`Select Controlled multiple onChange with valueKey string 3`] = `
"@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-left: 8px;
    margin-right: 8px;
  }
}
@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-left: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-right: 12px;
  }
}"
`;

exports[`Select Controlled multiple onChange without labelKey 1`] = `
<DocumentFragment>
  .c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 16px;
  margin-right: 16px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 8px;
    margin-right: 8px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
    class="c0"
  >
    <button
      aria-expanded="false"
      aria-haspopup="listbox"
      aria-label="test select"
      class="c1 c2"
      id="test-select"
      type="button"
    >
      <div
        class="c3"
      >
        <div
          class="c4"
        >
          <div
            class="c5"
          >
            <input
              autocomplete="off"
              class="c6 c7"
              id="test-select__input"
              inert=""
              placeholder="test select"
              readonly=""
              tabindex="-1"
              type="text"
              value=""
            />
          </div>
        </div>
        <div
          class="c8"
          style="min-width: auto;"
        >
          <svg
            aria-label="Down"
            class="c9"
            viewBox="0 0 24 24"
          >
            <path
              d="m2 8.35 10.173 9.823L21.997 8"
              fill="none"
              stroke="#000"
              stroke-width="2"
            />
          </svg>
        </div>
      </div>
    </button>
  </div>
</DocumentFragment>
`;

exports[`Select Controlled multiple onChange without labelKey 2`] = `
.c0 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 6px 12px 0px rgba(0, 0, 0, 0.12);
}

.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c7 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  height: 0px;
  flex: 0 0 auto;
}

.c1 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 6px;
  position: fixed;
  z-index: 110;
  outline: none;
  background-color: #ffffff;
  color: #555555;
  margin-top: 6px;
  opacity: 0;
  transform-origin: top left;
  animation: kPQHBD 0.1s forwards;
  animation-delay: 0.01s;
}

.c1 [class*=MaskedInput__ContainerBox] {
  padding-block: 6px;
  padding-inline: 6px;
  gap: 6px;
  display: flex;
  flex-direction: column;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: none;
  border-radius: 9999px;
  padding: 5px 12px;
  font-size: 1.125rem;
  line-height: 1.5rem;
  padding: 5px 12px;
  color: #555555;
  border-style: solid;
  border-width: 1px;
  border-color: rgba(0, 0, 0, 0);
  border-radius: 6px;
  font-weight: 500;
  padding: 5px 12px;
  text-align: start;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c5:hover {
  background-color: rgba(0, 0, 0, 0.04);
  color: #555555;
  border-color: rgba(0, 0, 0, 0);
}

.c5:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c5:focus >circle,
.c5:focus >ellipse,
.c5:focus >line,
.c5:focus >path,
.c5:focus >polygon,
.c5:focus >polyline,
.c5:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c5:focus ::-moz-focus-inner {
  border: 0;
}

.c5:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) >circle,
.c5:focus:not(:focus-visible) >ellipse,
.c5:focus:not(:focus-visible) >line,
.c5:focus:not(:focus-visible) >path,
.c5:focus:not(:focus-visible) >polygon,
.c5:focus:not(:focus-visible) >polyline,
.c5:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: inherit;
}

.c3 div:has(input[type="search"]) {
  padding-bottom: 0;
}

.c4 {
  position: relative;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
  padding-top: 6px;
  padding-inline: 6px;
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.c4 [role="option"] {
  border-radius: 6px;
}

.c6 {
  display: block;
  width: 100%;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: flex;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      aria-multiselectable="true"
      class="c4"
      role="listbox"
      tabindex="-1"
    >
      <button
        aria-posinset="1"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="0"
        type="button"
      >
        1
      </button>
      <button
        aria-posinset="2"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="-1"
        type="button"
      >
        2
      </button>
      <div
        class="c7"
      />
    </div>
  </div>
</div>
`;

exports[`Select Controlled multiple onChange without labelKey 3`] = `
"@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-left: 8px;
    margin-right: 8px;
  }
}
@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-left: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-right: 12px;
  }
}"
`;

exports[`Select Controlled multiple onChange without labelKey 4`] = `
<div
  class="StyledBox-sc-13pk1d4-0 iPenqz StyledDrop-sc-16s5rx8-0 bdKJMF"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="StyledBox-sc-13pk1d4-0 fDLUqh StyledSelect__StyledContainer-sc-znp66n-0 gDZSzh"
    id="test-select__select-drop"
  >
    <div
      aria-multiselectable="true"
      class="StyledSelect__OptionsContainer-sc-znp66n-1 eUCEJD"
      role="listbox"
      tabindex="-1"
    >
      <button
        aria-posinset="1"
        aria-selected="true"
        aria-setsize="2"
        class="StyledButtonKind-sc-1vhfpnt-0 YpAWt StyledSelect__SelectOption-sc-znp66n-3 lkKTUk"
        role="option"
        tabindex="0"
        type="button"
      >
        1
      </button>
      <button
        aria-posinset="2"
        aria-selected="false"
        aria-setsize="2"
        class="StyledButtonKind-sc-1vhfpnt-0 fUARKY StyledSelect__SelectOption-sc-znp66n-3 lkKTUk"
        role="option"
        tabindex="-1"
        type="button"
      >
        2
      </button>
      <div
        class="StyledBox-sc-13pk1d4-0 hylnGi"
      />
    </div>
  </div>
</div>
`;

exports[`Select Controlled multiple onChange without labelKey 5`] = `
"@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-left: 8px;
    margin-right: 8px;
  }
}
@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-left: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-right: 12px;
  }
}"
`;

exports[`Select Controlled multiple onChange without labelKey 6`] = `
<div
  class="StyledBox-sc-13pk1d4-0 iPenqz StyledDrop-sc-16s5rx8-0 bdKJMF"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="StyledBox-sc-13pk1d4-0 fDLUqh StyledSelect__StyledContainer-sc-znp66n-0 gDZSzh"
    id="test-select__select-drop"
  >
    <div
      aria-multiselectable="true"
      class="StyledSelect__OptionsContainer-sc-znp66n-1 eUCEJD"
      role="listbox"
      tabindex="-1"
    >
      <button
        aria-posinset="1"
        aria-selected="true"
        aria-setsize="2"
        class="StyledButtonKind-sc-1vhfpnt-0 YpAWt StyledSelect__SelectOption-sc-znp66n-3 lkKTUk"
        role="option"
        tabindex="0"
        type="button"
      >
        1
      </button>
      <button
        aria-posinset="2"
        aria-selected="true"
        aria-setsize="2"
        class="StyledButtonKind-sc-1vhfpnt-0 YpAWt StyledSelect__SelectOption-sc-znp66n-3 lkKTUk"
        role="option"
        tabindex="0"
        type="button"
      >
        2
      </button>
      <div
        class="StyledBox-sc-13pk1d4-0 hylnGi"
      />
    </div>
  </div>
</div>
`;

exports[`Select Controlled multiple onChange without labelKey 7`] = `
"@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-left: 8px;
    margin-right: 8px;
  }
}
@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-left: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-right: 12px;
  }
}"
`;

exports[`Select Controlled multiple onChange without labelKey 8`] = `
<DocumentFragment>
  .c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 16px;
  margin-right: 16px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 8px;
    margin-right: 8px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

<div
    class="c0"
  >
    <button
      aria-expanded="true"
      aria-haspopup="listbox"
      aria-label="test select; Selected: 1, 2"
      class="c1 c2"
      id="test-select"
      type="button"
    >
      <div
        class="c3"
      >
        <div
          class="c4"
        >
          <div
            class="c5"
          >
            <input
              autocomplete="off"
              class="c6 c7"
              id="test-select__input"
              inert=""
              placeholder="test select"
              readonly=""
              tabindex="-1"
              type="text"
              value="multiple"
            />
          </div>
        </div>
        <div
          class="c8"
          style="min-width: auto;"
        >
          <svg
            aria-label="Up"
            class="c9"
            viewBox="0 0 24 24"
          >
            <path
              d="m2 15.999 10.173-9.824 9.824 10.173"
              fill="none"
              stroke="#000"
              stroke-width="2"
            />
          </svg>
        </div>
      </div>
    </button>
  </div>
</DocumentFragment>
`;

exports[`Select Controlled multiple onChange without valueKey 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 16px;
  margin-right: 16px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 8px;
    margin-right: 8px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="test select"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            inert=""
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select Controlled multiple onChange without valueKey 2`] = `
.c0 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 6px 12px 0px rgba(0, 0, 0, 0.12);
}

.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c7 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  height: 0px;
  flex: 0 0 auto;
}

.c1 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 6px;
  position: fixed;
  z-index: 110;
  outline: none;
  background-color: #ffffff;
  color: #555555;
  margin-top: 6px;
  opacity: 0;
  transform-origin: top left;
  animation: kPQHBD 0.1s forwards;
  animation-delay: 0.01s;
}

.c1 [class*=MaskedInput__ContainerBox] {
  padding-block: 6px;
  padding-inline: 6px;
  gap: 6px;
  display: flex;
  flex-direction: column;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: none;
  border-radius: 9999px;
  padding: 5px 12px;
  font-size: 1.125rem;
  line-height: 1.5rem;
  padding: 5px 12px;
  color: #555555;
  border-style: solid;
  border-width: 1px;
  border-color: rgba(0, 0, 0, 0);
  border-radius: 6px;
  font-weight: 500;
  padding: 5px 12px;
  text-align: start;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c5:hover {
  background-color: rgba(0, 0, 0, 0.04);
  color: #555555;
  border-color: rgba(0, 0, 0, 0);
}

.c5:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c5:focus >circle,
.c5:focus >ellipse,
.c5:focus >line,
.c5:focus >path,
.c5:focus >polygon,
.c5:focus >polyline,
.c5:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c5:focus ::-moz-focus-inner {
  border: 0;
}

.c5:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) >circle,
.c5:focus:not(:focus-visible) >ellipse,
.c5:focus:not(:focus-visible) >line,
.c5:focus:not(:focus-visible) >path,
.c5:focus:not(:focus-visible) >polygon,
.c5:focus:not(:focus-visible) >polyline,
.c5:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: inherit;
}

.c3 div:has(input[type="search"]) {
  padding-bottom: 0;
}

.c4 {
  position: relative;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
  padding-top: 6px;
  padding-inline: 6px;
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.c4 [role="option"] {
  border-radius: 6px;
}

.c6 {
  display: block;
  width: 100%;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: flex;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      aria-multiselectable="true"
      class="c4"
      role="listbox"
      tabindex="-1"
    >
      <button
        aria-posinset="1"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="0"
        type="button"
      >
        Value1
      </button>
      <button
        aria-posinset="2"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="-1"
        type="button"
      >
        Value2
      </button>
      <div
        class="c7"
      />
    </div>
  </div>
</div>
`;

exports[`Select Controlled multiple onChange without valueKey 3`] = `
"@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-left: 8px;
    margin-right: 8px;
  }
}
@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-left: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-right: 12px;
  }
}"
`;

exports[`Select Controlled multiple onChange without valueKey 4`] = `
<div
  class="StyledBox-sc-13pk1d4-0 iPenqz StyledDrop-sc-16s5rx8-0 bdKJMF"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="StyledBox-sc-13pk1d4-0 fDLUqh StyledSelect__StyledContainer-sc-znp66n-0 gDZSzh"
    id="test-select__select-drop"
  >
    <div
      aria-multiselectable="true"
      class="StyledSelect__OptionsContainer-sc-znp66n-1 eUCEJD"
      role="listbox"
      tabindex="-1"
    >
      <button
        aria-posinset="1"
        aria-selected="true"
        aria-setsize="2"
        class="StyledButtonKind-sc-1vhfpnt-0 YpAWt StyledSelect__SelectOption-sc-znp66n-3 lkKTUk"
        role="option"
        tabindex="0"
        type="button"
      >
        Value1
      </button>
      <button
        aria-posinset="2"
        aria-selected="false"
        aria-setsize="2"
        class="StyledButtonKind-sc-1vhfpnt-0 fUARKY StyledSelect__SelectOption-sc-znp66n-3 lkKTUk"
        role="option"
        tabindex="-1"
        type="button"
      >
        Value2
      </button>
      <div
        class="StyledBox-sc-13pk1d4-0 hylnGi"
      />
    </div>
  </div>
</div>
`;

exports[`Select Controlled multiple onChange without valueKey 5`] = `
"@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-left: 8px;
    margin-right: 8px;
  }
}
@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-left: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-right: 12px;
  }
}"
`;

exports[`Select Controlled multiple onChange without valueKey 6`] = `
<div
  class="StyledBox-sc-13pk1d4-0 iPenqz StyledDrop-sc-16s5rx8-0 bdKJMF"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="StyledBox-sc-13pk1d4-0 fDLUqh StyledSelect__StyledContainer-sc-znp66n-0 gDZSzh"
    id="test-select__select-drop"
  >
    <div
      aria-multiselectable="true"
      class="StyledSelect__OptionsContainer-sc-znp66n-1 eUCEJD"
      role="listbox"
      tabindex="-1"
    >
      <button
        aria-posinset="1"
        aria-selected="true"
        aria-setsize="2"
        class="StyledButtonKind-sc-1vhfpnt-0 YpAWt StyledSelect__SelectOption-sc-znp66n-3 lkKTUk"
        role="option"
        tabindex="0"
        type="button"
      >
        Value1
      </button>
      <button
        aria-posinset="2"
        aria-selected="true"
        aria-setsize="2"
        class="StyledButtonKind-sc-1vhfpnt-0 YpAWt StyledSelect__SelectOption-sc-znp66n-3 lkKTUk"
        role="option"
        tabindex="0"
        type="button"
      >
        Value2
      </button>
      <div
        class="StyledBox-sc-13pk1d4-0 hylnGi"
      />
    </div>
  </div>
</div>
`;

exports[`Select Controlled multiple onChange without valueKey 7`] = `
"@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-left: 8px;
    margin-right: 8px;
  }
}
@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-left: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-right: 12px;
  }
}"
`;

exports[`Select Controlled multiple onChange without valueKey 8`] = `
<DocumentFragment>
  .c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 16px;
  margin-right: 16px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 8px;
    margin-right: 8px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

<div
    class="c0"
  >
    <button
      aria-expanded="true"
      aria-haspopup="listbox"
      aria-label="test select; Selected: Value1, Value2"
      class="c1 c2"
      id="test-select"
      type="button"
    >
      <div
        class="c3"
      >
        <div
          class="c4"
        >
          <div
            class="c5"
          >
            <input
              autocomplete="off"
              class="c6 c7"
              id="test-select__input"
              inert=""
              placeholder="test select"
              readonly=""
              tabindex="-1"
              type="text"
              value="multiple"
            />
          </div>
        </div>
        <div
          class="c8"
          style="min-width: auto;"
        >
          <svg
            aria-label="Up"
            class="c9"
            viewBox="0 0 24 24"
          >
            <path
              d="m2 15.999 10.173-9.824 9.824 10.173"
              fill="none"
              stroke="#000"
              stroke-width="2"
            />
          </svg>
        </div>
      </div>
    </button>
  </div>
</DocumentFragment>
`;

exports[`Select Controlled multiple onChange without valueKey or labelKey 1`] = `
<DocumentFragment>
  .c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 16px;
  margin-right: 16px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 8px;
    margin-right: 8px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
    class="c0"
  >
    <button
      aria-expanded="false"
      aria-haspopup="listbox"
      aria-label="test select"
      class="c1 c2"
      id="test-select"
      type="button"
    >
      <div
        class="c3"
      >
        <div
          class="c4"
        >
          <div
            class="c5"
          >
            <input
              autocomplete="off"
              class="c6 c7"
              id="test-select__input"
              inert=""
              placeholder="test select"
              readonly=""
              tabindex="-1"
              type="text"
              value=""
            />
          </div>
        </div>
        <div
          class="c8"
          style="min-width: auto;"
        >
          <svg
            aria-label="Down"
            class="c9"
            viewBox="0 0 24 24"
          >
            <path
              d="m2 8.35 10.173 9.823L21.997 8"
              fill="none"
              stroke="#000"
              stroke-width="2"
            />
          </svg>
        </div>
      </div>
    </button>
  </div>
</DocumentFragment>
`;

exports[`Select Controlled multiple onChange without valueKey or labelKey 2`] = `
.c0 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 6px 12px 0px rgba(0, 0, 0, 0.12);
}

.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c7 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  height: 0px;
  flex: 0 0 auto;
}

.c1 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 6px;
  position: fixed;
  z-index: 110;
  outline: none;
  background-color: #ffffff;
  color: #555555;
  margin-top: 6px;
  opacity: 0;
  transform-origin: top left;
  animation: kPQHBD 0.1s forwards;
  animation-delay: 0.01s;
}

.c1 [class*=MaskedInput__ContainerBox] {
  padding-block: 6px;
  padding-inline: 6px;
  gap: 6px;
  display: flex;
  flex-direction: column;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: none;
  border-radius: 9999px;
  padding: 5px 12px;
  font-size: 1.125rem;
  line-height: 1.5rem;
  padding: 5px 12px;
  color: #555555;
  border-style: solid;
  border-width: 1px;
  border-color: rgba(0, 0, 0, 0);
  border-radius: 6px;
  font-weight: 500;
  padding: 5px 12px;
  text-align: start;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c5:hover {
  background-color: rgba(0, 0, 0, 0.04);
  color: #555555;
  border-color: rgba(0, 0, 0, 0);
}

.c5:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c5:focus >circle,
.c5:focus >ellipse,
.c5:focus >line,
.c5:focus >path,
.c5:focus >polygon,
.c5:focus >polyline,
.c5:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c5:focus ::-moz-focus-inner {
  border: 0;
}

.c5:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) >circle,
.c5:focus:not(:focus-visible) >ellipse,
.c5:focus:not(:focus-visible) >line,
.c5:focus:not(:focus-visible) >path,
.c5:focus:not(:focus-visible) >polygon,
.c5:focus:not(:focus-visible) >polyline,
.c5:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: inherit;
}

.c3 div:has(input[type="search"]) {
  padding-bottom: 0;
}

.c4 {
  position: relative;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
  padding-top: 6px;
  padding-inline: 6px;
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.c4 [role="option"] {
  border-radius: 6px;
}

.c6 {
  display: block;
  width: 100%;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: flex;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      aria-multiselectable="true"
      class="c4"
      role="listbox"
      tabindex="-1"
    >
      <button
        aria-posinset="1"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="0"
        type="button"
      >
        1
      </button>
      <button
        aria-posinset="2"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="-1"
        type="button"
      >
        2
      </button>
      <div
        class="c7"
      />
    </div>
  </div>
</div>
`;

exports[`Select Controlled multiple onChange without valueKey or labelKey 3`] = `
"@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-left: 8px;
    margin-right: 8px;
  }
}
@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-left: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-right: 12px;
  }
}"
`;

exports[`Select Controlled multiple onChange without valueKey or labelKey 4`] = `
<div
  class="StyledBox-sc-13pk1d4-0 iPenqz StyledDrop-sc-16s5rx8-0 bdKJMF"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="StyledBox-sc-13pk1d4-0 fDLUqh StyledSelect__StyledContainer-sc-znp66n-0 gDZSzh"
    id="test-select__select-drop"
  >
    <div
      aria-multiselectable="true"
      class="StyledSelect__OptionsContainer-sc-znp66n-1 eUCEJD"
      role="listbox"
      tabindex="-1"
    >
      <button
        aria-posinset="1"
        aria-setsize="2"
        class="StyledButtonKind-sc-1vhfpnt-0 fUARKY StyledSelect__SelectOption-sc-znp66n-3 lkKTUk"
        role="option"
        tabindex="-1"
        type="button"
      >
        1
      </button>
      <button
        aria-posinset="2"
        aria-setsize="2"
        class="StyledButtonKind-sc-1vhfpnt-0 fUARKY StyledSelect__SelectOption-sc-znp66n-3 lkKTUk"
        role="option"
        tabindex="-1"
        type="button"
      >
        2
      </button>
      <div
        class="StyledBox-sc-13pk1d4-0 hylnGi"
      />
    </div>
  </div>
</div>
`;

exports[`Select Controlled multiple onChange without valueKey or labelKey 5`] = `
"@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-left: 8px;
    margin-right: 8px;
  }
}
@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-left: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-right: 12px;
  }
}"
`;

exports[`Select Controlled multiple onChange without valueKey or labelKey 6`] = `
<div
  class="StyledBox-sc-13pk1d4-0 iPenqz StyledDrop-sc-16s5rx8-0 bdKJMF"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="StyledBox-sc-13pk1d4-0 fDLUqh StyledSelect__StyledContainer-sc-znp66n-0 gDZSzh"
    id="test-select__select-drop"
  >
    <div
      aria-multiselectable="true"
      class="StyledSelect__OptionsContainer-sc-znp66n-1 eUCEJD"
      role="listbox"
      tabindex="-1"
    >
      <button
        aria-posinset="1"
        aria-setsize="2"
        class="StyledButtonKind-sc-1vhfpnt-0 fUARKY StyledSelect__SelectOption-sc-znp66n-3 lkKTUk"
        role="option"
        tabindex="-1"
        type="button"
      >
        1
      </button>
      <button
        aria-posinset="2"
        aria-setsize="2"
        class="StyledButtonKind-sc-1vhfpnt-0 fUARKY StyledSelect__SelectOption-sc-znp66n-3 lkKTUk"
        role="option"
        tabindex="-1"
        type="button"
      >
        2
      </button>
      <div
        class="StyledBox-sc-13pk1d4-0 hylnGi"
      />
    </div>
  </div>
</div>
`;

exports[`Select Controlled multiple onChange without valueKey or labelKey 7`] = `
"@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-left: 8px;
    margin-right: 8px;
  }
}
@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-left: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-right: 12px;
  }
}"
`;

exports[`Select Controlled multiple onChange without valueKey or labelKey 8`] = `
<DocumentFragment>
  .c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 16px;
  margin-right: 16px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 8px;
    margin-right: 8px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

<div
    class="c0"
  >
    <button
      aria-expanded="true"
      aria-haspopup="listbox"
      aria-label="test select; Selected: 1, 2"
      class="c1 c2"
      id="test-select"
      type="button"
    >
      <div
        class="c3"
      >
        <div
          class="c4"
        >
          <div
            class="c5"
          >
            <input
              autocomplete="off"
              class="c6 c7"
              id="test-select__input"
              inert=""
              placeholder="test select"
              readonly=""
              tabindex="-1"
              type="text"
              value="multiple"
            />
          </div>
        </div>
        <div
          class="c8"
          style="min-width: auto;"
        >
          <svg
            aria-label="Up"
            class="c9"
            viewBox="0 0 24 24"
          >
            <path
              d="m2 15.999 10.173-9.824 9.824 10.173"
              fill="none"
              stroke="#000"
              stroke-width="2"
            />
          </svg>
        </div>
      </div>
    </button>
  </div>
</DocumentFragment>
`;

exports[`Select Controlled multiple values 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 16px;
  margin-right: 16px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 8px;
    margin-right: 8px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="test select; Selected: one, two"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            inert=""
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value="multiple"
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select Controlled multiple values 2`] = `
<div
  class="StyledGrommet-sc-19lkkz7-0 iRGypN"
>
  <button
    aria-expanded="true"
    aria-haspopup="listbox"
    aria-label="test select; Selected: one, two"
    class="StyledButtonKind-sc-1vhfpnt-0 eWCPay StyledSelect__StyledSelectDropButton-sc-znp66n-5 eOYqUg"
    id="test-select"
    type="button"
  >
    <div
      class="StyledBox-sc-13pk1d4-0 edFWqF"
    >
      <div
        class="StyledBox-sc-13pk1d4-0 nwmdD"
      >
        <div
          class="StyledTextInput__StyledTextInputContainer-sc-1x30a0s-1 bSfyXe"
        >
          <input
            autocomplete="off"
            class="StyledTextInput-sc-1x30a0s-0 hXkQju StyledSelect__SelectTextInput-sc-znp66n-4 bGoxrS"
            id="test-select__input"
            inert=""
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value="multiple"
          />
        </div>
      </div>
      <div
        class="StyledBox-sc-13pk1d4-0 fByYbX"
        style="min-width: auto;"
      >
        .c0 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c0 g {
  fill: inherit;
  stroke: inherit;
}

.c0 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c0 *[stroke*='#'],
.c0 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c0 *[fill-rule],
.c0 *[FILL-RULE],
.c0 *[fill*='#'],
.c0 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {

}

<svg
          aria-label="Up"
          class="c0"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 15.999 10.173-9.824 9.824 10.173"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select Controlled multiple values 3`] = `
.c0 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 6px 12px 0px rgba(0, 0, 0, 0.12);
}

.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c7 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  height: 0px;
  flex: 0 0 auto;
}

.c1 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 6px;
  position: fixed;
  z-index: 110;
  outline: none;
  background-color: #ffffff;
  color: #555555;
  margin-top: 6px;
  opacity: 0;
  transform-origin: top left;
  animation: kPQHBD 0.1s forwards;
  animation-delay: 0.01s;
}

.c1 [class*=MaskedInput__ContainerBox] {
  padding-block: 6px;
  padding-inline: 6px;
  gap: 6px;
  display: flex;
  flex-direction: column;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: none;
  border-radius: 9999px;
  padding: 5px 12px;
  font-size: 1.125rem;
  line-height: 1.5rem;
  padding: 5px 12px;
  color: #555555;
  border-style: solid;
  border-width: 1px;
  border-color: rgba(0, 0, 0, 0);
  border-radius: 6px;
  font-weight: 500;
  padding: 5px 12px;
  background-color: #d1ffee;
  color: #2e2e2e;
  border-color: rgba(0, 0, 0, 0);
  font-weight: 500;
  position: relative;
  text-align: start;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c5::before {
  display: block;
  position: absolute;
  content: '';
  width: 6px;
  border-top-left-radius: 9999px;
  border-bottom-left-radius: 9999px;
  top: -1px;
  bottom: -1px;
  left: -1px;
  background: #006750;
}

.c5:hover {
  background-color: rgba(0, 0, 0, 0.04);
  color: #555555;
  border-color: rgba(0, 0, 0, 0);
  background: #aafade;
  color: #2e2e2e;
}

.c5:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c5:focus >circle,
.c5:focus >ellipse,
.c5:focus >line,
.c5:focus >path,
.c5:focus >polygon,
.c5:focus >polyline,
.c5:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c5:focus ::-moz-focus-inner {
  border: 0;
}

.c5:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) >circle,
.c5:focus:not(:focus-visible) >ellipse,
.c5:focus:not(:focus-visible) >line,
.c5:focus:not(:focus-visible) >path,
.c5:focus:not(:focus-visible) >polygon,
.c5:focus:not(:focus-visible) >polyline,
.c5:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: inherit;
}

.c3 div:has(input[type="search"]) {
  padding-bottom: 0;
}

.c4 {
  position: relative;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
  padding-top: 6px;
  padding-inline: 6px;
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.c4 [role="option"] {
  border-radius: 6px;
}

.c6 {
  display: block;
  width: 100%;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: flex;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      aria-multiselectable="true"
      class="c4"
      role="listbox"
      tabindex="-1"
    >
      <button
        aria-posinset="1"
        aria-selected="true"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="0"
        type="button"
      >
        one
      </button>
      <button
        aria-posinset="2"
        aria-selected="true"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="0"
        type="button"
      >
        two
      </button>
      <div
        class="c7"
      />
    </div>
  </div>
</div>
`;

exports[`Select Controlled multiple values 4`] = `
"@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-left: 8px;
    margin-right: 8px;
  }
}
@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-left: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-right: 12px;
  }
}"
`;

exports[`Select Controlled multiple with empty results 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 16px;
  margin-right: 16px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 8px;
    margin-right: 8px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="test select; Selected: "
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            inert=""
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select Controlled multiple with empty results 2`] = `
.c0 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  overflow: auto;
  box-shadow: 0px 6px 12px 0px rgba(0, 0, 0, 0.12);
}

.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}

.c7 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  height: 0px;
  flex: 0 0 auto;
}

.c1 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  border-radius: 6px;
  position: fixed;
  z-index: 110;
  outline: none;
  background-color: #ffffff;
  color: #555555;
  margin-top: 6px;
  opacity: 0;
  transform-origin: top left;
  animation: kPQHBD 0.1s forwards;
  animation-delay: 0.01s;
}

.c1 [class*=MaskedInput__ContainerBox] {
  padding-block: 6px;
  padding-inline: 6px;
  gap: 6px;
  display: flex;
  flex-direction: column;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  border: none;
  border-radius: 9999px;
  padding: 5px 12px;
  font-size: 1.125rem;
  line-height: 1.5rem;
  padding: 5px 12px;
  color: #555555;
  border-style: solid;
  border-width: 1px;
  border-color: rgba(0, 0, 0, 0);
  border-radius: 6px;
  font-weight: 500;
  padding: 5px 12px;
  text-align: start;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c5:hover {
  background-color: rgba(0, 0, 0, 0.04);
  color: #555555;
  border-color: rgba(0, 0, 0, 0);
}

.c5:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c5:focus >circle,
.c5:focus >ellipse,
.c5:focus >line,
.c5:focus >path,
.c5:focus >polygon,
.c5:focus >polyline,
.c5:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c5:focus ::-moz-focus-inner {
  border: 0;
}

.c5:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) >circle,
.c5:focus:not(:focus-visible) >ellipse,
.c5:focus:not(:focus-visible) >line,
.c5:focus:not(:focus-visible) >path,
.c5:focus:not(:focus-visible) >polygon,
.c5:focus:not(:focus-visible) >polyline,
.c5:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c3 {
  max-height: inherit;
}

.c3 div:has(input[type="search"]) {
  padding-bottom: 0;
}

.c4 {
  position: relative;
  scroll-behavior: smooth;
  overflow: auto;
  outline: none;
  padding-top: 6px;
  padding-inline: 6px;
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.c4 [role="option"] {
  border-radius: 6px;
}

.c6 {
  display: block;
  width: 100%;
}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media only screen and (max-width: 768px) {

}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c1 {
    display: flex;
    align-items: stretch;
  }
}

@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none) {
  .c3 {
    width: 100%;
  }
}

<div
  class="c0 c1"
  data-g-portal-id="0"
  id="test-select__drop"
  style="left: 0px; width: 0.1px; top: 0px; max-height: 768px;"
  tabindex="-1"
>
  <div
    class="c2 c3"
    id="test-select__select-drop"
  >
    <div
      aria-multiselectable="true"
      class="c4"
      role="listbox"
      tabindex="-1"
    >
      <button
        aria-posinset="1"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="0"
        type="button"
      >
        one
      </button>
      <button
        aria-posinset="2"
        aria-selected="false"
        aria-setsize="2"
        class="c5 c6"
        role="option"
        tabindex="-1"
        type="button"
      >
        two
      </button>
      <div
        class="c7"
      />
    </div>
  </div>
</div>
`;

exports[`Select Controlled multiple with empty results 3`] = `
"@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-left: 8px;
    margin-right: 8px;
  }
}
@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-left: 6px;
  }
}
@media only screen and (max-width: 768px) {
  .fByYbX {
    margin-right: 12px;
  }
}"
`;

exports[`Select Controlled select another option 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 16px;
  margin-right: 16px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 8px;
    margin-right: 8px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="test select; Selected: two"
    class="c1 c2"
    id="test-select"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            autocomplete="off"
            class="c6 c7"
            id="test-select__input"
            inert=""
            placeholder="test select"
            readonly=""
            tabindex="-1"
            type="text"
            value="two"
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;

exports[`Select Controlled should not have accessibility violations 1`] = `
.c9 {
  display: inline-block;
  flex: 0 0 auto;
  width: 18px;
  height: 18px;
  fill: #555555;
  stroke: #555555;
}

.c9 g {
  fill: inherit;
  stroke: inherit;
}

.c9 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c9 *[stroke*='#'],
.c9 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c9 *[fill-rule],
.c9 *[FILL-RULE],
.c9 *[fill*='#'],
.c9 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  justify-content: space-between;
}

.c4 {
  display: flex;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  flex: 1 1;
  flex-basis: auto;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  margin-left: 16px;
  margin-right: 16px;
  margin-left: 12px;
  margin-right: 12px;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  flex: 0 0 auto;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c6 {
  box-sizing: border-box;
  font-size: inherit;
  font-family: inherit;
  border: none;
  -webkit-appearance: none;
  background: transparent;
  color: inherit;
  width: 100%;
  line-height: inherit;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 5px;
  padding-bottom: 5px;
  font-weight: 400;
  margin: 0;
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
  color: #2e2e2e;
  border: none;
  outline: none;
  border: none;
}

.c6::-webkit-input-placeholder {
  color: #676767;
}

.c6::-moz-placeholder {
  color: #676767;
}

.c6:-ms-input-placeholder {
  color: #676767;
}

.c6 ::-webkit-search-decoration {
  -webkit-appearance: none;
}

.c6::-moz-focus-inner {
  border: none;
  outline: none;
}

.c6:-moz-placeholder,
.c6::-moz-placeholder {
  opacity: 1;
}

.c6::-webkit-input-placeholder {
  font-weight: 400;
}

.c6::-moz-placeholder {
  font-weight: 400;
}

.c6:-ms-input-placeholder {
  font-weight: 400;
}

.c5 {
  position: relative;
  width: 100%;
}

.c5 svg {
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 {
  cursor: pointer;
}

.c2 {
  border: 1px solid rgba(0, 0, 0, 0.36);
  border-radius: 8px;
}

.c2[class*="SelectMultiple"] [role="listbox"] {
  padding-block: 6px;
  padding-inline: 6px;
}

.c2[class*="SelectMultiple"] [role="listbox"] [role='option'] {
  border-radius: 6px;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 8px;
    margin-right: 8px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-left: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    margin-right: 12px;
  }
}

<div
  class="c0"
>
  <button
    aria-expanded="false"
    aria-haspopup="listbox"
    aria-label="test"
    class="c1 c2"
    type="button"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c5"
        >
          <input
            aria-label="test"
            autocomplete="off"
            class="c6 c7"
            inert=""
            readonly=""
            tabindex="-1"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        class="c8"
        style="min-width: auto;"
      >
        <svg
          aria-label="Down"
          class="c9"
          viewBox="0 0 24 24"
        >
          <path
            d="m2 8.35 10.173 9.823L21.997 8"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </div>
    </div>
  </button>
</div>
`;
