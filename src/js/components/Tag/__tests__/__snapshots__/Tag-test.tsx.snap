// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`Tag basic 1`] = `
.c1 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  border: solid 1px rgba(0, 0, 0, 0.12);
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  min-width: min-content;
  flex: 0 0 auto;
  border-radius: 6px;
}

.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  min-width: min-content;
  padding-left: 10px;
  padding-right: 10px;
  padding-top: 5px;
  padding-bottom: 5px;
}

.c3 {
  font-size: 1.125rem;
  line-height: 1.5rem;
  font-weight: 400;
}

.c4 {
  font-size: 1.125rem;
  line-height: 1.5rem;
  font-weight: 500;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c1 {
    border: solid 1px rgba(0, 0, 0, 0.12);
  }
}

@media only screen and (max-width: 768px) {
  .c1 {
    border-radius: 4px;
  }
}

@media only screen and (max-width: 768px) {
  .c2 {
    padding-left: 10px;
    padding-right: 10px;
  }
}

@media only screen and (max-width: 768px) {
  .c2 {
    padding-top: 5px;
    padding-bottom: 5px;
  }
}

<div
  class="c0"
>
  <div
    class="c1"
  >
    <div
      class="c2"
    >
      <span
        class="c3"
      >
        <span
          class="c3"
        >
           
          Name
        </span>
        <span
          class="c3"
        >
           : 
        </span>
        <span
          class="c4"
        >
          Value
        </span>
      </span>
    </div>
  </div>
</div>
`;

exports[`Tag basic outside grommet wrapper 1`] = `
.c0 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  border: solid 1px rgba(0, 0, 0, 0.33);
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  min-width: min-content;
  flex: 0 0 auto;
  border-radius: 48px;
}

.c1 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  min-width: min-content;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 6px;
  padding-bottom: 6px;
}

.c2 {
  font-size: 18px;
  line-height: 24px;
}

.c3 {
  font-size: 18px;
  line-height: 24px;
  font-weight: 600;
}

@media only screen and (max-width: 768px) {
  .c0 {
    border: solid 1px rgba(0, 0, 0, 0.33);
  }
}

@media only screen and (max-width: 768px) {
  .c0 {
    border-radius: 24px;
  }
}

@media only screen and (max-width: 768px) {
  .c1 {
    padding-left: 6px;
    padding-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c1 {
    padding-top: 3px;
    padding-bottom: 3px;
  }
}

<div
  class="c0"
>
  <div
    class="c1"
  >
    <span
      class="c2"
    >
      <span
        class="c2"
      >
         
        Name
      </span>
      <span
        class="c2"
      >
         : 
      </span>
      <span
        class="c3"
      >
        Value
      </span>
    </span>
  </div>
</div>
`;

exports[`Tag onClick 1`] = `
.c3 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  min-width: min-content;
  padding-left: 10px;
  padding-right: 10px;
  padding-top: 5px;
  padding-bottom: 5px;
}

.c4 {
  font-size: 1.125rem;
  line-height: 1.5rem;
  font-weight: 400;
}

.c5 {
  font-size: 1.125rem;
  line-height: 1.5rem;
  font-weight: 500;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  color: inherit;
}

.c1:hover {
  background-color: rgba(0, 0, 0, 0.04);
  color: #555555;
}

.c1:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c1:focus >circle,
.c1:focus >ellipse,
.c1:focus >line,
.c1:focus >path,
.c1:focus >polygon,
.c1:focus >polyline,
.c1:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c1:focus ::-moz-focus-inner {
  border: 0;
}

.c1:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) >circle,
.c1:focus:not(:focus-visible) >ellipse,
.c1:focus:not(:focus-visible) >line,
.c1:focus:not(:focus-visible) >path,
.c1:focus:not(:focus-visible) >polygon,
.c1:focus:not(:focus-visible) >polyline,
.c1:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c1:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c2 {
  border: solid 1px rgba(0, 0, 0, 0.12);
  border-radius: 6px;
}

@media only screen and (max-width: 768px) {
  .c3 {
    padding-left: 10px;
    padding-right: 10px;
  }
}

@media only screen and (max-width: 768px) {
  .c3 {
    padding-top: 5px;
    padding-bottom: 5px;
  }
}

@media only screen and (max-width: 768px) {
  .c2 {
    border: solid 1px rgba(0, 0, 0, 0.12);
  }
}

@media only screen and (max-width: 768px) {
  .c2 {
    border-radius: 4px;
  }
}

<div
  class="c0"
>
  <button
    class="c1 c2"
    type="button"
  >
    <div
      class="c3"
    >
      <span
        class="c4"
      >
        <span
          class="c5"
        >
          Test
        </span>
      </span>
    </div>
  </button>
</div>
`;

exports[`Tag onRemove 1`] = `
.c7 {
  display: inline-block;
  flex: 0 0 auto;
  width: 16px;
  height: 16px;
  fill: #2e2e2e;
  stroke: #2e2e2e;
}

.c7 g {
  fill: inherit;
  stroke: inherit;
}

.c7 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c7 *[stroke*='#'],
.c7 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c7 *[fill-rule],
.c7 *[FILL-RULE],
.c7 *[fill*='#'],
.c7 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c1 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  border: solid 1px rgba(0, 0, 0, 0.12);
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  min-width: min-content;
  flex: 0 0 auto;
  border-radius: 6px;
}

.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  min-width: min-content;
  padding-left: 10px;
  padding-right: 10px;
  padding-top: 5px;
  padding-bottom: 5px;
}

.c3 {
  font-size: 1.125rem;
  line-height: 1.5rem;
  font-weight: 400;
}

.c4 {
  font-size: 1.125rem;
  line-height: 1.5rem;
  font-weight: 500;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  margin-right: 3px;
  border: none;
  border-radius: 9999px;
  padding: 5px 5px;
  font-size: 1rem;
  line-height: 0;
  background-color: rgba(0, 0, 0, 0);
  color: #2e2e2e;
  border-style: solid;
  border-width: 1px;
  border-color: rgba(0, 0, 0, 0);
  border-radius: 9999px;
  font-weight: 500;
  padding: 5px 5px;
  text-align: center;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c5 >svg {
  display: flex;
  align-self: center;
  vertical-align: middle;
}

.c5:hover {
  background-color: rgba(0, 0, 0, 0.04);
  color: #2e2e2e;
  border-color: rgba(0, 0, 0, 0);
  font-weight: 500;
}

.c5:focus {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c5:focus >circle,
.c5:focus >ellipse,
.c5:focus >line,
.c5:focus >path,
.c5:focus >polygon,
.c5:focus >polyline,
.c5:focus >rect {
  outline-offset: 2px;
  outline: 2px solid #004233;
  box-shadow: 0 0 0px 2px #ffffff;
}

.c5:focus ::-moz-focus-inner {
  border: 0;
}

.c5:focus:not(:focus-visible) {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) >circle,
.c5:focus:not(:focus-visible) >ellipse,
.c5:focus:not(:focus-visible) >line,
.c5:focus:not(:focus-visible) >path,
.c5:focus:not(:focus-visible) >polygon,
.c5:focus:not(:focus-visible) >polyline,
.c5:focus:not(:focus-visible) >rect {
  outline-offset: 0px;
  outline: none;
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c6 {
  border-radius: 6px;
}

@media only screen and (max-width: 768px) {
  .c1 {
    border: solid 1px rgba(0, 0, 0, 0.12);
  }
}

@media only screen and (max-width: 768px) {
  .c1 {
    border-radius: 4px;
  }
}

@media only screen and (max-width: 768px) {
  .c2 {
    padding-left: 10px;
    padding-right: 10px;
  }
}

@media only screen and (max-width: 768px) {
  .c2 {
    padding-top: 5px;
    padding-bottom: 5px;
  }
}

@media only screen and (max-width: 768px) {
  .c6 {
    border-radius: 4px;
  }
}

<div
  class="c0"
>
  <div
    class="c1"
  >
    <div
      class="c2"
    >
      <span
        class="c3"
      >
        <span
          class="c4"
        >
          Test
        </span>
      </span>
    </div>
    <button
      aria-label="Remove Test"
      class="c5 c6"
      type="button"
    >
      <svg
        aria-label="Close"
        class="c7"
        viewBox="0 0 24 24"
      >
        <path
          d="m3 3 18 18M3 21 21 3"
          fill="none"
          stroke="#000"
          stroke-width="2"
          vector-effect="non-scaling-stroke"
        />
      </svg>
    </button>
  </div>
</div>
`;

exports[`Tag renders custom remove button kind and size 1`] = `
<DocumentFragment>
  .c7 {
  display: inline-block;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #444444;
  stroke: #444444;
}

.c7 g {
  fill: inherit;
  stroke: inherit;
}

.c7 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c7 *[stroke*='#'],
.c7 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c7 *[fill-rule],
.c7 *[FILL-RULE],
.c7 *[fill*='#'],
.c7 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c12 {
  display: inline-block;
  flex: 0 0 auto;
  width: 30px;
  height: 30px;
  fill: #444444;
  stroke: #444444;
}

.c12 g {
  fill: inherit;
  stroke: inherit;
}

.c12 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c12 *[stroke*='#'],
.c12 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c12 *[fill-rule],
.c12 *[FILL-RULE],
.c12 *[fill*='#'],
.c12 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c17 {
  display: inline-block;
  flex: 0 0 auto;
  width: 36px;
  height: 36px;
  fill: #444444;
  stroke: #444444;
}

.c17 g {
  fill: inherit;
  stroke: inherit;
}

.c17 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c17 *[stroke*='#'],
.c17 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c17 *[fill-rule],
.c17 *[FILL-RULE],
.c17 *[fill*='#'],
.c17 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c1 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  border: solid 1px rgba(0, 0, 0, 0.33);
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  min-width: min-content;
  flex: 0 0 auto;
  border-radius: 48px;
}

.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  min-width: min-content;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 6px;
  padding-bottom: 6px;
}

.c8 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  min-width: min-content;
  padding-left: 16px;
  padding-right: 16px;
  padding-top: 6px;
  padding-bottom: 6px;
}

.c13 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  min-width: min-content;
  padding-left: 18px;
  padding-right: 18px;
  padding-top: 6px;
  padding-bottom: 6px;
}

.c3 {
  font-size: 18px;
  line-height: 24px;
}

.c4 {
  font-size: 18px;
  line-height: 24px;
  font-weight: 600;
}

.c9 {
  font-size: 22px;
  line-height: 28px;
}

.c10 {
  font-size: 22px;
  line-height: 28px;
  font-weight: 600;
}

.c14 {
  font-size: 26px;
  line-height: 32px;
}

.c15 {
  font-size: 26px;
  line-height: 32px;
  font-weight: 600;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  margin: 12px;
  border: none;
  border-radius: 18px;
  padding: 4px 20px;
  font-size: 14px;
  line-height: 0;
  background: blue;
  text-align: center;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c5 >svg {
  display: flex;
  align-self: center;
  vertical-align: middle;
}

.c5:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus >circle,
.c5:focus >ellipse,
.c5:focus >line,
.c5:focus >path,
.c5:focus >polygon,
.c5:focus >polyline,
.c5:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus ::-moz-focus-inner {
  border: 0;
}

.c5:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) >circle,
.c5:focus:not(:focus-visible) >ellipse,
.c5:focus:not(:focus-visible) >line,
.c5:focus:not(:focus-visible) >path,
.c5:focus:not(:focus-visible) >polygon,
.c5:focus:not(:focus-visible) >polyline,
.c5:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c11 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  margin-left: 18px;
  margin-right: 18px;
  margin-top: 12px;
  margin-bottom: 12px;
  border: none;
  border-radius: 18px;
  padding: 4px 22px;
  font-size: 18px;
  line-height: 0;
  background: blue;
  text-align: center;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c11 >svg {
  display: flex;
  align-self: center;
  vertical-align: middle;
}

.c11:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c11:focus >circle,
.c11:focus >ellipse,
.c11:focus >line,
.c11:focus >path,
.c11:focus >polygon,
.c11:focus >polyline,
.c11:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c11:focus ::-moz-focus-inner {
  border: 0;
}

.c11:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c11:focus:not(:focus-visible) >circle,
.c11:focus:not(:focus-visible) >ellipse,
.c11:focus:not(:focus-visible) >line,
.c11:focus:not(:focus-visible) >path,
.c11:focus:not(:focus-visible) >polygon,
.c11:focus:not(:focus-visible) >polyline,
.c11:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c11:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c16 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  margin: 10px;
  border: none;
  border-radius: 24px;
  padding: 8px 32px;
  font-size: 22px;
  line-height: 0;
  background: blue;
  text-align: center;
  transition-property: color,background-color,border-color,box-shadow;
  transition-duration: 0.1s;
  transition-timing-function: ease-in-out;
}

.c16 >svg {
  display: flex;
  align-self: center;
  vertical-align: middle;
}

.c16:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c16:focus >circle,
.c16:focus >ellipse,
.c16:focus >line,
.c16:focus >path,
.c16:focus >polygon,
.c16:focus >polyline,
.c16:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c16:focus ::-moz-focus-inner {
  border: 0;
}

.c16:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c16:focus:not(:focus-visible) >circle,
.c16:focus:not(:focus-visible) >ellipse,
.c16:focus:not(:focus-visible) >line,
.c16:focus:not(:focus-visible) >path,
.c16:focus:not(:focus-visible) >polygon,
.c16:focus:not(:focus-visible) >polyline,
.c16:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c16:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c6 {
  border-radius: 48px;
}

@media only screen and (max-width: 768px) {
  .c1 {
    border: solid 1px rgba(0, 0, 0, 0.33);
  }
}

@media only screen and (max-width: 768px) {
  .c1 {
    border-radius: 24px;
  }
}

@media only screen and (max-width: 768px) {
  .c2 {
    padding-left: 6px;
    padding-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c2 {
    padding-top: 3px;
    padding-bottom: 3px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    padding-left: 16px;
    padding-right: 16px;
  }
}

@media only screen and (max-width: 768px) {
  .c8 {
    padding-top: 3px;
    padding-bottom: 3px;
  }
}

@media only screen and (max-width: 768px) {
  .c13 {
    padding-left: 18px;
    padding-right: 18px;
  }
}

@media only screen and (max-width: 768px) {
  .c13 {
    padding-top: 3px;
    padding-bottom: 3px;
  }
}

@media only screen and (max-width: 768px) {
  .c6 {
    border-radius: 24px;
  }
}

<div
    class="c0"
  >
    <div
      class="c1"
    >
      <div
        class="c2"
      >
        <span
          class="c3"
        >
          <span
            class="c4"
          >
            Value
          </span>
        </span>
      </div>
      <button
        aria-label="Remove Value"
        class="c5 c6"
        type="button"
      >
        <svg
          aria-label="FormClose"
          class="c7"
          viewBox="0 0 24 24"
        >
          <path
            d="m7 7 10 10M7 17 17 7"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </button>
    </div>
    <div
      class="c1"
    >
      <div
        class="c2"
      >
        <span
          class="c3"
        >
          <span
            class="c4"
          >
            Value
          </span>
        </span>
      </div>
      <button
        aria-label="Remove Value"
        class="c5 c6"
        type="button"
      >
        <svg
          aria-label="FormClose"
          class="c7"
          viewBox="0 0 24 24"
        >
          <path
            d="m7 7 10 10M7 17 17 7"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </button>
    </div>
    <div
      class="c1"
    >
      <div
        class="c8"
      >
        <span
          class="c9"
        >
          <span
            class="c10"
          >
            Value
          </span>
        </span>
      </div>
      <button
        aria-label="Remove Value"
        class="c11 c6"
        type="button"
      >
        <svg
          aria-label="FormClose"
          class="c12"
          viewBox="0 0 24 24"
        >
          <path
            d="m7 7 10 10M7 17 17 7"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </button>
    </div>
    <div
      class="c1"
    >
      <div
        class="c13"
      >
        <span
          class="c14"
        >
          <span
            class="c15"
          >
            Value
          </span>
        </span>
      </div>
      <button
        aria-label="Remove Value"
        class="c16 c6"
        type="button"
      >
        <svg
          aria-label="FormClose"
          class="c17"
          viewBox="0 0 24 24"
        >
          <path
            d="m7 7 10 10M7 17 17 7"
            fill="none"
            stroke="#000"
            stroke-width="2"
          />
        </svg>
      </button>
    </div>
  </div>
</DocumentFragment>
`;

exports[`Tag renders custom remove icon 1`] = `
.c1 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  border: solid 1px rgba(0, 0, 0, 0.33);
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  min-width: min-content;
  flex: 0 0 auto;
  border-radius: 48px;
}

.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  min-width: min-content;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 6px;
  padding-bottom: 6px;
}

.c3 {
  font-size: 18px;
  line-height: 24px;
}

.c4 {
  font-size: 18px;
  line-height: 24px;
  font-weight: 600;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  margin-right: 6px;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  line-height: 0;
}

.c5:hover {
  background-color: rgba(221, 221, 221, 0.4);
  color: #000000;
}

.c5:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus >circle,
.c5:focus >ellipse,
.c5:focus >line,
.c5:focus >path,
.c5:focus >polygon,
.c5:focus >polyline,
.c5:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c5:focus ::-moz-focus-inner {
  border: 0;
}

.c5:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) >circle,
.c5:focus:not(:focus-visible) >ellipse,
.c5:focus:not(:focus-visible) >line,
.c5:focus:not(:focus-visible) >path,
.c5:focus:not(:focus-visible) >polygon,
.c5:focus:not(:focus-visible) >polyline,
.c5:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c5:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c0 {
  font-size: 18px;
  line-height: 24px;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.c6 {
  border-radius: 48px;
}

@media only screen and (max-width: 768px) {
  .c1 {
    border: solid 1px rgba(0, 0, 0, 0.33);
  }
}

@media only screen and (max-width: 768px) {
  .c1 {
    border-radius: 24px;
  }
}

@media only screen and (max-width: 768px) {
  .c2 {
    padding-left: 6px;
    padding-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c2 {
    padding-top: 3px;
    padding-bottom: 3px;
  }
}

@media only screen and (max-width: 768px) {
  .c6 {
    border-radius: 24px;
  }
}

<div
  class="c0"
>
  <div
    class="c1"
  >
    <div
      class="c2"
    >
      <span
        class="c3"
      >
        <span
          class="c4"
        >
          Value
        </span>
      </span>
    </div>
    <button
      aria-label="Remove Value"
      class="c5 c6"
      type="button"
    >
      <svg
        data-testid="custom-remove-icon"
      />
    </button>
  </div>
</div>
`;

exports[`Tag renders default remove icon 1`] = `
.c6 {
  display: inline-block;
  flex: 0 0 auto;
  width: 24px;
  height: 24px;
  fill: #666666;
  stroke: #666666;
}

.c6 g {
  fill: inherit;
  stroke: inherit;
}

.c6 *:not([stroke])[fill='none'] {
  stroke-width: 0;
}

.c6 *[stroke*='#'],
.c6 *[STROKE*='#'] {
  stroke: inherit;
  fill: none;
}

.c6 *[fill-rule],
.c6 *[FILL-RULE],
.c6 *[fill*='#'],
.c6 *[FILL*='#'] {
  fill: inherit;
  stroke: none;
}

.c0 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  border: solid 1px rgba(0, 0, 0, 0.33);
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  min-width: min-content;
  flex: 0 0 auto;
  border-radius: 48px;
}

.c1 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  min-width: min-content;
  padding-left: 12px;
  padding-right: 12px;
  padding-top: 6px;
  padding-bottom: 6px;
}

.c2 {
  font-size: 18px;
  line-height: 24px;
}

.c3 {
  font-size: 18px;
  line-height: 24px;
  font-weight: 600;
}

.c4 {
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  font: inherit;
  text-decoration: none;
  margin: 0;
  background: transparent;
  overflow: visible;
  text-transform: none;
  margin-right: 6px;
  color: inherit;
  outline: none;
  border: none;
  padding: 0;
  text-align: inherit;
  line-height: 0;
}

.c4:hover {
  background-color: rgba(221, 221, 221, 0.4);
  color: #000000;
}

.c4:focus {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c4:focus >circle,
.c4:focus >ellipse,
.c4:focus >line,
.c4:focus >path,
.c4:focus >polygon,
.c4:focus >polyline,
.c4:focus >rect {
  outline: none;
  box-shadow: 0 0 2px 2px #6FFFB0;
}

.c4:focus ::-moz-focus-inner {
  border: 0;
}

.c4:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.c4:focus:not(:focus-visible) >circle,
.c4:focus:not(:focus-visible) >ellipse,
.c4:focus:not(:focus-visible) >line,
.c4:focus:not(:focus-visible) >path,
.c4:focus:not(:focus-visible) >polygon,
.c4:focus:not(:focus-visible) >polyline,
.c4:focus:not(:focus-visible) >rect {
  outline: none;
  box-shadow: none;
}

.c4:focus:not(:focus-visible) ::-moz-focus-inner {
  border: 0;
}

.c5 {
  border-radius: 48px;
}

@media only screen and (max-width: 768px) {
  .c0 {
    border: solid 1px rgba(0, 0, 0, 0.33);
  }
}

@media only screen and (max-width: 768px) {
  .c0 {
    border-radius: 24px;
  }
}

@media only screen and (max-width: 768px) {
  .c1 {
    padding-left: 6px;
    padding-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c1 {
    padding-top: 3px;
    padding-bottom: 3px;
  }
}

@media only screen and (max-width: 768px) {
  .c5 {
    border-radius: 24px;
  }
}

<div>
  <div
    class="c0"
  >
    <div
      class="c1"
    >
      <span
        class="c2"
      >
        <span
          class="c3"
        >
          Value
        </span>
      </span>
    </div>
    <button
      aria-label="Remove Value"
      class="c4 c5"
      type="button"
    >
      <svg
        aria-label="FormClose"
        class="c6"
        viewBox="0 0 24 24"
      >
        <path
          d="m7 7 10 10M7 17 17 7"
          fill="none"
          stroke="#000"
          stroke-width="2"
        />
      </svg>
    </button>
  </div>
</div>
`;

exports[`Tag size 1`] = `
.c1 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  align-items: center;
  border: solid 1px rgba(0, 0, 0, 0.12);
  min-width: 0;
  min-height: 0;
  flex-direction: row;
  min-width: min-content;
  flex: 0 0 auto;
  border-radius: 6px;
}

.c2 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  min-width: min-content;
  padding-left: 6px;
  padding-right: 6px;
  padding-top: 3px;
  padding-bottom: 3px;
}

.c7 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  min-width: min-content;
  padding-left: 10px;
  padding-right: 10px;
  padding-top: 5px;
  padding-bottom: 5px;
}

.c10 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  min-width: min-content;
  padding-left: 18px;
  padding-right: 18px;
  padding-top: 9px;
  padding-bottom: 9px;
}

.c13 {
  display: flex;
  box-sizing: border-box;
  max-width: 100%;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
  min-width: min-content;
  padding-left: 24px;
  padding-right: 24px;
  padding-top: 20px;
  padding-bottom: 20px;
}

.c3 {
  font-size: 0.875rem;
  line-height: 1rem;
  font-weight: 400;
}

.c4 {
  font-size: 0.875rem;
  line-height: 1rem;
  font-weight: 500;
}

.c5 {
  font-size: 1rem;
  line-height: 1.25rem;
  font-weight: 400;
}

.c6 {
  font-size: 1rem;
  line-height: 1.25rem;
  font-weight: 500;
}

.c8 {
  font-size: 1.125rem;
  line-height: 1.5rem;
  font-weight: 400;
}

.c9 {
  font-size: 1.125rem;
  line-height: 1.5rem;
  font-weight: 500;
}

.c11 {
  font-size: 1.375rem;
  line-height: 1.75rem;
  font-weight: 400;
}

.c12 {
  font-size: 1.375rem;
  line-height: 1.75rem;
  font-weight: 500;
}

.c14 {
  font-size: 1.5rem;
  line-height: 1.875rem;
  font-weight: 400;
}

.c15 {
  font-size: 1.5rem;
  line-height: 1.875rem;
  font-weight: 500;
}

.c0 {
  font-family: 'Metric',Arial,sans-serif;
  font-size: 1.125rem;
  line-height: 1.5rem;
  background-color: #ffffff;
  color: #555555;
  box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@media only screen and (max-width: 768px) {
  .c1 {
    border: solid 1px rgba(0, 0, 0, 0.12);
  }
}

@media only screen and (max-width: 768px) {
  .c1 {
    border-radius: 4px;
  }
}

@media only screen and (max-width: 768px) {
  .c2 {
    padding-left: 6px;
    padding-right: 6px;
  }
}

@media only screen and (max-width: 768px) {
  .c2 {
    padding-top: 3px;
    padding-bottom: 3px;
  }
}

@media only screen and (max-width: 768px) {
  .c7 {
    padding-left: 10px;
    padding-right: 10px;
  }
}

@media only screen and (max-width: 768px) {
  .c7 {
    padding-top: 5px;
    padding-bottom: 5px;
  }
}

@media only screen and (max-width: 768px) {
  .c10 {
    padding-left: 18px;
    padding-right: 18px;
  }
}

@media only screen and (max-width: 768px) {
  .c10 {
    padding-top: 9px;
    padding-bottom: 9px;
  }
}

@media only screen and (max-width: 768px) {
  .c13 {
    padding-left: 24px;
    padding-right: 24px;
  }
}

@media only screen and (max-width: 768px) {
  .c13 {
    padding-top: 20px;
    padding-bottom: 20px;
  }
}

<div
  class="c0"
>
  <div
    class="c1"
  >
    <div
      class="c2"
    >
      <span
        class="c3"
      >
        <span
          class="c3"
        >
           
          Name
        </span>
        <span
          class="c3"
        >
           : 
        </span>
        <span
          class="c4"
        >
          Value
        </span>
      </span>
    </div>
  </div>
  <div
    class="c1"
  >
    <div
      class="c2"
    >
      <span
        class="c5"
      >
        <span
          class="c5"
        >
           
          Name
        </span>
        <span
          class="c5"
        >
           : 
        </span>
        <span
          class="c6"
        >
          Value
        </span>
      </span>
    </div>
  </div>
  <div
    class="c1"
  >
    <div
      class="c7"
    >
      <span
        class="c8"
      >
        <span
          class="c8"
        >
           
          Name
        </span>
        <span
          class="c8"
        >
           : 
        </span>
        <span
          class="c9"
        >
          Value
        </span>
      </span>
    </div>
  </div>
  <div
    class="c1"
  >
    <div
      class="c10"
    >
      <span
        class="c11"
      >
        <span
          class="c11"
        >
           
          Name
        </span>
        <span
          class="c11"
        >
           : 
        </span>
        <span
          class="c12"
        >
          Value
        </span>
      </span>
    </div>
  </div>
  <div
    class="c1"
  >
    <div
      class="c13"
    >
      <span
        class="c14"
      >
        <span
          class="c14"
        >
           
          Name
        </span>
        <span
          class="c14"
        >
           : 
        </span>
        <span
          class="c15"
        >
          Value
        </span>
      </span>
    </div>
  </div>
</div>
`;
